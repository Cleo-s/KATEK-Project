{
  "version": 3,
  "sources": ["browser-external:events", "browser-external:util", "../../abstract-logging/index.js", "../../activedirectory2/node_modules/ldapjs/lib/logger.js", "../../activedirectory2/node_modules/ldapjs/lib/client/request-queue/enqueue.js", "../../activedirectory2/node_modules/ldapjs/lib/client/request-queue/flush.js", "browser-external:assert", "browser-external:stream", "../../assert-plus/assert.js", "../../asn1/lib/ber/errors.js", "../../asn1/lib/ber/types.js", "browser-external:buffer", "../../safer-buffer/safer.js", "../../asn1/lib/ber/reader.js", "../../asn1/lib/ber/writer.js", "../../asn1/lib/ber/index.js", "../../asn1/lib/index.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/entry_change_notification_control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/persistent_search_control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/paged_results_control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/server_side_sorting_request_control.js", "../../activedirectory2/node_modules/ldapjs/lib/errors/codes.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/server_side_sorting_response_control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/virtual_list_view_request_control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/virtual_list_view_response_control.js", "../../activedirectory2/node_modules/ldapjs/lib/controls/index.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/message.js", "../../activedirectory2/node_modules/ldapjs/lib/dtrace.js", "../../activedirectory2/node_modules/ldapjs/lib/protocol.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/result.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/abandon_request.js", "../../activedirectory2/node_modules/ldapjs/lib/attribute.js", "../../activedirectory2/node_modules/ldapjs/lib/dn.js", "../../activedirectory2/node_modules/ldapjs/lib/assert.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/add_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/add_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/bind_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/bind_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/compare_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/compare_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/del_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/del_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/ext_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/ext_response.js", "../../activedirectory2/node_modules/ldapjs/lib/change.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/modify_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/modify_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/moddn_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/moddn_response.js", "../../ldap-filter/lib/helpers.js", "../../ldap-filter/lib/and_filter.js", "../../ldap-filter/lib/approx_filter.js", "../../ldap-filter/lib/equality_filter.js", "../../ldap-filter/lib/ext_filter.js", "../../ldap-filter/lib/ge_filter.js", "../../ldap-filter/lib/le_filter.js", "../../ldap-filter/lib/not_filter.js", "../../ldap-filter/lib/or_filter.js", "../../ldap-filter/lib/presence_filter.js", "../../ldap-filter/lib/substr_filter.js", "../../ldap-filter/lib/index.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/and_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/approx_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/equality_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/ext_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/ge_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/le_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/not_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/or_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/presence_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/substr_filter.js", "../../activedirectory2/node_modules/ldapjs/lib/filters/index.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/search_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/search_entry.js", "browser-external:querystring", "browser-external:url", "../../activedirectory2/node_modules/ldapjs/lib/url.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/search_reference.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/search_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/unbind_request.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/parser.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/abandon_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/unbind_response.js", "../../activedirectory2/node_modules/ldapjs/lib/messages/index.js", "../../activedirectory2/node_modules/ldapjs/lib/errors/index.js", "../../activedirectory2/node_modules/ldapjs/lib/client/request-queue/purge.js", "../../activedirectory2/node_modules/ldapjs/lib/client/request-queue/index.js", "../../activedirectory2/node_modules/ldapjs/lib/client/constants.js", "../../activedirectory2/node_modules/ldapjs/lib/client/message-tracker/id-generator.js", "../../activedirectory2/node_modules/ldapjs/lib/client/message-tracker/ge-window.js", "../../activedirectory2/node_modules/ldapjs/lib/client/message-tracker/purge-abandoned.js", "../../activedirectory2/node_modules/ldapjs/lib/client/message-tracker/index.js", "browser-external:net", "browser-external:tls", "../../wrappy/wrappy.js", "../../once/once.js", "../../precond/lib/errors.js", "../../precond/lib/checks.js", "../../precond/index.js", "../../backoff/lib/backoff.js", "../../backoff/lib/strategy/strategy.js", "../../backoff/lib/strategy/exponential.js", "../../backoff/lib/strategy/fibonacci.js", "../../backoff/lib/function_call.js", "../../backoff/index.js", "../../extsprintf/lib/extsprintf.js", "../../vasync/node_modules/core-util-is/lib/util.js", "../../vasync/node_modules/verror/lib/verror.js", "../../vasync/lib/vasync.js", "../../verror/node_modules/core-util-is/lib/util.js", "../../verror/lib/verror.js", "../../activedirectory2/node_modules/ldapjs/lib/corked_emitter.js", "../../activedirectory2/node_modules/ldapjs/lib/client/search_pager.js", "../../activedirectory2/node_modules/ldapjs/lib/client/client.js", "../../activedirectory2/node_modules/ldapjs/lib/client/index.js", "../../activedirectory2/node_modules/ldapjs/lib/server.js", "../../activedirectory2/node_modules/ldapjs/lib/persistent_search.js", "../../activedirectory2/node_modules/ldapjs/lib/index.js", "../../async/dist/async.mjs", "../../is-plain-obj/index.js", "../../merge-options/index.js", "../../activedirectory2/lib/models/group.js", "../../activedirectory2/lib/components/utilities.js", "../../activedirectory2/lib/client/RangeAttribute.js", "../../activedirectory2/lib/components/parseRangeAttributes.js", "../../activedirectory2/lib/components/search.js", "../../activedirectory2/lib/components/getGroupMembershipForDN.js", "../../activedirectory2/lib/models/user.js", "../../activedirectory2/lib/components/getUsersForGroup.js", "../../activedirectory2/lib/components/find.js", "../../activedirectory2/lib/components/findGroups.js", "../../activedirectory2/lib/components/findUsers.js", "../../activedirectory2/lib/activedirectory.js", "../../activedirectory2/lib/adpromise.js", "../../activedirectory2/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict'\r\n\r\nfunction noop () { }\r\n\r\nconst proto = {\r\n  fatal: noop,\r\n  error: noop,\r\n  warn: noop,\r\n  info: noop,\r\n  debug: noop,\r\n  trace: noop\r\n}\r\n\r\nObject.defineProperty(module, 'exports', {\r\n  get () {\r\n    return Object.create(proto)\r\n  }\r\n})\r\n", "'use strict'\n\nconst logger = require('abstract-logging')\nlogger.child = function () { return logger }\n\nmodule.exports = logger\n", "'use strict'\n\n/**\n * Adds requests to the queue. If a timeout has been added to the queue then\n * this will freeze the queue with the newly added item, flush it, and then\n * unfreeze it when the queue has been cleared.\n *\n * @param {object} message An LDAP message object.\n * @param {object} expect An expectation object.\n * @param {object} emitter An event emitter or `null`.\n * @param {function} cb A callback to invoke when the request is finished.\n *\n * @returns {boolean} `true` if the requested was queued. `false` if the queue\n * is not accepting any requests.\n */\nmodule.exports = function enqueue (message, expect, emitter, cb) {\n  if (this._queue.length >= this.size || this._frozen) {\n    return false\n  }\n\n  this._queue.add({ message, expect, emitter, cb })\n\n  if (this.timeout === 0) return true\n  if (this._timer === null) return true\n\n  // A queue can have a specified time allotted for it to be cleared. If that\n  // time has been reached, reject new entries until the queue has been cleared.\n  this._timer = setTimeout(queueTimeout.bind(this), this.timeout)\n\n  return true\n\n  function queueTimeout () {\n    this.freeze()\n    this.purge()\n  }\n}\n", "'use strict'\n\n/**\n * Invokes all requests in the queue by passing them to the supplied callback\n * function and then clears all items from the queue.\n *\n * @param {function} cb A function used to handle the requests.\n */\nmodule.exports = function flush (cb) {\n  if (this._timer) {\n    clearTimeout(this._timer)\n    this._timer = null\n  }\n\n  // We must get a local copy of the queue and clear it before iterating it.\n  // The client will invoke this flush function _many_ times. If we try to\n  // iterate it without a local copy and clearing first then we will overflow\n  // the stack.\n  const requests = Array.from(this._queue.values())\n  this._queue.clear()\n  for (const req of requests) {\n    cb(req.message, req.expect, req.emitter, req.cb)\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"assert\" has been externalized for browser compatibility. Cannot access \"assert.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// Copyright (c) 2012, Mark Cavage. All rights reserved.\r\n// Copyright 2015 Joyent, Inc.\r\n\r\nvar assert = require('assert');\r\nvar Stream = require('stream').Stream;\r\nvar util = require('util');\r\n\r\n\r\n///--- Globals\r\n\r\n/* JSSTYLED */\r\nvar UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;\r\n\r\n\r\n///--- Internal\r\n\r\nfunction _capitalize(str) {\r\n    return (str.charAt(0).toUpperCase() + str.slice(1));\r\n}\r\n\r\nfunction _toss(name, expected, oper, arg, actual) {\r\n    throw new assert.AssertionError({\r\n        message: util.format('%s (%s) is required', name, expected),\r\n        actual: (actual === undefined) ? typeof (arg) : actual(arg),\r\n        expected: expected,\r\n        operator: oper || '===',\r\n        stackStartFunction: _toss.caller\r\n    });\r\n}\r\n\r\nfunction _getClass(arg) {\r\n    return (Object.prototype.toString.call(arg).slice(8, -1));\r\n}\r\n\r\nfunction noop() {\r\n    // Why even bother with asserts?\r\n}\r\n\r\n\r\n///--- Exports\r\n\r\nvar types = {\r\n    bool: {\r\n        check: function (arg) { return typeof (arg) === 'boolean'; }\r\n    },\r\n    func: {\r\n        check: function (arg) { return typeof (arg) === 'function'; }\r\n    },\r\n    string: {\r\n        check: function (arg) { return typeof (arg) === 'string'; }\r\n    },\r\n    object: {\r\n        check: function (arg) {\r\n            return typeof (arg) === 'object' && arg !== null;\r\n        }\r\n    },\r\n    number: {\r\n        check: function (arg) {\r\n            return typeof (arg) === 'number' && !isNaN(arg);\r\n        }\r\n    },\r\n    finite: {\r\n        check: function (arg) {\r\n            return typeof (arg) === 'number' && !isNaN(arg) && isFinite(arg);\r\n        }\r\n    },\r\n    buffer: {\r\n        check: function (arg) { return Buffer.isBuffer(arg); },\r\n        operator: 'Buffer.isBuffer'\r\n    },\r\n    array: {\r\n        check: function (arg) { return Array.isArray(arg); },\r\n        operator: 'Array.isArray'\r\n    },\r\n    stream: {\r\n        check: function (arg) { return arg instanceof Stream; },\r\n        operator: 'instanceof',\r\n        actual: _getClass\r\n    },\r\n    date: {\r\n        check: function (arg) { return arg instanceof Date; },\r\n        operator: 'instanceof',\r\n        actual: _getClass\r\n    },\r\n    regexp: {\r\n        check: function (arg) { return arg instanceof RegExp; },\r\n        operator: 'instanceof',\r\n        actual: _getClass\r\n    },\r\n    uuid: {\r\n        check: function (arg) {\r\n            return typeof (arg) === 'string' && UUID_REGEXP.test(arg);\r\n        },\r\n        operator: 'isUUID'\r\n    }\r\n};\r\n\r\nfunction _setExports(ndebug) {\r\n    var keys = Object.keys(types);\r\n    var out;\r\n\r\n    /* re-export standard assert */\r\n    if (process.env.NODE_NDEBUG) {\r\n        out = noop;\r\n    } else {\r\n        out = function (arg, msg) {\r\n            if (!arg) {\r\n                _toss(msg, 'true', arg);\r\n            }\r\n        };\r\n    }\r\n\r\n    /* standard checks */\r\n    keys.forEach(function (k) {\r\n        if (ndebug) {\r\n            out[k] = noop;\r\n            return;\r\n        }\r\n        var type = types[k];\r\n        out[k] = function (arg, msg) {\r\n            if (!type.check(arg)) {\r\n                _toss(msg, k, type.operator, arg, type.actual);\r\n            }\r\n        };\r\n    });\r\n\r\n    /* optional checks */\r\n    keys.forEach(function (k) {\r\n        var name = 'optional' + _capitalize(k);\r\n        if (ndebug) {\r\n            out[name] = noop;\r\n            return;\r\n        }\r\n        var type = types[k];\r\n        out[name] = function (arg, msg) {\r\n            if (arg === undefined || arg === null) {\r\n                return;\r\n            }\r\n            if (!type.check(arg)) {\r\n                _toss(msg, k, type.operator, arg, type.actual);\r\n            }\r\n        };\r\n    });\r\n\r\n    /* arrayOf checks */\r\n    keys.forEach(function (k) {\r\n        var name = 'arrayOf' + _capitalize(k);\r\n        if (ndebug) {\r\n            out[name] = noop;\r\n            return;\r\n        }\r\n        var type = types[k];\r\n        var expected = '[' + k + ']';\r\n        out[name] = function (arg, msg) {\r\n            if (!Array.isArray(arg)) {\r\n                _toss(msg, expected, type.operator, arg, type.actual);\r\n            }\r\n            var i;\r\n            for (i = 0; i < arg.length; i++) {\r\n                if (!type.check(arg[i])) {\r\n                    _toss(msg, expected, type.operator, arg, type.actual);\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    /* optionalArrayOf checks */\r\n    keys.forEach(function (k) {\r\n        var name = 'optionalArrayOf' + _capitalize(k);\r\n        if (ndebug) {\r\n            out[name] = noop;\r\n            return;\r\n        }\r\n        var type = types[k];\r\n        var expected = '[' + k + ']';\r\n        out[name] = function (arg, msg) {\r\n            if (arg === undefined || arg === null) {\r\n                return;\r\n            }\r\n            if (!Array.isArray(arg)) {\r\n                _toss(msg, expected, type.operator, arg, type.actual);\r\n            }\r\n            var i;\r\n            for (i = 0; i < arg.length; i++) {\r\n                if (!type.check(arg[i])) {\r\n                    _toss(msg, expected, type.operator, arg, type.actual);\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    /* re-export built-in assertions */\r\n    Object.keys(assert).forEach(function (k) {\r\n        if (k === 'AssertionError') {\r\n            out[k] = assert[k];\r\n            return;\r\n        }\r\n        if (ndebug) {\r\n            out[k] = noop;\r\n            return;\r\n        }\r\n        out[k] = assert[k];\r\n    });\r\n\r\n    /* export ourselves (for unit tests _only_) */\r\n    out._setExports = _setExports;\r\n\r\n    return out;\r\n}\r\n\r\nmodule.exports = _setExports(process.env.NODE_NDEBUG);\r\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n\nmodule.exports = {\n\n  newInvalidAsn1Error: function (msg) {\n    var e = new Error();\n    e.name = 'InvalidAsn1Error';\n    e.message = msg || '';\n    return e;\n  }\n\n};\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n\nmodule.exports = {\n  EOC: 0,\n  Boolean: 1,\n  Integer: 2,\n  BitString: 3,\n  OctetString: 4,\n  Null: 5,\n  OID: 6,\n  ObjectDescriptor: 7,\n  External: 8,\n  Real: 9, // float\n  Enumeration: 10,\n  PDV: 11,\n  Utf8String: 12,\n  RelativeOID: 13,\n  Sequence: 16,\n  Set: 17,\n  NumericString: 18,\n  PrintableString: 19,\n  T61String: 20,\n  VideotexString: 21,\n  IA5String: 22,\n  UTCTime: 23,\n  GeneralizedTime: 24,\n  GraphicString: 25,\n  VisibleString: 26,\n  GeneralString: 28,\n  UniversalString: 29,\n  CharacterString: 30,\n  BMPString: 31,\n  Constructor: 32,\n  Context: 128\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"buffer\" has been externalized for browser compatibility. Cannot access \"buffer.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/* eslint-disable node/no-deprecated-api */\r\n\r\n'use strict'\r\n\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\nvar safer = {}\r\n\r\nvar key\r\n\r\nfor (key in buffer) {\r\n  if (!buffer.hasOwnProperty(key)) continue\r\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\r\n  safer[key] = buffer[key]\r\n}\r\n\r\nvar Safer = safer.Buffer = {}\r\nfor (key in Buffer) {\r\n  if (!Buffer.hasOwnProperty(key)) continue\r\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\r\n  Safer[key] = Buffer[key]\r\n}\r\n\r\nsafer.Buffer.prototype = Buffer.prototype\r\n\r\nif (!Safer.from || Safer.from === Uint8Array.from) {\r\n  Safer.from = function (value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\r\n    }\r\n    if (value && typeof value.length === 'undefined') {\r\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\r\n    }\r\n    return Buffer(value, encodingOrOffset, length)\r\n  }\r\n}\r\n\r\nif (!Safer.alloc) {\r\n  Safer.alloc = function (size, fill, encoding) {\r\n    if (typeof size !== 'number') {\r\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\r\n    }\r\n    if (size < 0 || size >= 2 * (1 << 30)) {\r\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n    }\r\n    var buf = Buffer(size)\r\n    if (!fill || fill.length === 0) {\r\n      buf.fill(0)\r\n    } else if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n    return buf\r\n  }\r\n}\r\n\r\nif (!safer.kStringMaxLength) {\r\n  try {\r\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\r\n  } catch (e) {\r\n    // we can't determine kStringMaxLength in environments where process.binding\r\n    // is unsupported, so let's not set it\r\n  }\r\n}\r\n\r\nif (!safer.constants) {\r\n  safer.constants = {\r\n    MAX_LENGTH: safer.kMaxLength\r\n  }\r\n  if (safer.kStringMaxLength) {\r\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\r\n  }\r\n}\r\n\r\nmodule.exports = safer\r\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar Buffer = require('safer-buffer').Buffer;\n\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n// --- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\n\n\n// --- API\n\nfunction Reader(data) {\n  if (!data || !Buffer.isBuffer(data))\n    throw new TypeError('data must be a node Buffer');\n\n  this._buf = data;\n  this._size = data.length;\n\n  // These hold the \"current\" state\n  this._len = 0;\n  this._offset = 0;\n}\n\nObject.defineProperty(Reader.prototype, 'length', {\n  enumerable: true,\n  get: function () { return (this._len); }\n});\n\nObject.defineProperty(Reader.prototype, 'offset', {\n  enumerable: true,\n  get: function () { return (this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'remain', {\n  get: function () { return (this._size - this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'buffer', {\n  get: function () { return (this._buf.slice(this._offset)); }\n});\n\n\n/**\n * Reads a single byte and advances offset; you can pass in `true` to make this\n * a \"peek\" operation (i.e., get the byte, but don't advance the offset).\n *\n * @param {Boolean} peek true means don't move offset.\n * @return {Number} the next byte, null if not enough data.\n */\nReader.prototype.readByte = function (peek) {\n  if (this._size - this._offset < 1)\n    return null;\n\n  var b = this._buf[this._offset] & 0xff;\n\n  if (!peek)\n    this._offset += 1;\n\n  return b;\n};\n\n\nReader.prototype.peek = function () {\n  return this.readByte(true);\n};\n\n\n/**\n * Reads a (potentially) variable length off the BER buffer.  This call is\n * not really meant to be called directly, as callers have to manipulate\n * the internal buffer afterwards.\n *\n * As a result of this call, you can call `Reader.length`, until the\n * next thing called that does a readLength.\n *\n * @return {Number} the amount of offset to advance the buffer.\n * @throws {InvalidAsn1Error} on bad ASN.1\n */\nReader.prototype.readLength = function (offset) {\n  if (offset === undefined)\n    offset = this._offset;\n\n  if (offset >= this._size)\n    return null;\n\n  var lenB = this._buf[offset++] & 0xff;\n  if (lenB === null)\n    return null;\n\n  if ((lenB & 0x80) === 0x80) {\n    lenB &= 0x7f;\n\n    if (lenB === 0)\n      throw newInvalidAsn1Error('Indefinite length not supported');\n\n    if (lenB > 4)\n      throw newInvalidAsn1Error('encoding too long');\n\n    if (this._size - offset < lenB)\n      return null;\n\n    this._len = 0;\n    for (var i = 0; i < lenB; i++)\n      this._len = (this._len << 8) + (this._buf[offset++] & 0xff);\n\n  } else {\n    // Wasn't a variable length\n    this._len = lenB;\n  }\n\n  return offset;\n};\n\n\n/**\n * Parses the next sequence in this BER buffer.\n *\n * To get the length of the sequence, call `Reader.length`.\n *\n * @return {Number} the sequence's tag.\n */\nReader.prototype.readSequence = function (tag) {\n  var seq = this.peek();\n  if (seq === null)\n    return null;\n  if (tag !== undefined && tag !== seq)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + seq.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  this._offset = o;\n  return seq;\n};\n\n\nReader.prototype.readInt = function () {\n  return this._readTag(ASN1.Integer);\n};\n\n\nReader.prototype.readBoolean = function () {\n  return (this._readTag(ASN1.Boolean) === 0 ? false : true);\n};\n\n\nReader.prototype.readEnumeration = function () {\n  return this._readTag(ASN1.Enumeration);\n};\n\n\nReader.prototype.readString = function (tag, retbuf) {\n  if (!tag)\n    tag = ASN1.OctetString;\n\n  var b = this.peek();\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n\n  if (o === null)\n    return null;\n\n  if (this.length > this._size - o)\n    return null;\n\n  this._offset = o;\n\n  if (this.length === 0)\n    return retbuf ? Buffer.alloc(0) : '';\n\n  var str = this._buf.slice(this._offset, this._offset + this.length);\n  this._offset += this.length;\n\n  return retbuf ? str : str.toString('utf8');\n};\n\nReader.prototype.readOID = function (tag) {\n  if (!tag)\n    tag = ASN1.OID;\n\n  var b = this.readString(tag, true);\n  if (b === null)\n    return null;\n\n  var values = [];\n  var value = 0;\n\n  for (var i = 0; i < b.length; i++) {\n    var byte = b[i] & 0xff;\n\n    value <<= 7;\n    value += byte & 0x7f;\n    if ((byte & 0x80) === 0) {\n      values.push(value);\n      value = 0;\n    }\n  }\n\n  value = values.shift();\n  values.unshift(value % 40);\n  values.unshift((value / 40) >> 0);\n\n  return values.join('.');\n};\n\n\nReader.prototype._readTag = function (tag) {\n  assert.ok(tag !== undefined);\n\n  var b = this.peek();\n\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  if (this.length > 4)\n    throw newInvalidAsn1Error('Integer too long: ' + this.length);\n\n  if (this.length > this._size - o)\n    return null;\n  this._offset = o;\n\n  var fb = this._buf[this._offset];\n  var value = 0;\n\n  for (var i = 0; i < this.length; i++) {\n    value <<= 8;\n    value |= (this._buf[this._offset++] & 0xff);\n  }\n\n  if ((fb & 0x80) === 0x80 && i !== 4)\n    value -= (1 << (i * 8));\n\n  return value >> 0;\n};\n\n\n\n// --- Exported API\n\nmodule.exports = Reader;\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar Buffer = require('safer-buffer').Buffer;\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n// --- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\nvar DEFAULT_OPTS = {\n  size: 1024,\n  growthFactor: 8\n};\n\n\n// --- Helpers\n\nfunction merge(from, to) {\n  assert.ok(from);\n  assert.equal(typeof (from), 'object');\n  assert.ok(to);\n  assert.equal(typeof (to), 'object');\n\n  var keys = Object.getOwnPropertyNames(from);\n  keys.forEach(function (key) {\n    if (to[key])\n      return;\n\n    var value = Object.getOwnPropertyDescriptor(from, key);\n    Object.defineProperty(to, key, value);\n  });\n\n  return to;\n}\n\n\n\n// --- API\n\nfunction Writer(options) {\n  options = merge(DEFAULT_OPTS, options || {});\n\n  this._buf = Buffer.alloc(options.size || 1024);\n  this._size = this._buf.length;\n  this._offset = 0;\n  this._options = options;\n\n  // A list of offsets in the buffer where we need to insert\n  // sequence tag/len pairs.\n  this._seq = [];\n}\n\nObject.defineProperty(Writer.prototype, 'buffer', {\n  get: function () {\n    if (this._seq.length)\n      throw newInvalidAsn1Error(this._seq.length + ' unended sequence(s)');\n\n    return (this._buf.slice(0, this._offset));\n  }\n});\n\nWriter.prototype.writeByte = function (b) {\n  if (typeof (b) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(1);\n  this._buf[this._offset++] = b;\n};\n\n\nWriter.prototype.writeInt = function (i, tag) {\n  if (typeof (i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Integer;\n\n  var sz = 4;\n\n  while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000 >> 0)) &&\n        (sz > 1)) {\n    sz--;\n    i <<= 8;\n  }\n\n  if (sz > 4)\n    throw newInvalidAsn1Error('BER ints cannot be > 0xffffffff');\n\n  this._ensure(2 + sz);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = sz;\n\n  while (sz-- > 0) {\n    this._buf[this._offset++] = ((i & 0xff000000) >>> 24);\n    i <<= 8;\n  }\n\n};\n\n\nWriter.prototype.writeNull = function () {\n  this.writeByte(ASN1.Null);\n  this.writeByte(0x00);\n};\n\n\nWriter.prototype.writeEnumeration = function (i, tag) {\n  if (typeof (i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Enumeration;\n\n  return this.writeInt(i, tag);\n};\n\n\nWriter.prototype.writeBoolean = function (b, tag) {\n  if (typeof (b) !== 'boolean')\n    throw new TypeError('argument must be a Boolean');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Boolean;\n\n  this._ensure(3);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = 0x01;\n  this._buf[this._offset++] = b ? 0xff : 0x00;\n};\n\n\nWriter.prototype.writeString = function (s, tag) {\n  if (typeof (s) !== 'string')\n    throw new TypeError('argument must be a string (was: ' + typeof (s) + ')');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.OctetString;\n\n  var len = Buffer.byteLength(s);\n  this.writeByte(tag);\n  this.writeLength(len);\n  if (len) {\n    this._ensure(len);\n    this._buf.write(s, this._offset);\n    this._offset += len;\n  }\n};\n\n\nWriter.prototype.writeBuffer = function (buf, tag) {\n  if (typeof (tag) !== 'number')\n    throw new TypeError('tag must be a number');\n  if (!Buffer.isBuffer(buf))\n    throw new TypeError('argument must be a buffer');\n\n  this.writeByte(tag);\n  this.writeLength(buf.length);\n  this._ensure(buf.length);\n  buf.copy(this._buf, this._offset, 0, buf.length);\n  this._offset += buf.length;\n};\n\n\nWriter.prototype.writeStringArray = function (strings) {\n  if ((!strings instanceof Array))\n    throw new TypeError('argument must be an Array[String]');\n\n  var self = this;\n  strings.forEach(function (s) {\n    self.writeString(s);\n  });\n};\n\n// This is really to solve DER cases, but whatever for now\nWriter.prototype.writeOID = function (s, tag) {\n  if (typeof (s) !== 'string')\n    throw new TypeError('argument must be a string');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.OID;\n\n  if (!/^([0-9]+\\.){3,}[0-9]+$/.test(s))\n    throw new Error('argument is not a valid OID string');\n\n  function encodeOctet(bytes, octet) {\n    if (octet < 128) {\n        bytes.push(octet);\n    } else if (octet < 16384) {\n        bytes.push((octet >>> 7) | 0x80);\n        bytes.push(octet & 0x7F);\n    } else if (octet < 2097152) {\n      bytes.push((octet >>> 14) | 0x80);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else if (octet < 268435456) {\n      bytes.push((octet >>> 21) | 0x80);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else {\n      bytes.push(((octet >>> 28) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 21) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    }\n  }\n\n  var tmp = s.split('.');\n  var bytes = [];\n  bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));\n  tmp.slice(2).forEach(function (b) {\n    encodeOctet(bytes, parseInt(b, 10));\n  });\n\n  var self = this;\n  this._ensure(2 + bytes.length);\n  this.writeByte(tag);\n  this.writeLength(bytes.length);\n  bytes.forEach(function (b) {\n    self.writeByte(b);\n  });\n};\n\n\nWriter.prototype.writeLength = function (len) {\n  if (typeof (len) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(4);\n\n  if (len <= 0x7f) {\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xff) {\n    this._buf[this._offset++] = 0x81;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffff) {\n    this._buf[this._offset++] = 0x82;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffffff) {\n    this._buf[this._offset++] = 0x83;\n    this._buf[this._offset++] = len >> 16;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else {\n    throw newInvalidAsn1Error('Length too long (> 4 bytes)');\n  }\n};\n\nWriter.prototype.startSequence = function (tag) {\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Sequence | ASN1.Constructor;\n\n  this.writeByte(tag);\n  this._seq.push(this._offset);\n  this._ensure(3);\n  this._offset += 3;\n};\n\n\nWriter.prototype.endSequence = function () {\n  var seq = this._seq.pop();\n  var start = seq + 3;\n  var len = this._offset - start;\n\n  if (len <= 0x7f) {\n    this._shift(start, len, -2);\n    this._buf[seq] = len;\n  } else if (len <= 0xff) {\n    this._shift(start, len, -1);\n    this._buf[seq] = 0x81;\n    this._buf[seq + 1] = len;\n  } else if (len <= 0xffff) {\n    this._buf[seq] = 0x82;\n    this._buf[seq + 1] = len >> 8;\n    this._buf[seq + 2] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n    this._buf[seq] = 0x83;\n    this._buf[seq + 1] = len >> 16;\n    this._buf[seq + 2] = len >> 8;\n    this._buf[seq + 3] = len;\n  } else {\n    throw newInvalidAsn1Error('Sequence too long');\n  }\n};\n\n\nWriter.prototype._shift = function (start, len, shift) {\n  assert.ok(start !== undefined);\n  assert.ok(len !== undefined);\n  assert.ok(shift);\n\n  this._buf.copy(this._buf, start + shift, start, start + len);\n  this._offset += shift;\n};\n\nWriter.prototype._ensure = function (len) {\n  assert.ok(len);\n\n  if (this._size - this._offset < len) {\n    var sz = this._size * this._options.growthFactor;\n    if (sz - this._offset < len)\n      sz += len;\n\n    var buf = Buffer.alloc(sz);\n\n    this._buf.copy(buf, 0, 0, this._offset);\n    this._buf = buf;\n    this._size = sz;\n  }\n};\n\n\n\n// --- Exported API\n\nmodule.exports = Writer;\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar errors = require('./errors');\nvar types = require('./types');\n\nvar Reader = require('./reader');\nvar Writer = require('./writer');\n\n\n// --- Exports\n\nmodule.exports = {\n\n  Reader: Reader,\n\n  Writer: Writer\n\n};\n\nfor (var t in types) {\n  if (types.hasOwnProperty(t))\n    module.exports[t] = types[t];\n}\nfor (var e in errors) {\n  if (errors.hasOwnProperty(e))\n    module.exports[e] = errors[e];\n}\n", "// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n// If you have no idea what ASN.1 or BER is, see this:\n// ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc\n\nvar Ber = require('./ber/index');\n\n\n\n// --- Exported API\n\nmodule.exports = {\n\n  Ber: Ber,\n\n  BerReader: Ber.Reader,\n\n  BerWriter: Ber.Writer\n\n};\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\n\n// var asn1 = require('asn1')\n\n// var Protocol = require('../protocol')\n\n/// --- Globals\n\n// var Ber = asn1.Ber\n\n/// --- API\n\nfunction Control (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  assert.optionalString(options.type)\n  assert.optionalBool(options.criticality)\n  if (options.value) {\n    assert.buffer(options.value)\n  }\n\n  this.type = options.type || ''\n  this.criticality = options.critical || options.criticality || false\n  this.value = options.value || null\n}\nObject.defineProperties(Control.prototype, {\n  json: {\n    get: function getJson () {\n      const obj = {\n        controlType: this.type,\n        criticality: this.criticality,\n        controlValue: this.value\n      }\n      return (typeof (this._json) === 'function' ? this._json(obj) : obj)\n    }\n  }\n})\n\nControl.prototype.toBer = function toBer (ber) {\n  assert.ok(ber)\n\n  ber.startSequence()\n  ber.writeString(this.type || '')\n  ber.writeBoolean(this.criticality)\n  if (typeof (this._toBer) === 'function') {\n    this._toBer(ber)\n  } else {\n    if (this.value) { ber.writeString(this.value) }\n  }\n\n  ber.endSequence()\n}\n\nControl.prototype.toString = function toString () {\n  return this.json\n}\n\n/// --- Exports\nmodule.exports = Control\n", "const assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction EntryChangeNotificationControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = EntryChangeNotificationControl.OID\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (typeof (options.value) === 'object') {\n      this._value = options.value\n    } else {\n      throw new TypeError('options.value must be a Buffer or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(EntryChangeNotificationControl, Control)\nObject.defineProperties(EntryChangeNotificationControl.prototype, {\n  value: {\n    get: function () { return this._value || {} },\n    configurable: false\n  }\n})\n\nEntryChangeNotificationControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n\n  const ber = new BerReader(buffer)\n  if (ber.readSequence()) {\n    this._value = {\n      changeType: ber.readInt()\n    }\n\n    // if the operation was moddn, then parse the optional previousDN attr\n    if (this._value.changeType === 8) { this._value.previousDN = ber.readString() }\n\n    this._value.changeNumber = ber.readInt()\n\n    return true\n  }\n\n  return false\n}\n\nEntryChangeNotificationControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!this._value) { return }\n\n  const writer = new BerWriter()\n  writer.startSequence()\n  writer.writeInt(this.value.changeType)\n  if (this.value.previousDN) { writer.writeString(this.value.previousDN) }\n\n  writer.writeInt(parseInt(this.value.changeNumber, 10))\n  writer.endSequence()\n\n  ber.writeBuffer(writer.buffer, 0x04)\n}\n\nEntryChangeNotificationControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\n\nEntryChangeNotificationControl.OID = '2.16.840.1.113730.3.4.7'\n\n/// --- Exports\nmodule.exports = EntryChangeNotificationControl\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction PersistentSearchControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = PersistentSearchControl.OID\n\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (typeof (options.value) === 'object') {\n      this._value = options.value\n    } else {\n      throw new TypeError('options.value must be a Buffer or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(PersistentSearchControl, Control)\nObject.defineProperties(PersistentSearchControl.prototype, {\n  value: {\n    get: function () { return this._value || {} },\n    configurable: false\n  }\n})\n\nPersistentSearchControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n\n  const ber = new BerReader(buffer)\n  if (ber.readSequence()) {\n    this._value = {\n      changeTypes: ber.readInt(),\n      changesOnly: ber.readBoolean(),\n      returnECs: ber.readBoolean()\n    }\n\n    return true\n  }\n\n  return false\n}\n\nPersistentSearchControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!this._value) { return }\n\n  const writer = new BerWriter()\n  writer.startSequence()\n  writer.writeInt(this.value.changeTypes)\n  writer.writeBoolean(this.value.changesOnly)\n  writer.writeBoolean(this.value.returnECs)\n  writer.endSequence()\n\n  ber.writeBuffer(writer.buffer, 0x04)\n}\n\nPersistentSearchControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\n\nPersistentSearchControl.OID = '2.16.840.1.113730.3.4.3'\n\n/// --- Exports\nmodule.exports = PersistentSearchControl\n", "const assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction PagedResultsControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = PagedResultsControl.OID\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (typeof (options.value) === 'object') {\n      this._value = options.value\n    } else {\n      throw new TypeError('options.value must be a Buffer or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(PagedResultsControl, Control)\nObject.defineProperties(PagedResultsControl.prototype, {\n  value: {\n    get: function () { return this._value || {} },\n    configurable: false\n  }\n})\n\nPagedResultsControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n\n  const ber = new BerReader(buffer)\n  if (ber.readSequence()) {\n    this._value = {}\n    this._value.size = ber.readInt()\n    this._value.cookie = ber.readString(asn1.Ber.OctetString, true)\n    // readString returns '' instead of a zero-length buffer\n    if (!this._value.cookie) { this._value.cookie = Buffer.alloc(0) }\n\n    return true\n  }\n\n  return false\n}\n\nPagedResultsControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!this._value) { return }\n\n  const writer = new BerWriter()\n  writer.startSequence()\n  writer.writeInt(this.value.size)\n  if (this.value.cookie && this.value.cookie.length > 0) {\n    writer.writeBuffer(this.value.cookie, asn1.Ber.OctetString)\n  } else {\n    writer.writeString('') // writeBuffer rejects zero-length buffers\n  }\n  writer.endSequence()\n\n  ber.writeBuffer(writer.buffer, 0x04)\n}\n\nPagedResultsControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\n\nPagedResultsControl.OID = '1.2.840.113556.1.4.319'\n\n/// --- Exports\nmodule.exports = PagedResultsControl\n", "const assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction ServerSideSortingRequestControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = ServerSideSortingRequestControl.OID\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (Array.isArray(options.value)) {\n      assert.arrayOfObject(options.value, 'options.value must be Objects')\n      for (let i = 0; i < options.value.length; i++) {\n        if (Object.prototype.hasOwnProperty.call(options.value[i], 'attributeType') === false) {\n          throw new Error('Missing required key: attributeType')\n        }\n      }\n      this._value = options.value\n    } else if (typeof (options.value) === 'object') {\n      if (Object.prototype.hasOwnProperty.call(options.value, 'attributeType') === false) {\n        throw new Error('Missing required key: attributeType')\n      }\n      this._value = [options.value]\n    } else {\n      throw new TypeError('options.value must be a Buffer, Array or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(ServerSideSortingRequestControl, Control)\nObject.defineProperties(ServerSideSortingRequestControl.prototype, {\n  value: {\n    get: function () { return this._value || [] },\n    configurable: false\n  }\n})\n\nServerSideSortingRequestControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n\n  const ber = new BerReader(buffer)\n  let item\n  if (ber.readSequence(0x30)) {\n    this._value = []\n\n    while (ber.readSequence(0x30)) {\n      item = {}\n      item.attributeType = ber.readString(asn1.Ber.OctetString)\n      if (ber.peek() === 0x80) {\n        item.orderingRule = ber.readString(0x80)\n      }\n      if (ber.peek() === 0x81) {\n        item.reverseOrder = (ber._readTag(0x81) !== 0)\n      }\n      this._value.push(item)\n    }\n    return true\n  }\n  return false\n}\n\nServerSideSortingRequestControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!this._value || this.value.length === 0) { return }\n\n  const writer = new BerWriter()\n  writer.startSequence(0x30)\n  for (let i = 0; i < this.value.length; i++) {\n    const item = this.value[i]\n    writer.startSequence(0x30)\n    if (item.attributeType) {\n      writer.writeString(item.attributeType, asn1.Ber.OctetString)\n    }\n    if (item.orderingRule) {\n      writer.writeString(item.orderingRule, 0x80)\n    }\n    if (item.reverseOrder) {\n      writer.writeBoolean(item.reverseOrder, 0x81)\n    }\n    writer.endSequence()\n  }\n  writer.endSequence()\n  ber.writeBuffer(writer.buffer, 0x04)\n}\n\nServerSideSortingRequestControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\n\nServerSideSortingRequestControl.OID = '1.2.840.113556.1.4.473'\n\n/// ---Exports\n\nmodule.exports = ServerSideSortingRequestControl\n", "'use strict'\n\nmodule.exports = {\n  LDAP_SUCCESS: 0,\n  LDAP_OPERATIONS_ERROR: 1,\n  LDAP_PROTOCOL_ERROR: 2,\n  LDAP_TIME_LIMIT_EXCEEDED: 3,\n  LDAP_SIZE_LIMIT_EXCEEDED: 4,\n  LDAP_COMPARE_FALSE: 5,\n  LDAP_COMPARE_TRUE: 6,\n  LDAP_AUTH_METHOD_NOT_SUPPORTED: 7,\n  LDAP_STRONG_AUTH_REQUIRED: 8,\n  LDAP_REFERRAL: 10,\n  LDAP_ADMIN_LIMIT_EXCEEDED: 11,\n  LDAP_UNAVAILABLE_CRITICAL_EXTENSION: 12,\n  LDAP_CONFIDENTIALITY_REQUIRED: 13,\n  LDAP_SASL_BIND_IN_PROGRESS: 14,\n  LDAP_NO_SUCH_ATTRIBUTE: 16,\n  LDAP_UNDEFINED_ATTRIBUTE_TYPE: 17,\n  LDAP_INAPPROPRIATE_MATCHING: 18,\n  LDAP_CONSTRAINT_VIOLATION: 19,\n  LDAP_ATTRIBUTE_OR_VALUE_EXISTS: 20,\n  LDAP_INVALID_ATTRIBUTE_SYNTAX: 21,\n  LDAP_NO_SUCH_OBJECT: 32,\n  LDAP_ALIAS_PROBLEM: 33,\n  LDAP_INVALID_DN_SYNTAX: 34,\n  LDAP_ALIAS_DEREF_PROBLEM: 36,\n  LDAP_INAPPROPRIATE_AUTHENTICATION: 48,\n  LDAP_INVALID_CREDENTIALS: 49,\n  LDAP_INSUFFICIENT_ACCESS_RIGHTS: 50,\n  LDAP_BUSY: 51,\n  LDAP_UNAVAILABLE: 52,\n  LDAP_UNWILLING_TO_PERFORM: 53,\n  LDAP_LOOP_DETECT: 54,\n  LDAP_SORT_CONTROL_MISSING: 60,\n  LDAP_INDEX_RANGE_ERROR: 61,\n  LDAP_NAMING_VIOLATION: 64,\n  LDAP_OBJECTCLASS_VIOLATION: 65,\n  LDAP_NOT_ALLOWED_ON_NON_LEAF: 66,\n  LDAP_NOT_ALLOWED_ON_RDN: 67,\n  LDAP_ENTRY_ALREADY_EXISTS: 68,\n  LDAP_OBJECTCLASS_MODS_PROHIBITED: 69,\n  LDAP_AFFECTS_MULTIPLE_DSAS: 71,\n  LDAP_CONTROL_ERROR: 76,\n  LDAP_OTHER: 80,\n  LDAP_PROXIED_AUTHORIZATION_DENIED: 123\n}\n", "const assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\nconst CODES = require('../errors/codes')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\nconst VALID_CODES = [\n  CODES.LDAP_SUCCESS,\n  CODES.LDAP_OPERATIONS_ERROR,\n  CODES.LDAP_TIME_LIMIT_EXCEEDED,\n  CODES.LDAP_STRONG_AUTH_REQUIRED,\n  CODES.LDAP_ADMIN_LIMIT_EXCEEDED,\n  CODES.LDAP_NO_SUCH_ATTRIBUTE,\n  CODES.LDAP_INAPPROPRIATE_MATCHING,\n  CODES.LDAP_INSUFFICIENT_ACCESS_RIGHTS,\n  CODES.LDAP_BUSY,\n  CODES.LDAP_UNWILLING_TO_PERFORM,\n  CODES.LDAP_OTHER\n]\n\nfunction ServerSideSortingResponseControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = ServerSideSortingResponseControl.OID\n  options.criticality = false\n\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (typeof (options.value) === 'object') {\n      if (VALID_CODES.indexOf(options.value.result) === -1) {\n        throw new Error('Invalid result code')\n      }\n      if (options.value.failedAttribute &&\n          typeof (options.value.failedAttribute) !== 'string') {\n        throw new Error('failedAttribute must be String')\n      }\n\n      this._value = options.value\n    } else {\n      throw new TypeError('options.value must be a Buffer or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(ServerSideSortingResponseControl, Control)\nObject.defineProperties(ServerSideSortingResponseControl.prototype, {\n  value: {\n    get: function () { return this._value || {} },\n    configurable: false\n  }\n})\n\nServerSideSortingResponseControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n\n  const ber = new BerReader(buffer)\n  if (ber.readSequence(0x30)) {\n    this._value = {}\n    this._value.result = ber.readEnumeration()\n    if (ber.peek() === 0x80) {\n      this._value.failedAttribute = ber.readString(0x80)\n    }\n    return true\n  }\n  return false\n}\n\nServerSideSortingResponseControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!this._value || this.value.length === 0) { return }\n\n  const writer = new BerWriter()\n  writer.startSequence(0x30)\n  writer.writeEnumeration(this.value.result)\n  if (this.value.result !== CODES.LDAP_SUCCESS && this.value.failedAttribute) {\n    writer.writeString(this.value.failedAttribute, 0x80)\n  }\n  writer.endSequence()\n  ber.writeBuffer(writer.buffer, 0x04)\n}\n\nServerSideSortingResponseControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\n\nServerSideSortingResponseControl.OID = '1.2.840.113556.1.4.474'\n\n/// --- Exports\nmodule.exports = ServerSideSortingResponseControl\n", "const assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction VirtualListViewControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = VirtualListViewControl.OID\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (typeof (options.value) === 'object') {\n      if (Object.prototype.hasOwnProperty.call(options.value, 'beforeCount') === false) {\n        throw new Error('Missing required key: beforeCount')\n      }\n      if (Object.prototype.hasOwnProperty.call(options.value, 'afterCount') === false) {\n        throw new Error('Missing required key: afterCount')\n      }\n      this._value = options.value\n    } else {\n      throw new TypeError('options.value must be a Buffer or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(VirtualListViewControl, Control)\nObject.defineProperties(VirtualListViewControl.prototype, {\n  value: {\n    get: function () { return this._value || [] },\n    configurable: false\n  }\n})\n\nVirtualListViewControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n  const ber = new BerReader(buffer)\n  if (ber.readSequence()) {\n    this._value = {}\n    this._value.beforeCount = ber.readInt()\n    this._value.afterCount = ber.readInt()\n    if (ber.peek() === 0xa0) {\n      if (ber.readSequence(0xa0)) {\n        this._value.targetOffset = ber.readInt()\n        this._value.contentCount = ber.readInt()\n      }\n    }\n    if (ber.peek() === 0x81) {\n      this._value.greaterThanOrEqual = ber.readString(0x81)\n    }\n    return true\n  }\n  return false\n}\n\nVirtualListViewControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n  if (!this._value || this.value.length === 0) {\n    return\n  }\n  const writer = new BerWriter()\n  writer.startSequence(0x30)\n  writer.writeInt(this.value.beforeCount)\n  writer.writeInt(this.value.afterCount)\n  if (this.value.targetOffset !== undefined) {\n    writer.startSequence(0xa0)\n    writer.writeInt(this.value.targetOffset)\n    writer.writeInt(this.value.contentCount)\n    writer.endSequence()\n  } else if (this.value.greaterThanOrEqual !== undefined) {\n    writer.writeString(this.value.greaterThanOrEqual, 0x81)\n  }\n  writer.endSequence()\n  ber.writeBuffer(writer.buffer, 0x04)\n}\nVirtualListViewControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\nVirtualListViewControl.OID = '2.16.840.1.113730.3.4.9'\n\n/// ---Exports\n\nmodule.exports = VirtualListViewControl\n", "const assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst Control = require('./control')\nconst CODES = require('../errors/codes')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\n\nconst VALID_CODES = [\n  CODES.LDAP_SUCCESS,\n  CODES.LDAP_OPERATIONS_ERROR,\n  CODES.LDAP_UNWILLING_TO_PERFORM,\n  CODES.LDAP_INSUFFICIENT_ACCESS_RIGHTS,\n  CODES.LDAP_BUSY,\n  CODES.LDAP_TIME_LIMIT_EXCEEDED,\n  CODES.LDAP_ADMIN_LIMIT_EXCEEDED,\n  CODES.LDAP_SORT_CONTROL_MISSING,\n  CODES.LDAP_INDEX_RANGE_ERROR,\n  CODES.LDAP_CONTROL_ERROR,\n  CODES.LDAP_OTHER\n]\n\nfunction VirtualListViewResponseControl (options) {\n  assert.optionalObject(options)\n  options = options || {}\n  options.type = VirtualListViewResponseControl.OID\n  options.criticality = false\n\n  if (options.value) {\n    if (Buffer.isBuffer(options.value)) {\n      this.parse(options.value)\n    } else if (typeof (options.value) === 'object') {\n      if (VALID_CODES.indexOf(options.value.result) === -1) {\n        throw new Error('Invalid result code')\n      }\n      this._value = options.value\n    } else {\n      throw new TypeError('options.value must be a Buffer or Object')\n    }\n    options.value = null\n  }\n  Control.call(this, options)\n}\nutil.inherits(VirtualListViewResponseControl, Control)\nObject.defineProperties(VirtualListViewResponseControl.prototype, {\n  value: {\n    get: function () { return this._value || {} },\n    configurable: false\n  }\n})\n\nVirtualListViewResponseControl.prototype.parse = function parse (buffer) {\n  assert.ok(buffer)\n  const ber = new BerReader(buffer)\n  if (ber.readSequence()) {\n    this._value = {}\n    if (ber.peek(0x02)) {\n      this._value.targetPosition = ber.readInt()\n    }\n    if (ber.peek(0x02)) {\n      this._value.contentCount = ber.readInt()\n    }\n    this._value.result = ber.readEnumeration()\n    this._value.cookie = ber.readString(asn1.Ber.OctetString, true)\n    // readString returns '' instead of a zero-length buffer\n    if (!this._value.cookie) {\n      this._value.cookie = Buffer.alloc(0)\n    }\n    return true\n  }\n  return false\n}\n\nVirtualListViewResponseControl.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!this._value || this.value.length === 0) {\n    return\n  }\n\n  const writer = new BerWriter()\n  writer.startSequence()\n  if (this.value.targetPosition !== undefined) {\n    writer.writeInt(this.value.targetPosition)\n  }\n  if (this.value.contentCount !== undefined) {\n    writer.writeInt(this.value.contentCount)\n  }\n  writer.writeEnumeration(this.value.result)\n  if (this.value.cookie && this.value.cookie.length > 0) {\n    writer.writeBuffer(this.value.cookie, asn1.Ber.OctetString)\n  } else {\n    writer.writeString('') // writeBuffer rejects zero-length buffers\n  }\n  writer.endSequence()\n  ber.writeBuffer(writer.buffer, 0x04)\n}\n\nVirtualListViewResponseControl.prototype._json = function (obj) {\n  obj.controlValue = this.value\n  return obj\n}\n\nVirtualListViewResponseControl.OID = '2.16.840.1.113730.3.4.10'\n\n/// --- Exports\nmodule.exports = VirtualListViewResponseControl\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst Ber = require('asn1').Ber\n\nconst Control = require('./control')\nconst EntryChangeNotificationControl =\n  require('./entry_change_notification_control')\nconst PersistentSearchControl = require('./persistent_search_control')\nconst PagedResultsControl = require('./paged_results_control')\nconst ServerSideSortingRequestControl =\n  require('./server_side_sorting_request_control.js')\nconst ServerSideSortingResponseControl =\n  require('./server_side_sorting_response_control.js')\nconst VirtualListViewRequestControl =\n  require('./virtual_list_view_request_control.js')\nconst VirtualListViewResponseControl =\n  require('./virtual_list_view_response_control.js')\n\n/// --- API\n\nmodule.exports = {\n\n  getControl: function getControl (ber) {\n    assert.ok(ber)\n\n    if (ber.readSequence() === null) { return null }\n\n    let type\n    const opts = {\n      criticality: false,\n      value: null\n    }\n\n    if (ber.length) {\n      const end = ber.offset + ber.length\n\n      type = ber.readString()\n      if (ber.offset < end) {\n        if (ber.peek() === Ber.Boolean) { opts.criticality = ber.readBoolean() }\n      }\n\n      if (ber.offset < end) { opts.value = ber.readString(Ber.OctetString, true) }\n    }\n\n    let control\n    switch (type) {\n      case PersistentSearchControl.OID:\n        control = new PersistentSearchControl(opts)\n        break\n      case EntryChangeNotificationControl.OID:\n        control = new EntryChangeNotificationControl(opts)\n        break\n      case PagedResultsControl.OID:\n        control = new PagedResultsControl(opts)\n        break\n      case ServerSideSortingRequestControl.OID:\n        control = new ServerSideSortingRequestControl(opts)\n        break\n      case ServerSideSortingResponseControl.OID:\n        control = new ServerSideSortingResponseControl(opts)\n        break\n      case VirtualListViewRequestControl.OID:\n        control = new VirtualListViewRequestControl(opts)\n        break\n      case VirtualListViewResponseControl.OID:\n        control = new VirtualListViewResponseControl(opts)\n        break\n      default:\n        opts.type = type\n        control = new Control(opts)\n        break\n    }\n\n    return control\n  },\n\n  Control: Control,\n  EntryChangeNotificationControl: EntryChangeNotificationControl,\n  PagedResultsControl: PagedResultsControl,\n  PersistentSearchControl: PersistentSearchControl,\n  ServerSideSortingRequestControl: ServerSideSortingRequestControl,\n  ServerSideSortingResponseControl: ServerSideSortingResponseControl,\n  VirtualListViewRequestControl: VirtualListViewRequestControl,\n  VirtualListViewResponseControl: VirtualListViewResponseControl\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst logger = require('../logger')\n// var Control = require('../controls').Control\n// var Protocol = require('../protocol')\n\n/// --- Globals\n\n// var Ber = asn1.Ber\n// var BerReader = asn1.BerReader\nconst BerWriter = asn1.BerWriter\nconst getControl = require('../controls').getControl\n\n/// --- API\n\n/**\n * LDAPMessage structure.\n *\n * @param {Object} options stuff.\n */\nfunction LDAPMessage (options) {\n  assert.object(options)\n\n  this.messageID = options.messageID || 0\n  this.protocolOp = options.protocolOp || undefined\n  this.controls = options.controls ? options.controls.slice(0) : []\n\n  this.log = options.log || logger\n}\nObject.defineProperties(LDAPMessage.prototype, {\n  id: {\n    get: function getId () { return this.messageID },\n    configurable: false\n  },\n  dn: {\n    get: function getDN () { return this._dn || '' },\n    configurable: false\n  },\n  type: {\n    get: function getType () { return 'LDAPMessage' },\n    configurable: false\n  },\n  json: {\n    get: function () {\n      const out = this._json({\n        messageID: this.messageID,\n        protocolOp: this.type\n      })\n      out.controls = this.controls\n      return out\n    },\n    configurable: false\n  }\n})\n\nLDAPMessage.prototype.toString = function () {\n  return JSON.stringify(this.json)\n}\n\nLDAPMessage.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.log.trace('parse: data=%s', util.inspect(ber.buffer))\n\n  // Delegate off to the specific type to parse\n  this._parse(ber, ber.length)\n\n  // Look for controls\n  if (ber.peek() === 0xa0) {\n    ber.readSequence()\n    const end = ber.offset + ber.length\n    while (ber.offset < end) {\n      const c = getControl(ber)\n      if (c) { this.controls.push(c) }\n    }\n  }\n\n  this.log.trace('Parsing done: %j', this.json)\n  return true\n}\n\nLDAPMessage.prototype.toBer = function () {\n  let writer = new BerWriter()\n  writer.startSequence()\n  writer.writeInt(this.messageID)\n\n  writer.startSequence(this.protocolOp)\n  if (this._toBer) { writer = this._toBer(writer) }\n  writer.endSequence()\n\n  if (this.controls && this.controls.length) {\n    writer.startSequence(0xa0)\n    this.controls.forEach(function (c) {\n      c.toBer(writer)\n    })\n    writer.endSequence()\n  }\n\n  writer.endSequence()\n  return writer.buffer\n}\n\n/// --- Exports\n\nmodule.exports = LDAPMessage\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.s\n\n/// --- Globals\n\nlet SERVER_PROVIDER\nlet DTRACE_ID = 0\nconst MAX_INT = 4294967295\n\n/*\n * Args:\n * server-*-start:\n * 0 -> id\n * 1 -> remoteIP\n * 2 -> bindDN\n * 3 -> req.dn\n * 4,5 -> op specific\n *\n * server-*-done:\n * 0 -> id\n * 1 -> remoteIp\n * 2 -> bindDN\n * 3 -> requsetDN\n * 4 -> status\n * 5 -> errorMessage\n *\n */\nconst SERVER_PROBES = {\n\n  // 4: attributes.length\n  'server-add-start': ['int', 'char *', 'char *', 'char *', 'int'],\n  'server-add-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  'server-bind-start': ['int', 'char *', 'char *', 'char *'],\n  'server-bind-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  // 4: attribute, 5: value\n  'server-compare-start': ['int', 'char *', 'char *', 'char *',\n    'char *', 'char *'],\n  'server-compare-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  'server-delete-start': ['int', 'char *', 'char *', 'char *'],\n  'server-delete-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  // 4: requestName, 5: requestValue\n  'server-exop-start': ['int', 'char *', 'char *', 'char *', 'char *',\n    'char *'],\n  'server-exop-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  // 4: changes.length\n  'server-modify-start': ['int', 'char *', 'char *', 'char *', 'int'],\n  'server-modify-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  // 4: newRdn, 5: newSuperior\n  'server-modifydn-start': ['int', 'char *', 'char *', 'char *', 'char *',\n    'char *'],\n  'server-modifydn-done': ['int', 'char *', 'char *', 'char *', 'int',\n    'char *'],\n\n  // 4: scope, 5: filter\n  'server-search-start': ['int', 'char *', 'char *', 'char *', 'char *',\n    'char *'],\n  'server-search-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n  // Last two are searchEntry.DN and seachEntry.attributes.length\n  'server-search-entry': ['int', 'char *', 'char *', 'char *', 'char *', 'int'],\n\n  'server-unbind-start': ['int', 'char *', 'char *', 'char *'],\n  'server-unbind-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  'server-abandon-start': ['int', 'char *', 'char *', 'char *'],\n  'server-abandon-done': ['int', 'char *', 'char *', 'char *', 'int', 'char *'],\n\n  // remote IP\n  'server-connection': ['char *']\n}\n\n/// --- API\n\nmodule.exports = (function () {\n  if (!SERVER_PROVIDER) {\n    try {\n      const dtrace = require('dtrace-provider')\n      SERVER_PROVIDER = dtrace.createDTraceProvider('ldapjs')\n\n      Object.keys(SERVER_PROBES).forEach(function (p) {\n        const args = SERVER_PROBES[p].splice(0)\n        args.unshift(p)\n\n        dtrace.DTraceProvider.prototype.addProbe.apply(SERVER_PROVIDER, args)\n      })\n    } catch (e) {\n      SERVER_PROVIDER = {\n        fire: function () {\n        },\n        enable: function () {\n        },\n        addProbe: function () {\n          const p = {\n            fire: function () {\n            }\n          }\n          return (p)\n        },\n        removeProbe: function () {\n        },\n        disable: function () {\n        }\n      }\n    }\n\n    SERVER_PROVIDER.enable()\n\n    SERVER_PROVIDER._nextId = function () {\n      if (DTRACE_ID === MAX_INT) { DTRACE_ID = 0 }\n\n      return ++DTRACE_ID\n    }\n  }\n\n  return SERVER_PROVIDER\n}())\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nmodule.exports = {\n\n  // Misc\n  LDAP_VERSION_3: 0x03,\n  LBER_SET: 0x31,\n  LDAP_CONTROLS: 0xa0,\n\n  // Search\n  SCOPE_BASE_OBJECT: 0,\n  SCOPE_ONE_LEVEL: 1,\n  SCOPE_SUBTREE: 2,\n\n  NEVER_DEREF_ALIASES: 0,\n  DEREF_IN_SEARCHING: 1,\n  DEREF_BASE_OBJECT: 2,\n  DEREF_ALWAYS: 3,\n\n  FILTER_AND: 0xa0,\n  FILTER_OR: 0xa1,\n  FILTER_NOT: 0xa2,\n  FILTER_EQUALITY: 0xa3,\n  FILTER_SUBSTRINGS: 0xa4,\n  FILTER_GE: 0xa5,\n  FILTER_LE: 0xa6,\n  FILTER_PRESENT: 0x87,\n  FILTER_APPROX: 0xa8,\n  FILTER_EXT: 0xa9,\n\n  // Protocol Operations\n  LDAP_REQ_BIND: 0x60,\n  LDAP_REQ_UNBIND: 0x42,\n  LDAP_REQ_SEARCH: 0x63,\n  LDAP_REQ_MODIFY: 0x66,\n  LDAP_REQ_ADD: 0x68,\n  LDAP_REQ_DELETE: 0x4a,\n  LDAP_REQ_MODRDN: 0x6c,\n  LDAP_REQ_COMPARE: 0x6e,\n  LDAP_REQ_ABANDON: 0x50,\n  LDAP_REQ_EXTENSION: 0x77,\n\n  LDAP_REP_BIND: 0x61,\n  LDAP_REP_SEARCH_ENTRY: 0x64,\n  LDAP_REP_SEARCH_REF: 0x73,\n  LDAP_REP_SEARCH: 0x65,\n  LDAP_REP_MODIFY: 0x67,\n  LDAP_REP_ADD: 0x69,\n  LDAP_REP_DELETE: 0x6b,\n  LDAP_REP_MODRDN: 0x6d,\n  LDAP_REP_COMPARE: 0x6f,\n  LDAP_REP_EXTENSION: 0x78\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\n// var asn1 = require('asn1')\n\nconst dtrace = require('../dtrace')\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\n\n/// --- Globals\n\n// var Ber = asn1.Ber\n// var BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction LDAPResult (options) {\n  options = options || {}\n  assert.object(options)\n  assert.optionalNumber(options.status)\n  assert.optionalString(options.matchedDN)\n  assert.optionalString(options.errorMessage)\n  assert.optionalArrayOfString(options.referrals)\n\n  LDAPMessage.call(this, options)\n\n  this.status = options.status || 0 // LDAP SUCCESS\n  this.matchedDN = options.matchedDN || ''\n  this.errorMessage = options.errorMessage || ''\n  this.referrals = options.referrals || []\n\n  this.connection = options.connection || null\n}\nutil.inherits(LDAPResult, LDAPMessage)\nObject.defineProperties(LDAPResult.prototype, {\n  type: {\n    get: function getType () { return 'LDAPResult' },\n    configurable: false\n  }\n})\n\nLDAPResult.prototype.end = function (status) {\n  assert.ok(this.connection)\n\n  if (typeof (status) === 'number') { this.status = status }\n\n  const ber = this.toBer()\n  this.log.debug('%s: sending:  %j', this.connection.ldap.id, this.json)\n\n  try {\n    const self = this\n    this.connection.write(ber)\n\n    if (self._dtraceOp && self._dtraceId) {\n      dtrace.fire('server-' + self._dtraceOp + '-done', function () {\n        const c = self.connection || { ldap: {} }\n        return [\n          self._dtraceId || 0,\n          (c.remoteAddress || ''),\n          c.ldap.bindDN ? c.ldap.bindDN.toString() : '',\n          (self.requestDN ? self.requestDN.toString() : ''),\n          status || self.status,\n          self.errorMessage\n        ]\n      })\n    }\n  } catch (e) {\n    this.log.warn(e, '%s failure to write message %j',\n      this.connection.ldap.id, this.json)\n  }\n}\n\nLDAPResult.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.status = ber.readEnumeration()\n  this.matchedDN = ber.readString()\n  this.errorMessage = ber.readString()\n\n  const t = ber.peek()\n\n  if (t === Protocol.LDAP_REP_REFERRAL) {\n    const end = ber.offset + ber.length\n    while (ber.offset < end) { this.referrals.push(ber.readString()) }\n  }\n\n  return true\n}\n\nLDAPResult.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeEnumeration(this.status)\n  ber.writeString(this.matchedDN || '')\n  ber.writeString(this.errorMessage || '')\n\n  if (this.referrals.length) {\n    ber.startSequence(Protocol.LDAP_REP_REFERRAL)\n    ber.writeStringArray(this.referrals)\n    ber.endSequence()\n  }\n\n  return ber\n}\n\nLDAPResult.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.status = this.status\n  j.matchedDN = this.matchedDN\n  j.errorMessage = this.errorMessage\n  j.referrals = this.referrals\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = LDAPResult\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction AbandonRequest (options) {\n  options = options || {}\n  assert.object(options)\n  assert.optionalNumber(options.abandonID)\n\n  options.protocolOp = Protocol.LDAP_REQ_ABANDON\n  LDAPMessage.call(this, options)\n\n  this.abandonID = options.abandonID || 0\n}\nutil.inherits(AbandonRequest, LDAPMessage)\nObject.defineProperties(AbandonRequest.prototype, {\n  type: {\n    get: function getType () { return 'AbandonRequest' },\n    configurable: false\n  }\n})\n\nAbandonRequest.prototype._parse = function (ber, length) {\n  assert.ok(ber)\n  assert.ok(length)\n\n  // What a PITA - have to replicate ASN.1 integer logic to work around the\n  // way abandon is encoded and the way ldapjs framework handles \"normal\"\n  // messages\n\n  const buf = ber.buffer\n  let offset = 0\n  let value = 0\n\n  const fb = buf[offset++]\n  value = fb & 0x7F\n  for (let i = 1; i < length; i++) {\n    value <<= 8\n    value |= (buf[offset++] & 0xff)\n  }\n  if ((fb & 0x80) === 0x80) { value = -value }\n\n  ber._offset += length\n\n  this.abandonID = value\n\n  return true\n}\n\nAbandonRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  let i = this.abandonID\n  let sz = 4\n\n  while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000)) &&\n         (sz > 1)) {\n    sz--\n    i <<= 8\n  }\n  assert.ok(sz <= 4)\n\n  while (sz-- > 0) {\n    ber.writeByte((i & 0xff000000) >> 24)\n    i <<= 8\n  }\n\n  return ber\n}\n\nAbandonRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.abandonID = this.abandonID\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = AbandonRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\n\nconst asn1 = require('asn1')\n\nconst Protocol = require('./protocol')\n\n/// --- API\n\nfunction Attribute (options) {\n  if (options) {\n    if (typeof (options) !== 'object') { throw new TypeError('options must be an object') }\n    if (options.type && typeof (options.type) !== 'string') { throw new TypeError('options.type must be a string') }\n  } else {\n    options = {}\n  }\n\n  this.type = options.type || ''\n  this._vals = []\n\n  if (options.vals !== undefined && options.vals !== null) { this.vals = options.vals }\n}\n\nmodule.exports = Attribute\n\nObject.defineProperties(Attribute.prototype, {\n  buffers: {\n    get: function getBuffers () {\n      return this._vals\n    },\n    configurable: false\n  },\n  json: {\n    get: function getJson () {\n      return {\n        type: this.type,\n        vals: this.vals\n      }\n    },\n    configurable: false\n  },\n  vals: {\n    get: function getVals () {\n      const eType = _bufferEncoding(this.type)\n      return this._vals.map(function (v) {\n        return v.toString(eType)\n      })\n    },\n    set: function setVals (vals) {\n      const self = this\n      this._vals = []\n      if (Array.isArray(vals)) {\n        vals.forEach(function (v) {\n          self.addValue(v)\n        })\n      } else {\n        self.addValue(vals)\n      }\n    },\n    configurable: false\n  }\n})\n\nAttribute.prototype.addValue = function addValue (val) {\n  if (Buffer.isBuffer(val)) {\n    this._vals.push(val)\n  } else {\n    this._vals.push(Buffer.from(val + '', _bufferEncoding(this.type)))\n  }\n}\n\n/* BEGIN JSSTYLED */\nAttribute.compare = function compare (a, b) {\n  if (!(Attribute.isAttribute(a)) || !(Attribute.isAttribute(b))) {\n    throw new TypeError('can only compare Attributes')\n  }\n\n  if (a.type < b.type) return -1\n  if (a.type > b.type) return 1\n  if (a.vals.length < b.vals.length) return -1\n  if (a.vals.length > b.vals.length) return 1\n\n  for (let i = 0; i < a.vals.length; i++) {\n    if (a.vals[i] < b.vals[i]) return -1\n    if (a.vals[i] > b.vals[i]) return 1\n  }\n\n  return 0\n}\n/* END JSSTYLED */\n\nAttribute.prototype.parse = function parse (ber) {\n  assert.ok(ber)\n\n  ber.readSequence()\n  this.type = ber.readString()\n\n  if (ber.peek() === Protocol.LBER_SET) {\n    if (ber.readSequence(Protocol.LBER_SET)) {\n      const end = ber.offset + ber.length\n      while (ber.offset < end) { this._vals.push(ber.readString(asn1.Ber.OctetString, true)) }\n    }\n  }\n\n  return true\n}\n\nAttribute.prototype.toBer = function toBer (ber) {\n  assert.ok(ber)\n\n  ber.startSequence()\n  ber.writeString(this.type)\n  ber.startSequence(Protocol.LBER_SET)\n  if (this._vals.length) {\n    this._vals.forEach(function (b) {\n      ber.writeByte(asn1.Ber.OctetString)\n      ber.writeLength(b.length)\n      for (let i = 0; i < b.length; i++) { ber.writeByte(b[i]) }\n    })\n  } else {\n    ber.writeStringArray([])\n  }\n  ber.endSequence()\n  ber.endSequence()\n\n  return ber\n}\n\nAttribute.prototype.toString = function () {\n  return JSON.stringify(this.json)\n}\n\nAttribute.toBer = function (attr, ber) {\n  return Attribute.prototype.toBer.call(attr, ber)\n}\n\nAttribute.isAttribute = function isAttribute (attr) {\n  if (!attr || typeof (attr) !== 'object') {\n    return false\n  }\n  if (attr instanceof Attribute) {\n    return true\n  }\n  if ((typeof (attr.toBer) === 'function') &&\n      (typeof (attr.type) === 'string') &&\n      (Array.isArray(attr.vals)) &&\n      (attr.vals.filter(function (item) {\n        return (typeof (item) === 'string' ||\n                  Buffer.isBuffer(item))\n      }).length === attr.vals.length)) {\n    return true\n  }\n  return false\n}\n\nfunction _bufferEncoding (type) {\n  /* JSSTYLED */\n  return /;binary$/.test(type) ? 'base64' : 'utf8'\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\n\n/// --- Helpers\n\nfunction invalidDN (name) {\n  const e = new Error()\n  e.name = 'InvalidDistinguishedNameError'\n  e.message = name\n  return e\n}\n\nfunction isAlphaNumeric (c) {\n  const re = /[A-Za-z0-9]/\n  return re.test(c)\n}\n\nfunction isWhitespace (c) {\n  const re = /\\s/\n  return re.test(c)\n}\n\nfunction repeatChar (c, n) {\n  let out = ''\n  const max = n || 0\n  for (let i = 0; i < max; i++) { out += c }\n  return out\n}\n\n/// --- API\n\nfunction RDN (obj) {\n  const self = this\n  this.attrs = {}\n\n  if (obj) {\n    Object.keys(obj).forEach(function (k) {\n      self.set(k, obj[k])\n    })\n  }\n}\n\nRDN.prototype.set = function rdnSet (name, value, opts) {\n  assert.string(name, 'name (string) required')\n  assert.string(value, 'value (string) required')\n\n  const self = this\n  const lname = name.toLowerCase()\n  this.attrs[lname] = {\n    value: value,\n    name: name\n  }\n  if (opts && typeof (opts) === 'object') {\n    Object.keys(opts).forEach(function (k) {\n      if (k !== 'value') { self.attrs[lname][k] = opts[k] }\n    })\n  }\n}\n\nRDN.prototype.equals = function rdnEquals (rdn) {\n  if (typeof (rdn) !== 'object') { return false }\n\n  const ourKeys = Object.keys(this.attrs)\n  const theirKeys = Object.keys(rdn.attrs)\n  if (ourKeys.length !== theirKeys.length) { return false }\n\n  ourKeys.sort()\n  theirKeys.sort()\n\n  for (let i = 0; i < ourKeys.length; i++) {\n    if (ourKeys[i] !== theirKeys[i]) { return false }\n    if (this.attrs[ourKeys[i]].value !== rdn.attrs[ourKeys[i]].value) { return false }\n  }\n  return true\n}\n\n/**\n * Convert RDN to string according to specified formatting options.\n * (see: DN.format for option details)\n */\nRDN.prototype.format = function rdnFormat (options) {\n  assert.optionalObject(options, 'options must be an object')\n  options = options || {}\n\n  const self = this\n  let str = ''\n\n  function escapeValue (val, forceQuote) {\n    let out = ''\n    let cur = 0\n    const len = val.length\n    let quoted = false\n    /* BEGIN JSSTYLED */\n    // TODO: figure out what this regex is actually trying to test for and\n    // fix it to appease the linter.\n    /* eslint-disable-next-line no-useless-escape */\n    const escaped = /[\\\\\\\"]/\n    const special = /[,=+<>#;]/\n    /* END JSSTYLED */\n\n    if (len > 0) {\n      // Wrap strings with trailing or leading spaces in quotes\n      quoted = forceQuote || (val[0] === ' ' || val[len - 1] === ' ')\n    }\n\n    while (cur < len) {\n      if (escaped.test(val[cur]) || (!quoted && special.test(val[cur]))) {\n        out += '\\\\'\n      }\n      out += val[cur++]\n    }\n    if (quoted) { out = '\"' + out + '\"' }\n    return out\n  }\n  function sortParsed (a, b) {\n    return self.attrs[a].order - self.attrs[b].order\n  }\n  function sortStandard (a, b) {\n    const nameCompare = a.localeCompare(b)\n    if (nameCompare === 0) {\n      // TODO: Handle binary values\n      return self.attrs[a].value.localeCompare(self.attrs[b].value)\n    } else {\n      return nameCompare\n    }\n  }\n\n  const keys = Object.keys(this.attrs)\n  if (options.keepOrder) {\n    keys.sort(sortParsed)\n  } else {\n    keys.sort(sortStandard)\n  }\n\n  keys.forEach(function (key) {\n    const attr = self.attrs[key]\n    if (str.length) { str += '+' }\n\n    if (options.keepCase) {\n      str += attr.name\n    } else {\n      if (options.upperName) { str += key.toUpperCase() } else { str += key }\n    }\n\n    str += '=' + escapeValue(attr.value, (options.keepQuote && attr.quoted))\n  })\n\n  return str\n}\n\nRDN.prototype.toString = function rdnToString () {\n  return this.format()\n}\n\n// Thank you OpenJDK!\nfunction parse (name) {\n  if (typeof (name) !== 'string') { throw new TypeError('name (string) required') }\n\n  let cur = 0\n  const len = name.length\n\n  function parseRdn () {\n    const rdn = new RDN()\n    let order = 0\n    rdn.spLead = trim()\n    while (cur < len) {\n      const opts = {\n        order: order\n      }\n      const attr = parseAttrType()\n      trim()\n      if (cur >= len || name[cur++] !== '=') { throw invalidDN(name) }\n\n      trim()\n      // Parameters about RDN value are set in 'opts' by parseAttrValue\n      const value = parseAttrValue(opts)\n      rdn.set(attr, value, opts)\n      rdn.spTrail = trim()\n      if (cur >= len || name[cur] !== '+') { break }\n      ++cur\n      ++order\n    }\n    return rdn\n  }\n\n  function trim () {\n    let count = 0\n    while ((cur < len) && isWhitespace(name[cur])) {\n      ++cur\n      count++\n    }\n    return count\n  }\n\n  function parseAttrType () {\n    const beg = cur\n    while (cur < len) {\n      const c = name[cur]\n      if (isAlphaNumeric(c) ||\n          c === '.' ||\n          c === '-' ||\n          c === ' ') {\n        ++cur\n      } else {\n        break\n      }\n    }\n    // Back out any trailing spaces.\n    while ((cur > beg) && (name[cur - 1] === ' ')) { --cur }\n\n    if (beg === cur) { throw invalidDN(name) }\n\n    return name.slice(beg, cur)\n  }\n\n  function parseAttrValue (opts) {\n    if (cur < len && name[cur] === '#') {\n      opts.binary = true\n      return parseBinaryAttrValue()\n    } else if (cur < len && name[cur] === '\"') {\n      opts.quoted = true\n      return parseQuotedAttrValue()\n    } else {\n      return parseStringAttrValue()\n    }\n  }\n\n  function parseBinaryAttrValue () {\n    const beg = cur++\n    while (cur < len && isAlphaNumeric(name[cur])) { ++cur }\n\n    return name.slice(beg, cur)\n  }\n\n  function parseQuotedAttrValue () {\n    let str = ''\n    ++cur // Consume the first quote\n\n    while ((cur < len) && name[cur] !== '\"') {\n      if (name[cur] === '\\\\') { cur++ }\n      str += name[cur++]\n    }\n    if (cur++ >= len) {\n      // no closing quote\n      throw invalidDN(name)\n    }\n\n    return str\n  }\n\n  function parseStringAttrValue () {\n    const beg = cur\n    let str = ''\n    let esc = -1\n\n    while ((cur < len) && !atTerminator()) {\n      if (name[cur] === '\\\\') {\n        // Consume the backslash and mark its place just in case it's escaping\n        // whitespace which needs to be preserved.\n        esc = cur++\n      }\n      if (cur === len) {\n        // backslash followed by nothing\n        throw invalidDN(name)\n      }\n      str += name[cur++]\n    }\n\n    // Trim off (unescaped) trailing whitespace and rewind cursor to the end of\n    // the AttrValue to record whitespace length.\n    for (; cur > beg; cur--) {\n      if (!isWhitespace(name[cur - 1]) || (esc === (cur - 1))) { break }\n    }\n    return str.slice(0, cur - beg)\n  }\n\n  function atTerminator () {\n    return (cur < len &&\n            (name[cur] === ',' ||\n             name[cur] === ';' ||\n             name[cur] === '+'))\n  }\n\n  const rdns = []\n\n  // Short-circuit for empty DNs\n  if (len === 0) { return new DN(rdns) }\n\n  rdns.push(parseRdn())\n  while (cur < len) {\n    if (name[cur] === ',' || name[cur] === ';') {\n      ++cur\n      rdns.push(parseRdn())\n    } else {\n      throw invalidDN(name)\n    }\n  }\n\n  return new DN(rdns)\n}\n\nfunction DN (rdns) {\n  assert.optionalArrayOfObject(rdns, '[object] required')\n\n  this.rdns = rdns ? rdns.slice() : []\n  this._format = {}\n}\nObject.defineProperties(DN.prototype, {\n  length: {\n    get: function getLength () { return this.rdns.length },\n    configurable: false\n  }\n})\n\n/**\n * Convert DN to string according to specified formatting options.\n *\n * Parameters:\n * - options: formatting parameters (optional, details below)\n *\n * Options are divided into two types:\n * - Preservation options: Using data recorded during parsing, details of the\n *   original DN are preserved when converting back into a string.\n * - Modification options: Alter string formatting defaults.\n *\n * Preservation options _always_ take precedence over modification options.\n *\n * Preservation Options:\n * - keepOrder: Order of multi-value RDNs.\n * - keepQuote: RDN values which were quoted will remain so.\n * - keepSpace: Leading/trailing spaces will be output.\n * - keepCase: Parsed attr name will be output instead of lowercased version.\n *\n * Modification Options:\n * - upperName: RDN names will be uppercased instead of lowercased.\n * - skipSpace: Disable trailing space after RDN separators\n */\nDN.prototype.format = function dnFormat (options) {\n  assert.optionalObject(options, 'options must be an object')\n  options = options || this._format\n\n  let str = ''\n  this.rdns.forEach(function (rdn) {\n    const rdnString = rdn.format(options)\n    if (str.length !== 0) {\n      str += ','\n    }\n    if (options.keepSpace) {\n      str += (repeatChar(' ', rdn.spLead) +\n        rdnString + repeatChar(' ', rdn.spTrail))\n    } else if (options.skipSpace === true || str.length === 0) {\n      str += rdnString\n    } else {\n      str += ' ' + rdnString\n    }\n  })\n  return str\n}\n\n/**\n * Set default string formatting options.\n */\nDN.prototype.setFormat = function setFormat (options) {\n  assert.object(options, 'options must be an object')\n\n  this._format = options\n}\n\nDN.prototype.toString = function dnToString () {\n  return this.format()\n}\n\nDN.prototype.parentOf = function parentOf (dn) {\n  if (typeof (dn) !== 'object') { dn = parse(dn) }\n\n  if (this.rdns.length >= dn.rdns.length) { return false }\n\n  const diff = dn.rdns.length - this.rdns.length\n  for (let i = this.rdns.length - 1; i >= 0; i--) {\n    const myRDN = this.rdns[i]\n    const theirRDN = dn.rdns[i + diff]\n\n    if (!myRDN.equals(theirRDN)) { return false }\n  }\n\n  return true\n}\n\nDN.prototype.childOf = function childOf (dn) {\n  if (typeof (dn) !== 'object') { dn = parse(dn) }\n  return dn.parentOf(this)\n}\n\nDN.prototype.isEmpty = function isEmpty () {\n  return (this.rdns.length === 0)\n}\n\nDN.prototype.equals = function dnEquals (dn) {\n  if (typeof (dn) !== 'object') { dn = parse(dn) }\n\n  if (this.rdns.length !== dn.rdns.length) { return false }\n\n  for (let i = 0; i < this.rdns.length; i++) {\n    if (!this.rdns[i].equals(dn.rdns[i])) { return false }\n  }\n\n  return true\n}\n\nDN.prototype.parent = function dnParent () {\n  if (this.rdns.length !== 0) {\n    const save = this.rdns.shift()\n    const dn = new DN(this.rdns)\n    this.rdns.unshift(save)\n    return dn\n  }\n\n  return null\n}\n\nDN.prototype.clone = function dnClone () {\n  const dn = new DN(this.rdns)\n  dn._format = this._format\n  return dn\n}\n\nDN.prototype.reverse = function dnReverse () {\n  this.rdns.reverse()\n  return this\n}\n\nDN.prototype.pop = function dnPop () {\n  return this.rdns.pop()\n}\n\nDN.prototype.push = function dnPush (rdn) {\n  assert.object(rdn, 'rdn (RDN) required')\n\n  return this.rdns.push(rdn)\n}\n\nDN.prototype.shift = function dnShift () {\n  return this.rdns.shift()\n}\n\nDN.prototype.unshift = function dnUnshift (rdn) {\n  assert.object(rdn, 'rdn (RDN) required')\n\n  return this.rdns.unshift(rdn)\n}\n\nDN.isDN = function isDN (dn) {\n  if (!dn || typeof (dn) !== 'object') {\n    return false\n  }\n  if (dn instanceof DN) {\n    return true\n  }\n  if (Array.isArray(dn.rdns)) {\n    // Really simple duck-typing for now\n    return true\n  }\n  return false\n}\n\n/// --- Exports\n\nmodule.exports = {\n  parse: parse,\n  DN: DN,\n  RDN: RDN\n}\n", "// Copyright 2015 Joyent, Inc.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst isDN = require('./dn').DN.isDN\nconst isAttribute = require('./attribute').isAttribute\n\n/// --- Helpers\n\n// Copied from mcavage/node-assert-plus\nfunction _assert (arg, type, name) {\n  name = name || type\n  throw new assert.AssertionError({\n    message: util.format('%s (%s) required', name, type),\n    actual: typeof (arg),\n    expected: type,\n    operator: '===',\n    stackStartFunction: _assert.caller\n  })\n}\n\n/// --- API\n\nfunction stringDN (input, name) {\n  if (isDN(input) || typeof (input) === 'string') { return }\n  _assert(input, 'DN or string', name)\n}\n\nfunction optionalStringDN (input, name) {\n  if (input === undefined || isDN(input) || typeof (input) === 'string') { return }\n  _assert(input, 'DN or string', name)\n}\n\nfunction optionalDN (input, name) {\n  if (input !== undefined && !isDN(input)) { _assert(input, 'DN', name) }\n}\n\nfunction optionalArrayOfAttribute (input, name) {\n  if (input === undefined) { return }\n  if (!Array.isArray(input) ||\n      input.some(function (v) { return !isAttribute(v) })) {\n    _assert(input, 'array of Attribute', name)\n  }\n}\n\n/// --- Exports\n\nmodule.exports = {\n  stringDN: stringDN,\n  optionalStringDN: optionalStringDN,\n  optionalDN: optionalDN,\n  optionalArrayOfAttribute: optionalArrayOfAttribute\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Attribute = require('../attribute')\nconst Protocol = require('../protocol')\nconst lassert = require('../assert')\n\n/// --- API\n\nfunction AddRequest (options) {\n  options = options || {}\n  assert.object(options)\n  lassert.optionalStringDN(options.entry)\n  lassert.optionalArrayOfAttribute(options.attributes)\n\n  options.protocolOp = Protocol.LDAP_REQ_ADD\n  LDAPMessage.call(this, options)\n\n  this.entry = options.entry || null\n  this.attributes = options.attributes ? options.attributes.slice(0) : []\n}\nutil.inherits(AddRequest, LDAPMessage)\nObject.defineProperties(AddRequest.prototype, {\n  type: {\n    get: function getType () { return 'AddRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.entry },\n    configurable: false\n  }\n})\n\nAddRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.entry = ber.readString()\n\n  ber.readSequence()\n\n  const end = ber.offset + ber.length\n  while (ber.offset < end) {\n    const a = new Attribute()\n    a.parse(ber)\n    a.type = a.type.toLowerCase()\n    if (a.type === 'objectclass') {\n      for (let i = 0; i < a.vals.length; i++) { a.vals[i] = a.vals[i].toLowerCase() }\n    }\n    this.attributes.push(a)\n  }\n\n  this.attributes.sort(Attribute.compare)\n  return true\n}\n\nAddRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.entry.toString())\n  ber.startSequence()\n  this.attributes.forEach(function (a) {\n    a.toBer(ber)\n  })\n  ber.endSequence()\n\n  return ber\n}\n\nAddRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.entry = this.entry.toString()\n  j.attributes = []\n\n  this.attributes.forEach(function (a) {\n    j.attributes.push(a.json)\n  })\n\n  return j\n}\n\nAddRequest.prototype.indexOf = function (attr) {\n  if (!attr || typeof (attr) !== 'string') { throw new TypeError('attr (string) required') }\n\n  for (let i = 0; i < this.attributes.length; i++) {\n    if (this.attributes[i].type === attr) { return i }\n  }\n\n  return -1\n}\n\nAddRequest.prototype.attributeNames = function () {\n  const attrs = []\n\n  for (let i = 0; i < this.attributes.length; i++) { attrs.push(this.attributes[i].type.toLowerCase()) }\n\n  return attrs\n}\n\nAddRequest.prototype.getAttribute = function (name) {\n  if (!name || typeof (name) !== 'string') { throw new TypeError('attribute name (string) required') }\n\n  name = name.toLowerCase()\n\n  for (let i = 0; i < this.attributes.length; i++) {\n    if (this.attributes[i].type === name) { return this.attributes[i] }\n  }\n\n  return null\n}\n\nAddRequest.prototype.addAttribute = function (attr) {\n  if (!(attr instanceof Attribute)) { throw new TypeError('attribute (Attribute) required') }\n\n  return this.attributes.push(attr)\n}\n\n/**\n * Returns a \"pure\" JS representation of this object.\n *\n * An example object would look like:\n *\n * {\n *   \"dn\": \"cn=unit, dc=test\",\n *   \"attributes\": {\n *     \"cn\": [\"unit\", \"foo\"],\n *     \"objectclass\": [\"top\", \"person\"]\n *   }\n * }\n *\n * @return {Object} that looks like the above.\n */\nAddRequest.prototype.toObject = function () {\n  const self = this\n\n  const obj = {\n    dn: self.entry ? self.entry.toString() : '',\n    attributes: {}\n  }\n\n  if (!this.attributes || !this.attributes.length) { return obj }\n\n  this.attributes.forEach(function (a) {\n    if (!obj.attributes[a.type]) { obj.attributes[a.type] = [] }\n\n    a.vals.forEach(function (v) {\n      if (obj.attributes[a.type].indexOf(v) === -1) { obj.attributes[a.type].push(v) }\n    })\n  })\n\n  return obj\n}\n\n/// --- Exports\n\nmodule.exports = AddRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction AddResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_ADD\n  LDAPResult.call(this, options)\n}\nutil.inherits(AddResponse, LDAPResult)\n\n/// --- Exports\n\nmodule.exports = AddResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\n\n/// --- Globals\n\nconst Ber = asn1.Ber\nconst LDAP_BIND_SIMPLE = 'simple'\n// var LDAP_BIND_SASL = 'sasl'\n\n/// --- API\n\nfunction BindRequest (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REQ_BIND\n  LDAPMessage.call(this, options)\n\n  this.version = options.version || 0x03\n  this.name = options.name || null\n  this.authentication = options.authentication || LDAP_BIND_SIMPLE\n  this.credentials = options.credentials || ''\n}\nutil.inherits(BindRequest, LDAPMessage)\nObject.defineProperties(BindRequest.prototype, {\n  type: {\n    get: function getType () { return 'BindRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.name },\n    configurable: false\n  }\n})\n\nBindRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.version = ber.readInt()\n  this.name = ber.readString()\n\n  const t = ber.peek()\n\n  // TODO add support for SASL et al\n  if (t !== Ber.Context) { throw new Error('authentication 0x' + t.toString(16) + ' not supported') }\n\n  this.authentication = LDAP_BIND_SIMPLE\n  this.credentials = ber.readString(Ber.Context)\n\n  return true\n}\n\nBindRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeInt(this.version)\n  ber.writeString((this.name || '').toString())\n  // TODO add support for SASL et al\n  ber.writeString((this.credentials || ''), Ber.Context)\n\n  return ber\n}\n\nBindRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.version = this.version\n  j.name = this.name\n  j.authenticationType = this.authentication\n  j.credentials = this.credentials\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = BindRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction BindResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_BIND\n  LDAPResult.call(this, options)\n}\nutil.inherits(BindResponse, LDAPResult)\n\n/// --- Exports\n\nmodule.exports = BindResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\nconst lassert = require('../assert')\n\n/// --- API\n\nfunction CompareRequest (options) {\n  options = options || {}\n  assert.object(options)\n  assert.optionalString(options.attribute)\n  assert.optionalString(options.value)\n  lassert.optionalStringDN(options.entry)\n\n  options.protocolOp = Protocol.LDAP_REQ_COMPARE\n  LDAPMessage.call(this, options)\n\n  this.entry = options.entry || null\n  this.attribute = options.attribute || ''\n  this.value = options.value || ''\n}\nutil.inherits(CompareRequest, LDAPMessage)\nObject.defineProperties(CompareRequest.prototype, {\n  type: {\n    get: function getType () { return 'CompareRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.entry },\n    configurable: false\n  }\n})\n\nCompareRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.entry = ber.readString()\n\n  ber.readSequence()\n  this.attribute = ber.readString().toLowerCase()\n  this.value = ber.readString()\n\n  return true\n}\n\nCompareRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.entry.toString())\n  ber.startSequence()\n  ber.writeString(this.attribute)\n  ber.writeString(this.value)\n  ber.endSequence()\n\n  return ber\n}\n\nCompareRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.entry = this.entry.toString()\n  j.attribute = this.attribute\n  j.value = this.value\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = CompareRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction CompareResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_COMPARE\n  LDAPResult.call(this, options)\n}\nutil.inherits(CompareResponse, LDAPResult)\n\nCompareResponse.prototype.end = function (matches) {\n  let status = 0x06\n  if (typeof (matches) === 'boolean') {\n    if (!matches) { status = 0x05 } // Compare false\n  } else {\n    status = matches\n  }\n\n  return LDAPResult.prototype.end.call(this, status)\n}\n\n/// --- Exports\n\nmodule.exports = CompareResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\nconst lassert = require('../assert')\n\n/// --- API\n\nfunction DeleteRequest (options) {\n  options = options || {}\n  assert.object(options)\n  lassert.optionalStringDN(options.entry)\n\n  options.protocolOp = Protocol.LDAP_REQ_DELETE\n  LDAPMessage.call(this, options)\n\n  this.entry = options.entry || null\n}\nutil.inherits(DeleteRequest, LDAPMessage)\nObject.defineProperties(DeleteRequest.prototype, {\n  type: {\n    get: function getType () { return 'DeleteRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.entry },\n    configurable: false\n  }\n})\n\nDeleteRequest.prototype._parse = function (ber, length) {\n  assert.ok(ber)\n\n  this.entry = ber.buffer.slice(0, length).toString('utf8')\n  ber._offset += ber.length\n\n  return true\n}\n\nDeleteRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  const buf = Buffer.from(this.entry.toString())\n  for (let i = 0; i < buf.length; i++) { ber.writeByte(buf[i]) }\n\n  return ber\n}\n\nDeleteRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.entry = this.entry\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = DeleteRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction DeleteResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_DELETE\n  LDAPResult.call(this, options)\n}\nutil.inherits(DeleteResponse, LDAPResult)\n\n/// --- Exports\n\nmodule.exports = DeleteResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction ExtendedRequest (options) {\n  options = options || {}\n  assert.object(options)\n  assert.optionalString(options.requestName)\n  if (options.requestValue &&\n      !(Buffer.isBuffer(options.requestValue) ||\n      typeof (options.requestValue) === 'string')) {\n    throw new TypeError('options.requestValue must be a buffer or a string')\n  }\n\n  options.protocolOp = Protocol.LDAP_REQ_EXTENSION\n  LDAPMessage.call(this, options)\n\n  this.requestName = options.requestName || ''\n  this.requestValue = options.requestValue\n\n  if (Buffer.isBuffer(this.requestValue)) {\n    this.requestValueBuffer = this.requestValue\n  } else {\n    this.requestValueBuffer = Buffer.from(this.requestValue || '', 'utf8')\n  }\n}\nutil.inherits(ExtendedRequest, LDAPMessage)\nObject.defineProperties(ExtendedRequest.prototype, {\n  type: {\n    get: function getType () { return 'ExtendedRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.requestName },\n    configurable: false\n  },\n  name: {\n    get: function getName () { return this.requestName },\n    set: function setName (val) {\n      assert.string(val)\n      this.requestName = val\n    },\n    configurable: false\n  },\n  value: {\n    get: function getValue () { return this.requestValue },\n    set: function setValue (val) {\n      if (!(Buffer.isBuffer(val) || typeof (val) === 'string')) { throw new TypeError('value must be a buffer or a string') }\n\n      if (Buffer.isBuffer(val)) {\n        this.requestValueBuffer = val\n      } else {\n        this.requestValueBuffer = Buffer.from(val, 'utf8')\n      }\n\n      this.requestValue = val\n    },\n    configurable: false\n  },\n  valueBuffer: {\n    get: function getValueBuffer () {\n      return this.requestValueBuffer\n    },\n    set: function setValueBuffer (val) {\n      if (!Buffer.isBuffer(val)) { throw new TypeError('valueBuffer must be a buffer') }\n\n      this.value = val\n    },\n    configurable: false\n  }\n})\n\nExtendedRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.requestName = ber.readString(0x80)\n  if (ber.peek() === 0x81) {\n    this.requestValueBuffer = ber.readString(0x81, true)\n    this.requestValue = this.requestValueBuffer.toString('utf8')\n  }\n\n  return true\n}\n\nExtendedRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.requestName, 0x80)\n  if (Buffer.isBuffer(this.requestValue)) {\n    ber.writeBuffer(this.requestValue, 0x81)\n  } else if (typeof (this.requestValue) === 'string') {\n    ber.writeString(this.requestValue, 0x81)\n  }\n\n  return ber\n}\n\nExtendedRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.requestName = this.requestName\n  j.requestValue = (Buffer.isBuffer(this.requestValue))\n    ? this.requestValue.toString('hex')\n    : this.requestValue\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = ExtendedRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction ExtendedResponse (options) {\n  options = options || {}\n  assert.object(options)\n  assert.optionalString(options.responseName)\n  assert.optionalString(options.responsevalue)\n\n  this.responseName = options.responseName || undefined\n  this.responseValue = options.responseValue || undefined\n\n  options.protocolOp = Protocol.LDAP_REP_EXTENSION\n  LDAPResult.call(this, options)\n}\nutil.inherits(ExtendedResponse, LDAPResult)\nObject.defineProperties(ExtendedResponse.prototype, {\n  type: {\n    get: function getType () { return 'ExtendedResponse' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.responseName },\n    configurable: false\n  },\n  name: {\n    get: function getName () { return this.responseName },\n    set: function setName (val) {\n      assert.string(val)\n      this.responseName = val\n    },\n    configurable: false\n  },\n  value: {\n    get: function getValue () { return this.responseValue },\n    set: function (val) {\n      assert.string(val)\n      this.responseValue = val\n    },\n    configurable: false\n  }\n})\n\nExtendedResponse.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  if (!LDAPResult.prototype._parse.call(this, ber)) { return false }\n\n  if (ber.peek() === 0x8a) { this.responseName = ber.readString(0x8a) }\n  if (ber.peek() === 0x8b) { this.responseValue = ber.readString(0x8b) }\n\n  return true\n}\n\nExtendedResponse.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (!LDAPResult.prototype._toBer.call(this, ber)) { return false }\n\n  if (this.responseName) { ber.writeString(this.responseName, 0x8a) }\n  if (this.responseValue) { ber.writeString(this.responseValue, 0x8b) }\n\n  return ber\n}\n\nExtendedResponse.prototype._json = function (j) {\n  assert.ok(j)\n\n  j = LDAPResult.prototype._json.call(this, j)\n\n  j.responseName = this.responseName\n  j.responseValue = this.responseValue\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = ExtendedResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\n\nconst Attribute = require('./attribute')\n// var Protocol = require('./protocol')\n\n/// --- API\n\nfunction Change (options) {\n  if (options) {\n    assert.object(options)\n    assert.optionalString(options.operation)\n  } else {\n    options = {}\n  }\n\n  this._modification = false\n  this.operation = options.operation || options.type || 'add'\n  this.modification = options.modification || {}\n}\nObject.defineProperties(Change.prototype, {\n  operation: {\n    get: function getOperation () {\n      switch (this._operation) {\n        case 0x00: return 'add'\n        case 0x01: return 'delete'\n        case 0x02: return 'replace'\n        default:\n          throw new Error('0x' + this._operation.toString(16) + ' is invalid')\n      }\n    },\n    set: function setOperation (val) {\n      assert.string(val)\n      switch (val.toLowerCase()) {\n        case 'add':\n          this._operation = 0x00\n          break\n        case 'delete':\n          this._operation = 0x01\n          break\n        case 'replace':\n          this._operation = 0x02\n          break\n        default:\n          throw new Error('Invalid operation type: 0x' + val.toString(16))\n      }\n    },\n    configurable: false\n  },\n  modification: {\n    get: function getModification () {\n      return this._modification\n    },\n    set: function setModification (val) {\n      if (Attribute.isAttribute(val)) {\n        this._modification = val\n        return\n      }\n      // Does it have an attribute-like structure\n      if (Object.keys(val).length === 2 &&\n          typeof (val.type) === 'string' &&\n          Array.isArray(val.vals)) {\n        this._modification = new Attribute({\n          type: val.type,\n          vals: val.vals\n        })\n        return\n      }\n\n      const keys = Object.keys(val)\n      if (keys.length > 1) {\n        throw new Error('Only one attribute per Change allowed')\n      } else if (keys.length === 0) {\n        return\n      }\n\n      const k = keys[0]\n      const _attr = new Attribute({ type: k })\n      if (Array.isArray(val[k])) {\n        val[k].forEach(function (v) {\n          _attr.addValue(v.toString())\n        })\n      } else if (Buffer.isBuffer(val[k])) {\n        _attr.addValue(val[k])\n      } else if (val[k] !== undefined && val[k] !== null) {\n        _attr.addValue(val[k].toString())\n      }\n      this._modification = _attr\n    },\n    configurable: false\n  },\n  json: {\n    get: function getJSON () {\n      return {\n        operation: this.operation,\n        modification: this._modification ? this._modification.json : {}\n      }\n    },\n    configurable: false\n  }\n})\n\nChange.isChange = function isChange (change) {\n  if (!change || typeof (change) !== 'object') {\n    return false\n  }\n  if ((change instanceof Change) ||\n      ((typeof (change.toBer) === 'function') &&\n      (change.modification !== undefined) &&\n      (change.operation !== undefined))) {\n    return true\n  }\n  return false\n}\n\nChange.compare = function (a, b) {\n  if (!Change.isChange(a) || !Change.isChange(b)) { throw new TypeError('can only compare Changes') }\n\n  if (a.operation < b.operation) { return -1 }\n  if (a.operation > b.operation) { return 1 }\n\n  return Attribute.compare(a.modification, b.modification)\n}\n\n/**\n * Apply a Change to properties of an object.\n *\n * @param {Object} change the change to apply.\n * @param {Object} obj the object to apply it to.\n * @param {Boolean} scalar convert single-item arrays to scalars. Default: false\n */\nChange.apply = function apply (change, obj, scalar) {\n  assert.string(change.operation)\n  assert.string(change.modification.type)\n  assert.ok(Array.isArray(change.modification.vals))\n  assert.object(obj)\n\n  const type = change.modification.type\n  const vals = change.modification.vals\n  let data = obj[type]\n  if (data !== undefined) {\n    if (!Array.isArray(data)) {\n      data = [data]\n    }\n  } else {\n    data = []\n  }\n  switch (change.operation) {\n    case 'replace':\n      if (vals.length === 0) {\n      // replace empty is a delete\n        delete obj[type]\n        return obj\n      } else {\n        data = vals\n      }\n      break\n    case 'add': {\n    // add only new unique entries\n      const newValues = vals.filter(function (entry) {\n        return (data.indexOf(entry) === -1)\n      })\n      data = data.concat(newValues)\n      break\n    }\n    case 'delete':\n      data = data.filter(function (entry) {\n        return (vals.indexOf(entry) === -1)\n      })\n      if (data.length === 0) {\n      // Erase the attribute if empty\n        delete obj[type]\n        return obj\n      }\n      break\n    default:\n      break\n  }\n  if (scalar && data.length === 1) {\n    // store single-value outputs as scalars, if requested\n    obj[type] = data[0]\n  } else {\n    obj[type] = data\n  }\n  return obj\n}\n\nChange.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  ber.readSequence()\n  this._operation = ber.readEnumeration()\n  this._modification = new Attribute()\n  this._modification.parse(ber)\n\n  return true\n}\n\nChange.prototype.toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.startSequence()\n  ber.writeEnumeration(this._operation)\n  ber = this._modification.toBer(ber)\n  ber.endSequence()\n\n  return ber\n}\n\n/// --- Exports\n\nmodule.exports = Change\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Change = require('../change')\nconst Protocol = require('../protocol')\nconst lassert = require('../assert')\n\n/// --- API\n\nfunction ModifyRequest (options) {\n  options = options || {}\n  assert.object(options)\n  lassert.optionalStringDN(options.object)\n  lassert.optionalArrayOfAttribute(options.attributes)\n\n  options.protocolOp = Protocol.LDAP_REQ_MODIFY\n  LDAPMessage.call(this, options)\n\n  this.object = options.object || null\n  this.changes = options.changes ? options.changes.slice(0) : []\n}\nutil.inherits(ModifyRequest, LDAPMessage)\nObject.defineProperties(ModifyRequest.prototype, {\n  type: {\n    get: function getType () { return 'ModifyRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.object },\n    configurable: false\n  }\n})\n\nModifyRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.object = ber.readString()\n\n  ber.readSequence()\n  const end = ber.offset + ber.length\n  while (ber.offset < end) {\n    const c = new Change()\n    c.parse(ber)\n    c.modification.type = c.modification.type.toLowerCase()\n    this.changes.push(c)\n  }\n\n  this.changes.sort(Change.compare)\n  return true\n}\n\nModifyRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.object.toString())\n  ber.startSequence()\n  this.changes.forEach(function (c) {\n    c.toBer(ber)\n  })\n  ber.endSequence()\n\n  return ber\n}\n\nModifyRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.object = this.object\n  j.changes = []\n\n  this.changes.forEach(function (c) {\n    j.changes.push(c.json)\n  })\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = ModifyRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction ModifyResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_MODIFY\n  LDAPResult.call(this, options)\n}\nutil.inherits(ModifyResponse, LDAPResult)\n\n/// --- Exports\n\nmodule.exports = ModifyResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\nconst dn = require('../dn')\nconst lassert = require('../assert')\n\n/// --- API\n\nfunction ModifyDNRequest (options) {\n  options = options || {}\n  assert.object(options)\n  assert.optionalBool(options.deleteOldRdn)\n  lassert.optionalStringDN(options.entry)\n  lassert.optionalDN(options.newRdn)\n  lassert.optionalDN(options.newSuperior)\n\n  options.protocolOp = Protocol.LDAP_REQ_MODRDN\n  LDAPMessage.call(this, options)\n\n  this.entry = options.entry || null\n  this.newRdn = options.newRdn || null\n  this.deleteOldRdn = options.deleteOldRdn || true\n  this.newSuperior = options.newSuperior || null\n}\nutil.inherits(ModifyDNRequest, LDAPMessage)\nObject.defineProperties(ModifyDNRequest.prototype, {\n  type: {\n    get: function getType () { return 'ModifyDNRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.entry },\n    configurable: false\n  }\n})\n\nModifyDNRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.entry = ber.readString()\n  this.newRdn = dn.parse(ber.readString())\n  this.deleteOldRdn = ber.readBoolean()\n  if (ber.peek() === 0x80) { this.newSuperior = dn.parse(ber.readString(0x80)) }\n\n  return true\n}\n\nModifyDNRequest.prototype._toBer = function (ber) {\n  // assert.ok(ber);\n\n  ber.writeString(this.entry.toString())\n  ber.writeString(this.newRdn.toString())\n  ber.writeBoolean(this.deleteOldRdn)\n  if (this.newSuperior) {\n    const s = this.newSuperior.toString()\n    const len = Buffer.byteLength(s)\n\n    ber.writeByte(0x80) // MODIFY_DN_REQUEST_NEW_SUPERIOR_TAG\n    ber.writeLength(len)\n    ber._ensure(len)\n    ber._buf.write(s, ber._offset)\n    ber._offset += len\n  }\n\n  return ber\n}\n\nModifyDNRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.entry = this.entry.toString()\n  j.newRdn = this.newRdn.toString()\n  j.deleteOldRdn = this.deleteOldRdn\n  j.newSuperior = this.newSuperior ? this.newSuperior.toString() : ''\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = ModifyDNRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction ModifyDNResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_MODRDN\n  LDAPResult.call(this, options)\n}\nutil.inherits(ModifyDNResponse, LDAPResult)\n\n/// --- Exports\n\nmodule.exports = ModifyDNResponse\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2014 Patrick Mooney.  All rights reserved.\n\nvar assert = require('assert-plus');\n\n\n///--- API\n\n/**\n * RFC 2254 Escaping of filter strings\n *\n * Raw                     Escaped\n * (o=Parens (R Us))       (o=Parens \\28R Us\\29)\n * (cn=star*)              (cn=star\\2A)\n * (filename=C:\\MyFile)    (filename=C:\\5cMyFile)\n *\n * Use substr_filter to avoid having * ecsaped.\n *\n * @author [Austin King](https://github.com/ozten)\n */\nfunction _escape(inp) {\n  var esc = '';\n  var i;\n  if (typeof (inp) === 'string') {\n    for (i = 0; i < inp.length; i++) {\n      switch (inp[i]) {\n        case '*':\n          esc += '\\\\2a';\n          break;\n        case '(':\n          esc += '\\\\28';\n          break;\n        case ')':\n          esc += '\\\\29';\n          break;\n        case '\\\\':\n          esc += '\\\\5c';\n          break;\n        case '\\0':\n          esc += '\\\\00';\n          break;\n        default:\n          esc += inp[i];\n          break;\n      }\n    }\n    return esc;\n\n  } else {\n    assert.buffer(inp, 'input must be string or Buffer');\n    for (i = 0; i < inp.length; i++) {\n      if (inp[i] < 16) {\n        esc += '\\\\0' + inp[i].toString(16);\n      } else {\n        esc += '\\\\' + inp[i].toString(16);\n      }\n    }\n    return esc;\n  }\n}\n\n\n/**\n * Check value or array with test function.\n *\n * @param {Function} rule test function.\n * @param value value or array of values.\n * @param {Boolean} allMatch require all array values to match. default: false\n */\nfunction testValues(rule, value, allMatch) {\n  if (Array.isArray(value)) {\n    var i;\n    if (allMatch) {\n      // Do all entries match rule?\n      for (i = 0; i < value.length; i++) {\n        if (!rule(value[i])) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      // Do any entries match rule?\n      for (i = 0; i < value.length; i++) {\n        if (rule(value[i])) {\n          return true;\n        }\n      }\n      return false;\n    }\n  } else {\n    return rule(value);\n  }\n}\n\n\n/**\n * Fetch value for named object attribute.\n *\n * @param {Object} obj object to fetch value from\n * @param {String} attr name of attribute to fetch\n * @param {Boolean} strictCase attribute name is case-sensitive. default: false\n */\nfunction getAttrValue(obj, attr, strictCase) {\n  assert.object(obj);\n  assert.string(attr);\n  // Check for exact case match first\n  if (obj.hasOwnProperty(attr)) {\n    return obj[attr];\n  } else if (strictCase) {\n    return undefined;\n  }\n\n  // Perform case-insensitive enumeration after that\n  var lower = attr.toLowerCase();\n  var result;\n  Object.getOwnPropertyNames(obj).some(function (name) {\n    if (name.toLowerCase() === lower) {\n      result = obj[name];\n      return true;\n    }\n    return false;\n  });\n  return result;\n}\n\n\n/**\n * Filter base class\n */\nfunction Filter() {\n}\n\n\n/**\n * Depth-first filter traversal\n */\nFilter.prototype.forEach = function forEach(cb) {\n  if (this.filter) {\n    // not\n    this.filter.forEach(cb);\n  } else if (this.filters) {\n    // and/or\n    this.filters.forEach(function (item) {\n      item.forEach(cb);\n    });\n  }\n  cb(this);\n};\n\n/**\n * Depth-first map traversal.\n */\nFilter.prototype.map = function map(cb) {\n  var child;\n  if (this.filter) {\n    child = this.filter.map(cb);\n    if (child === null) {\n      // empty NOT not allowed\n      return null;\n    } else {\n      this.filter = child;\n    }\n  } else if (this.filters) {\n    child = this.filters.map(function (item) {\n      return item.map(cb);\n    }).filter(function (item) {\n      return (item !== null);\n    });\n    if (child.length === 0) {\n      // empty and/or not allowed\n      return null;\n    } else {\n      this.filters = child;\n    }\n  }\n  return cb(this);\n};\n\n\n///--- Exports\n\nmodule.exports = {\n  escape: _escape,\n  testValues: testValues,\n  getAttrValue: getAttrValue,\n  Filter: Filter\n};\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n// Copyright 2016 Joyent, Inc.\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n///--- Internal\n\nfunction toJSON(filter) {\n  return filter.json;\n}\n\n///--- API\n\nfunction AndFilter(options) {\n  assert.optionalObject(options);\n  options = options || {};\n  assert.optionalArrayOfObject(options.filters, 'options.filters');\n\n  this.filters = options.filters ? options.filters.slice() : [];\n}\nutil.inherits(AndFilter, helpers.Filter);\nObject.defineProperties(AndFilter.prototype, {\n  type: {\n    get: function getType() { return 'and'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'And',\n        filters: this.filters.map(toJSON)\n      };\n    },\n    configurable: false\n  }\n});\n\nAndFilter.prototype.toString = function toString() {\n  var str = '(&';\n  this.filters.forEach(function (f) {\n    str += f.toString();\n  });\n  str += ')';\n\n  return str;\n};\n\nAndFilter.prototype.matches = function matches(target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  if (this.filters.length === 0) {\n    /* true per RFC4526 */\n    return true;\n  }\n\n  for (var i = 0; i < this.filters.length; i++) {\n    if (!this.filters[i].matches(target, strictAttrCase))\n      return false;\n  }\n\n  return true;\n};\n\nAndFilter.prototype.addFilter = function addFilter(filter) {\n  assert.object(filter, 'filter');\n\n  this.filters.push(filter);\n};\n\n\n///--- Exports\n\nmodule.exports = AndFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction ApproximateFilter(options) {\n  assert.optionalObject(options);\n  if (options) {\n    assert.string(options.attribute, 'options.attribute');\n    assert.string(options.value, 'options.value');\n    this.attribute = options.attribute;\n    this.value = options.value;\n  }\n}\nutil.inherits(ApproximateFilter, helpers.Filter);\nObject.defineProperties(ApproximateFilter.prototype, {\n  type: {\n    get: function getType() { return 'approx'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'ApproximateMatch',\n        attribute: this.attribute,\n        value: this.value\n      };\n    },\n    configurable: false\n  }\n});\n\nApproximateFilter.prototype.toString = function toString() {\n  return ('(' + helpers.escape(this.attribute) +\n          '~=' + helpers.escape(this.value) + ')');\n};\n\nApproximateFilter.prototype.matches = function matches() {\n  // Consumers must implement this themselves\n  throw new Error('approx match implementation missing');\n};\n\n\n///--- Exports\n\nmodule.exports = ApproximateFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction EqualityFilter(options) {\n  assert.optionalObject(options);\n  if (options) {\n    assert.string(options.attribute, 'options.attribute');\n    this.attribute = options.attribute;\n    // Prefer Buffers over strings to make filter cloning easier\n    if (options.raw) {\n      this.raw = options.raw;\n    } else {\n      this.raw = new Buffer(options.value);\n    }\n  } else {\n    this.raw = new Buffer(0);\n  }\n}\nutil.inherits(EqualityFilter, helpers.Filter);\nObject.defineProperties(EqualityFilter.prototype, {\n  type: {\n    get: function getType() { return 'equal'; },\n    configurable: false\n  },\n  value: {\n    get: function getValue() {\n      return (Buffer.isBuffer(this.raw)) ? this.raw.toString() : this.raw;\n    },\n    set: function setValue(val) {\n      if (typeof (val) === 'string') {\n        this.raw = new Buffer(val);\n      } else if (Buffer.isBuffer(val)) {\n        this.raw = new Buffer(val.length);\n        val.copy(this.raw);\n      } else {\n        this.raw = val;\n      }\n    },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'EqualityMatch',\n        attribute: this.attribute,\n        value: this.value\n      };\n    },\n    configurable: false\n  }\n});\n\nEqualityFilter.prototype.toString = function toString() {\n  var value, decoded, validate;\n  if (Buffer.isBuffer(this.raw)) {\n    value = this.raw;\n    decoded = this.raw.toString('utf8');\n    validate = new Buffer(decoded, 'utf8');\n    /*\n     * Use the decoded UTF-8 if it is valid, otherwise fall back to bytes.\n     * Since Buffer.compare is missing in older versions of node, a simple\n     * length comparison is used as a heuristic.  This can be updated later to\n     * a full compare if it is found lacking.\n     */\n    if (validate.length === this.raw.length) {\n      value = decoded;\n    }\n  } else if (typeof (this.raw) === 'string') {\n    value = this.raw;\n  } else {\n    throw new Error('invalid value type');\n  }\n  return ('(' + helpers.escape(this.attribute) +\n          '=' + helpers.escape(value) + ')');\n};\n\nEqualityFilter.prototype.matches = function matches(target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  var tv = helpers.getAttrValue(target, this.attribute, strictAttrCase);\n  var value = this.value;\n\n  return helpers.testValues(function (v) {\n    return value === v;\n  }, tv);\n};\n\n\n///--- Exports\n\nmodule.exports = EqualityFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction ExtensibleFilter(options) {\n  assert.optionalObject(options);\n  options = options || {};\n  assert.optionalString(options.rule, 'options.rule');\n  assert.optionalString(options.matchType, 'options.matchType');\n  assert.optionalString(options.attribute, 'options.attribute');\n  assert.optionalString(options.value, 'options.value');\n\n  if (options.matchType !== undefined) {\n    this.matchType = options.matchType;\n  } else {\n    this.matchType = options.attribute;\n  }\n  this.dnAttributes = options.dnAttributes || false;\n  this.rule = options.rule;\n  this.value = (options.value !== undefined) ? options.value : '';\n}\nutil.inherits(ExtensibleFilter, helpers.Filter);\nObject.defineProperties(ExtensibleFilter.prototype, {\n  type: {\n    get: function getType() { return 'ext'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'ExtensibleMatch',\n        matchRule: this.rule,\n        matchType: this.matchType,\n        matchValue: this.value,\n        dnAttributes: this.dnAttributes\n      };\n    },\n    configurable: false\n  },\n  matchingRule: {\n    get: function getRule() { return this.rule; },\n    configurable: false\n  },\n  matchValue: {\n    get: function getValue() { return this.value; },\n    configurable: false\n  },\n  attribute: {\n    get: function getAttribute() { return this.matchType; },\n    set: function setAttribute(val) { this.matchType = val; },\n    configurable: false\n  }\n});\n\nExtensibleFilter.prototype.toString = function toString() {\n  var str = '(';\n\n  if (this.matchType)\n    str += this.matchType;\n\n  str += ':';\n\n  if (this.dnAttributes)\n    str += 'dn:';\n\n  if (this.rule)\n    str += this.rule + ':';\n\n  return (str + '=' + this.value + ')');\n};\n\nExtensibleFilter.prototype.matches = function matches() {\n  // Consumers must implement this themselves\n  throw new Error('ext match implementation missing');\n};\n\n\n///--- Exports\n\nmodule.exports = ExtensibleFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction GreaterThanEqualsFilter(options) {\n  assert.optionalObject(options);\n  if (options) {\n    assert.string(options.attribute, 'options.attribute');\n    assert.string(options.value, 'options.value');\n    this.attribute = options.attribute;\n    this.value = options.value;\n  }\n}\nutil.inherits(GreaterThanEqualsFilter, helpers.Filter);\nObject.defineProperties(GreaterThanEqualsFilter.prototype, {\n  type: {\n    get: function getType() { return 'ge'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'GreaterThanEqualsMatch',\n        attribute: this.attribute,\n        value: this.value\n      };\n    },\n    configurable: false\n  }\n});\n\nGreaterThanEqualsFilter.prototype.toString = function toString() {\n  return ('(' + helpers.escape(this.attribute) +\n          '>=' + helpers.escape(this.value) + ')');\n};\n\nGreaterThanEqualsFilter.prototype.matches = function (target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  var tv = helpers.getAttrValue(target, this.attribute, strictAttrCase);\n  var value = this.value;\n\n  return helpers.testValues(function (v) {\n    return value <= v;\n  }, tv);\n};\n\n\n///--- Exports\n\nmodule.exports = GreaterThanEqualsFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction LessThanEqualsFilter(options) {\n  assert.optionalObject(options);\n  if (options) {\n    assert.string(options.attribute, 'options.attribute');\n    assert.string(options.value, 'options.attribute');\n    this.attribute = options.attribute;\n    this.value = options.value;\n  }\n}\nutil.inherits(LessThanEqualsFilter, helpers.Filter);\nObject.defineProperties(LessThanEqualsFilter.prototype, {\n  type: {\n    get: function getType() { return 'le'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'LessThanEqualsMatch',\n        attribute: this.attribute,\n        value: this.value\n      };\n    },\n    configurable: false\n  }\n});\n\nLessThanEqualsFilter.prototype.toString = function toString() {\n  return ('(' + helpers.escape(this.attribute) +\n          '<=' + helpers.escape(this.value) + ')');\n};\n\nLessThanEqualsFilter.prototype.matches = function (target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  var tv = helpers.getAttrValue(target, this.attribute, strictAttrCase);\n  var value = this.value;\n\n  return helpers.testValues(function (v) {\n    return value >= v;\n  }, tv);\n};\n\n\n///--- Exports\n\nmodule.exports = LessThanEqualsFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n// Copyright 2016 Joyent, Inc.\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction NotFilter(options) {\n  assert.optionalObject(options);\n  options = options || {};\n  assert.optionalObject(options.filter, 'options.filter');\n\n  this.filter = options.filter || {};\n}\nutil.inherits(NotFilter, helpers.Filter);\nObject.defineProperties(NotFilter.prototype, {\n  type: {\n    get: function getType() { return 'not'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'Not',\n        filter: this.filter.json\n      };\n    },\n    configurable: false\n  }\n});\n\nNotFilter.prototype.setFilter = function setFilter(filter) {\n  assert.object(filter, 'filter');\n  this.filter = filter;\n};\n\nNotFilter.prototype.toString = function toString() {\n  return '(!' + this.filter.toString() + ')';\n};\n\nNotFilter.prototype.matches = function matches(target, strictAttrCase) {\n  return !this.filter.matches(target, strictAttrCase);\n};\n\n\n///--- Exports\n\nmodule.exports = NotFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n// Copyright 2016 Joyent, Inc.\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n///--- Internal\n\nfunction toJSON(filter) {\n  return filter.json;\n}\n\n///--- API\n\nfunction OrFilter(options) {\n  assert.optionalObject(options);\n  options = options || {};\n  assert.optionalArrayOfObject(options.filters);\n\n  this.filters = options.filters ? options.filters.slice() : [];\n}\nutil.inherits(OrFilter, helpers.Filter);\nObject.defineProperties(OrFilter.prototype, {\n  type: {\n    get: function getType() { return 'or'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'Or',\n        filters: this.filters.map(toJSON)\n      };\n    },\n    configurable: false\n  }\n});\n\nOrFilter.prototype.toString = function toString() {\n  var str = '(|';\n  this.filters.forEach(function (f) {\n    str += f.toString();\n  });\n  str += ')';\n\n  return str;\n};\n\nOrFilter.prototype.matches = function matches(target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  for (var i = 0; i < this.filters.length; i++) {\n    if (this.filters[i].matches(target, strictAttrCase))\n      return true;\n  }\n\n  return false;\n};\n\nOrFilter.prototype.addFilter = function addFilter(filter) {\n  assert.object(filter, 'filter');\n\n  this.filters.push(filter);\n};\n\n\n///--- Exports\n\nmodule.exports = OrFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- API\n\nfunction PresenceFilter(options) {\n  assert.optionalObject(options);\n  options = options || {};\n  assert.optionalString(options.attribute);\n\n  this.attribute = options.attribute;\n}\nutil.inherits(PresenceFilter, helpers.Filter);\nObject.defineProperties(PresenceFilter.prototype, {\n  type: {\n    get: function getType() { return 'present'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'PresenceMatch',\n        attribute: this.attribute\n      };\n    },\n    configurable: false\n  }\n});\n\nPresenceFilter.prototype.toString = function toString() {\n  return '(' + helpers.escape(this.attribute) + '=*)';\n};\n\nPresenceFilter.prototype.matches = function matches(target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  var value = helpers.getAttrValue(target, this.attribute, strictAttrCase);\n\n  return (value !== undefined && value !== null);\n};\n\n\n///--- Exports\n\nmodule.exports = PresenceFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2015 Patrick Mooney\n\nvar util = require('util');\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers');\n\n\n///--- Helpers\n\nfunction escapeRegExp(str) {\n  /* JSSTYLED */\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n\n\n///--- API\n\nfunction SubstringFilter(options) {\n  assert.optionalObject(options);\n  if (options) {\n    assert.string(options.attribute, 'options.attribute');\n\n    this.attribute = options.attribute;\n    this.initial = options.initial;\n    this.any = options.any ? options.any.slice(0) : [];\n    this.final = options.final;\n  } else {\n    this.any = [];\n  }\n}\nutil.inherits(SubstringFilter, helpers.Filter);\nObject.defineProperties(SubstringFilter.prototype, {\n  type: {\n    get: function getType() { return 'substring'; },\n    configurable: false\n  },\n  json: {\n    get: function getJson() {\n      return {\n        type: 'SubstringMatch',\n        initial: this.initial,\n        any: this.any,\n        final: this.final\n      };\n    },\n    configurable: false\n  }\n});\n\nSubstringFilter.prototype.toString = function toString() {\n  var str = '(' + helpers.escape(this.attribute) + '=';\n\n  if (this.initial)\n    str += helpers.escape(this.initial);\n\n  str += '*';\n\n  this.any.forEach(function (s) {\n    str += helpers.escape(s) + '*';\n  });\n\n  if (this.final)\n    str += helpers.escape(this.final);\n\n  str += ')';\n\n  return str;\n};\n\nSubstringFilter.prototype.matches = function matches(target, strictAttrCase) {\n  assert.object(target, 'target');\n\n  var tv = helpers.getAttrValue(target, this.attribute, strictAttrCase);\n\n  if (tv !== undefined && tv !== null) {\n    var re = '';\n\n    if (this.initial)\n      re += '^' + escapeRegExp(this.initial) + '.*';\n    this.any.forEach(function (s) {\n      re += escapeRegExp(s) + '.*';\n    });\n    if (this.final)\n      re += escapeRegExp(this.final) + '$';\n\n    var matcher = new RegExp(re);\n    return helpers.testValues(function (v) {\n      return matcher.test(v);\n    }, tv);\n  }\n\n  return false;\n};\n\n\n///--- Exports\n\nmodule.exports = SubstringFilter;\n", "// Copyright 2014 Mark Cavage, Inc.  All rights reserved.\n// Copyright 2014 Patrick Mooney.  All rights reserved.\n// Copyright 2016 Joyent, Inc.\n\nvar assert = require('assert-plus');\n\nvar helpers = require('./helpers.js');\n\nvar AndFilter = require('./and_filter');\nvar ApproximateFilter = require('./approx_filter');\nvar EqualityFilter = require('./equality_filter');\nvar ExtensibleFilter = require('./ext_filter');\nvar GreaterThanEqualsFilter = require('./ge_filter');\nvar LessThanEqualsFilter = require('./le_filter');\nvar NotFilter = require('./not_filter');\nvar OrFilter = require('./or_filter');\nvar PresenceFilter = require('./presence_filter');\nvar SubstringFilter = require('./substr_filter');\n\n\n///--- Globals\n\n/* JSSTYLED */\nvar attrRegex = /^[-_a-zA-Z0-9]+/;\nvar hexRegex = /^[a-fA-F0-9]{2}$/;\n\n\n///--- Internal\n\nfunction escapeValue(str)\n{\n  var cur = 0;\n  var len = str.length;\n  var out = '';\n\n  while (cur < len) {\n    var c = str[cur];\n\n    switch (c) {\n    case '(':\n      /*\n       * Although '*' characters should be escaped too, we ignore them here in\n       * case downstream ExtensibleFilter consumers wish to perform their own\n       * value-add parsing after the fact.\n       *\n       * Handling unescaped ')' is not needed since such occurances will parse\n       * as premature (and likely) unbalanced parens in the filter expression.\n       */\n      throw new Error('illegal unescaped char: ' + c);\n\n    case '\\\\':\n      /* Parse a \\XX hex escape value */\n      var val = str.substr(cur + 1, 2);\n      if (val.match(hexRegex) === null) {\n        throw new Error('invalid escaped char');\n      }\n      out += String.fromCharCode(parseInt(val, 16));\n      cur += 3;\n      break;\n\n    default:\n      /* Add one regular char */\n      out += c;\n      cur++;\n      break;\n    }\n  }\n\n  return out;\n}\n\nfunction escapeSubstr(str)\n{\n  var fields = str.split('*');\n  var out = {};\n  assert.ok(fields.length > 1, 'wildcard missing');\n\n  out.initial = escapeValue(fields.shift());\n  out.final = escapeValue(fields.pop());\n  out.any = fields.map(escapeValue);\n  return out;\n}\n\nfunction parseExt(attr, str)\n{\n  var fields = str.split(':');\n  var res = {\n    attribute: attr\n  };\n  var out;\n\n  /* Having already parsed the attr, the first entry should be empty */\n  assert.ok(fields.length > 1, 'invalid ext filter');\n  fields.shift();\n\n  if (fields[0].toLowerCase() === 'dn') {\n    res.dnAttributes = true;\n    fields.shift();\n  }\n  if (fields.length !== 0 && fields[0][0] !== '=') {\n    res.rule = fields.shift();\n  }\n  if (fields.length === 0 || fields[0][0] !== '=') {\n    /* With matchType, dnAttribute, and rule consumed, the := must be next */\n    throw new Error('missing := in ext filter');\n  }\n\n  /*\n   * Trim the leading = (from the :=)  and reinsert any extra ':' charachters\n   * which may have been present in the value field.\n   */\n  str = fields.join(':').substr(1);\n  res.value = escapeValue(str);\n  out = new ExtensibleFilter(res);\n\n  /*\n   * Some extensible filters (such as caseIgnoreSubstringsMatch) operate with\n   * values formatted with the substring syntax.  In order to prevent ambiguity\n   * between '*' characters which are not escaped and any which are, we attempt\n   * substring-style parsing on any value which contains the former.\n   */\n  if (str.indexOf('*') !== -1) {\n    var subres = escapeSubstr(str);\n    out.initial = subres.initial;\n    out.any = subres.any;\n    out.final = subres.final;\n  }\n\n  return out;\n}\n\nfunction parseExpr(str)\n{\n  var attr, match, remain;\n\n  if (str[0] === ':') {\n    /*\n     * An extensible filter can have no attribute name.\n     * (Only valid when using dn and * matching-rule evaluation)\n     */\n    attr = '';\n    remain = str;\n  } else if ((match = str.match(attrRegex)) !== null) {\n    attr = match[0];\n    remain = str.substr(attr.length);\n  } else {\n    throw new Error('invalid attribute name');\n  }\n\n  if (remain === '=*') {\n    return new PresenceFilter({\n      attribute: attr\n    });\n  } else if (remain[0] === '=') {\n    remain = remain.substr(1);\n    if (remain.indexOf('*') !== -1) {\n      var val = escapeSubstr(remain);\n      return new SubstringFilter({\n        attribute: attr,\n        initial: val.initial,\n        any: val.any,\n        final: val.final\n      });\n    } else {\n      return new EqualityFilter({\n        attribute: attr,\n        value: escapeValue(remain)\n      });\n    }\n  } else if (remain[0] === '>' && remain[1] === '=') {\n    return new GreaterThanEqualsFilter({\n      attribute: attr,\n      value: escapeValue(remain.substr(2))\n    });\n  } else if (remain[0] === '<' && remain[1] === '=') {\n    return new LessThanEqualsFilter({\n      attribute: attr,\n      value: escapeValue(remain.substr(2))\n    });\n  } else if (remain[0] === '~' && remain[1] === '=') {\n    return new ApproximateFilter({\n      attribute: attr,\n      value: escapeValue(remain.substr(2))\n    });\n  } else if (remain[0] === ':') {\n    return parseExt(attr, remain);\n  }\n  throw new Error('invalid expression');\n}\n\nfunction parseFilter(str, start)\n{\n  var cur = start;\n  var len = str.length;\n  var res, end, output, children = [];\n\n  if (str[cur++] !== '(') {\n      throw new Error('missing paren');\n  }\n\n  if (str[cur] === '&') {\n    cur++;\n    do {\n      res = parseFilter(str, cur);\n      children.push(res.filter);\n      cur = res.end + 1;\n    } while (cur < len && str[cur] !== ')');\n\n    output = new AndFilter({filters: children});\n  } else if (str[cur] === '|') {\n    cur++;\n    do {\n      res = parseFilter(str, cur);\n      children.push(res.filter);\n      cur = res.end + 1;\n    } while (cur < len && str[cur] !== ')');\n\n    output = new OrFilter({filters: children});\n  } else if (str[cur] === '!') {\n    res = parseFilter(str, cur + 1);\n    output = new NotFilter({filter: res.filter});\n    cur = res.end + 1;\n    assert.equal(str[cur], ')', 'unbalanced parens');\n  } else {\n    end = str.indexOf(')', cur);\n    assert.notEqual(end, -1, 'unbalanced parens');\n\n    output = parseExpr(str.substr(cur, end - cur));\n    cur = end;\n  }\n  if (cur >= len) {\n    throw new Error('unbalanced parens');\n  }\n  return {\n    end: cur,\n    filter: output\n  };\n}\n\n\n///--- Exports\n\nmodule.exports = {\n  parse: function (str) {\n    assert.string(str, 'input must be string');\n    assert.ok(str.length > 0, 'input string cannot be empty');\n\n    /* Wrap the input in parens if it was not already */\n    if (str.charAt(0) !== '(') {\n      str = '(' + str + ')';\n    }\n    var parsed = parseFilter(str, 0);\n\n    var lastIdx = str.length - 1;\n    if (parsed.end < lastIdx) {\n      throw new Error('unbalanced parens');\n    }\n\n    return parsed.filter;\n  },\n\n  // Helper utilties for writing custom matchers\n  testValues: helpers.testValues,\n  getAttrValue: helpers.getAttrValue,\n\n  // Filter definitions\n  AndFilter: AndFilter,\n  ApproximateFilter: ApproximateFilter,\n  EqualityFilter: EqualityFilter,\n  ExtensibleFilter: ExtensibleFilter,\n  GreaterThanEqualsFilter: GreaterThanEqualsFilter,\n  LessThanEqualsFilter: LessThanEqualsFilter,\n  NotFilter: NotFilter,\n  OrFilter: OrFilter,\n  PresenceFilter: PresenceFilter,\n  SubstringFilter: SubstringFilter\n};\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\n// var assert = require('assert')\n\nconst Protocol = require('../protocol')\n\n/// --- Globals\n\nconst TYPES = {\n  and: Protocol.FILTER_AND,\n  or: Protocol.FILTER_OR,\n  not: Protocol.FILTER_NOT,\n  equal: Protocol.FILTER_EQUALITY,\n  substring: Protocol.FILTER_SUBSTRINGS,\n  ge: Protocol.FILTER_GE,\n  le: Protocol.FILTER_LE,\n  present: Protocol.FILTER_PRESENT,\n  approx: Protocol.FILTER_APPROX,\n  ext: Protocol.FILTER_EXT\n}\n\n/// --- API\n\nfunction isFilter (filter) {\n  if (!filter || typeof (filter) !== 'object') {\n    return false\n  }\n  // Do our best to duck-type it\n  if (typeof (filter.toBer) === 'function' &&\n      typeof (filter.matches) === 'function' &&\n      TYPES[filter.type] !== undefined) {\n    return true\n  }\n  return false\n}\n\nfunction isBerWriter (ber) {\n  return Boolean(\n    ber &&\n    typeof (ber) === 'object' &&\n    typeof (ber.startSequence) === 'function' &&\n    typeof (ber.endSequence) === 'function'\n  )\n}\n\nfunction mixin (target) {\n  target.prototype.toBer = function toBer (ber) {\n    if (isBerWriter(ber) === false) { throw new TypeError('ber (BerWriter) required') }\n\n    ber.startSequence(TYPES[this.type])\n    ber = this._toBer(ber)\n    ber.endSequence()\n    return ber\n  }\n}\n\nmodule.exports = {\n  isFilter: isFilter,\n  mixin: mixin\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction AndFilter (options) {\n  parents.AndFilter.call(this, options)\n}\nutil.inherits(AndFilter, parents.AndFilter)\nFilter.mixin(AndFilter)\nmodule.exports = AndFilter\n\nAndFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  this.filters.forEach(function (f) {\n    ber = f.toBer(ber)\n  })\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction ApproximateFilter (options) {\n  parents.ApproximateFilter.call(this, options)\n}\nutil.inherits(ApproximateFilter, parents.ApproximateFilter)\nFilter.mixin(ApproximateFilter)\nmodule.exports = ApproximateFilter\n\nApproximateFilter.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.attribute = ber.readString().toLowerCase()\n  this.value = ber.readString()\n\n  return true\n}\n\nApproximateFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.attribute)\n  ber.writeString(this.value)\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst ASN1 = require('asn1').Ber\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction EqualityFilter (options) {\n  parents.EqualityFilter.call(this, options)\n}\nutil.inherits(EqualityFilter, parents.EqualityFilter)\nFilter.mixin(EqualityFilter)\nmodule.exports = EqualityFilter\n\nEqualityFilter.prototype.matches = function (target, strictAttrCase) {\n  assert.object(target, 'target')\n\n  const tv = parents.getAttrValue(target, this.attribute, strictAttrCase)\n  let value = this.value\n\n  if (this.attribute.toLowerCase() === 'objectclass') {\n    /*\n     * Perform case-insensitive match for objectClass since nearly every LDAP\n     * implementation behaves in this manner.\n     */\n    value = value.toLowerCase()\n    return parents.testValues(function (v) {\n      return value === v.toLowerCase()\n    }, tv)\n  } else {\n    return parents.testValues(function (v) {\n      return value === v\n    }, tv)\n  }\n}\n\nEqualityFilter.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.attribute = ber.readString().toLowerCase()\n  this.value = ber.readString(ASN1.OctetString, true)\n\n  if (this.attribute === 'objectclass') { this.value = this.value.toLowerCase() }\n\n  return true\n}\n\nEqualityFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.attribute)\n  ber.writeBuffer(this.raw, ASN1.OctetString)\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n// THIS IS A STUB!\n//\n// ldapjs does not support server side extensible matching.\n// This class exists only for the client to send them.\n\n/// --- API\n\nfunction ExtensibleFilter (options) {\n  parents.ExtensibleFilter.call(this, options)\n}\nutil.inherits(ExtensibleFilter, parents.ExtensibleFilter)\nFilter.mixin(ExtensibleFilter)\nmodule.exports = ExtensibleFilter\n\nExtensibleFilter.prototype.parse = function (ber) {\n  const end = ber.offset + ber.length\n  while (ber.offset < end) {\n    const tag = ber.peek()\n    switch (tag) {\n      case 0x81:\n        this.rule = ber.readString(tag)\n        break\n      case 0x82:\n        this.matchType = ber.readString(tag)\n        break\n      case 0x83:\n        this.value = ber.readString(tag)\n        break\n      case 0x84:\n        this.dnAttributes = ber.readBoolean(tag)\n        break\n      default:\n        throw new Error('Invalid ext_match filter type: 0x' + tag.toString(16))\n    }\n  }\n\n  return true\n}\n\nExtensibleFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  if (this.rule) { ber.writeString(this.rule, 0x81) }\n  if (this.matchType) { ber.writeString(this.matchType, 0x82) }\n\n  ber.writeString(this.value, 0x83)\n  if (this.dnAttributes) { ber.writeBoolean(this.dnAttributes, 0x84) }\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction GreaterThanEqualsFilter (options) {\n  parents.GreaterThanEqualsFilter.call(this, options)\n}\nutil.inherits(GreaterThanEqualsFilter, parents.GreaterThanEqualsFilter)\nFilter.mixin(GreaterThanEqualsFilter)\nmodule.exports = GreaterThanEqualsFilter\n\nGreaterThanEqualsFilter.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.attribute = ber.readString().toLowerCase()\n  this.value = ber.readString()\n\n  return true\n}\n\nGreaterThanEqualsFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.attribute)\n  ber.writeString(this.value)\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction LessThanEqualsFilter (options) {\n  parents.LessThanEqualsFilter.call(this, options)\n}\nutil.inherits(LessThanEqualsFilter, parents.LessThanEqualsFilter)\nFilter.mixin(LessThanEqualsFilter)\nmodule.exports = LessThanEqualsFilter\n\nLessThanEqualsFilter.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.attribute = ber.readString().toLowerCase()\n  this.value = ber.readString()\n\n  return true\n}\n\nLessThanEqualsFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.attribute)\n  ber.writeString(this.value)\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction NotFilter (options) {\n  parents.NotFilter.call(this, options)\n}\nutil.inherits(NotFilter, parents.NotFilter)\nFilter.mixin(NotFilter)\nmodule.exports = NotFilter\n\nNotFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  return this.filter.toBer(ber)\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction OrFilter (options) {\n  parents.OrFilter.call(this, options)\n}\nutil.inherits(OrFilter, parents.OrFilter)\nFilter.mixin(OrFilter)\nmodule.exports = OrFilter\n\nOrFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  this.filters.forEach(function (f) {\n    ber = f.toBer(ber)\n  })\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction PresenceFilter (options) {\n  parents.PresenceFilter.call(this, options)\n}\nutil.inherits(PresenceFilter, parents.PresenceFilter)\nFilter.mixin(PresenceFilter)\nmodule.exports = PresenceFilter\n\nPresenceFilter.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.attribute =\n    ber.buffer.slice(0, ber.length).toString('utf8').toLowerCase()\n\n  ber._offset += ber.length\n\n  return true\n}\n\nPresenceFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  for (let i = 0; i < this.attribute.length; i++) { ber.writeByte(this.attribute.charCodeAt(i)) }\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst util = require('util')\n\nconst parents = require('ldap-filter')\n\nconst Filter = require('./filter')\n\n/// --- API\n\nfunction SubstringFilter (options) {\n  parents.SubstringFilter.call(this, options)\n}\nutil.inherits(SubstringFilter, parents.SubstringFilter)\nFilter.mixin(SubstringFilter)\nmodule.exports = SubstringFilter\n\nSubstringFilter.prototype.parse = function (ber) {\n  assert.ok(ber)\n\n  this.attribute = ber.readString().toLowerCase()\n  ber.readSequence()\n  const end = ber.offset + ber.length\n\n  while (ber.offset < end) {\n    const tag = ber.peek()\n    switch (tag) {\n      case 0x80: // Initial\n        this.initial = ber.readString(tag)\n        if (this.attribute === 'objectclass') { this.initial = this.initial.toLowerCase() }\n        break\n      case 0x81: { // Any\n        let anyVal = ber.readString(tag)\n        if (this.attribute === 'objectclass') { anyVal = anyVal.toLowerCase() }\n        this.any.push(anyVal)\n        break\n      }\n      case 0x82: // Final\n        this.final = ber.readString(tag)\n        if (this.attribute === 'objectclass') { this.final = this.final.toLowerCase() }\n        break\n      default:\n        throw new Error('Invalid substrings filter type: 0x' + tag.toString(16))\n    }\n  }\n\n  return true\n}\n\nSubstringFilter.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  ber.writeString(this.attribute)\n  ber.startSequence()\n\n  if (this.initial) { ber.writeString(this.initial, 0x80) }\n\n  if (this.any && this.any.length) {\n    this.any.forEach(function (s) {\n      ber.writeString(s, 0x81)\n    })\n  }\n\n  if (this.final) { ber.writeString(this.final, 0x82) }\n\n  ber.endSequence()\n\n  return ber\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\n\nconst asn1 = require('asn1')\n\nconst parents = require('ldap-filter')\n\nconst Protocol = require('../protocol')\n\nconst Filter = require('./filter')\nconst AndFilter = require('./and_filter')\nconst ApproximateFilter = require('./approx_filter')\nconst EqualityFilter = require('./equality_filter')\nconst ExtensibleFilter = require('./ext_filter')\nconst GreaterThanEqualsFilter = require('./ge_filter')\nconst LessThanEqualsFilter = require('./le_filter')\nconst NotFilter = require('./not_filter')\nconst OrFilter = require('./or_filter')\nconst PresenceFilter = require('./presence_filter')\nconst SubstringFilter = require('./substr_filter')\n\n/// --- Globals\n\nconst BerReader = asn1.BerReader\n\n/// --- Internal Parsers\n\n/*\n * A filter looks like this coming in:\n *      Filter ::= CHOICE {\n *              and             [0]     SET OF Filter,\n *              or              [1]     SET OF Filter,\n *              not             [2]     Filter,\n *              equalityMatch   [3]     AttributeValueAssertion,\n *              substrings      [4]     SubstringFilter,\n *              greaterOrEqual  [5]     AttributeValueAssertion,\n *              lessOrEqual     [6]     AttributeValueAssertion,\n *              present         [7]     AttributeType,\n *              approxMatch     [8]     AttributeValueAssertion,\n *              extensibleMatch [9]     MatchingRuleAssertion --v3 only\n *      }\n *\n *      SubstringFilter ::= SEQUENCE {\n *              type               AttributeType,\n *              SEQUENCE OF CHOICE {\n *                      initial          [0] IA5String,\n *                      any              [1] IA5String,\n *                      final            [2] IA5String\n *              }\n *      }\n *\n * The extensibleMatch was added in LDAPv3:\n *\n *      MatchingRuleAssertion ::= SEQUENCE {\n *              matchingRule    [1] MatchingRuleID OPTIONAL,\n *              type            [2] AttributeDescription OPTIONAL,\n *              matchValue      [3] AssertionValue,\n *              dnAttributes    [4] BOOLEAN DEFAULT FALSE\n *      }\n */\nfunction _parse (ber) {\n  assert.ok(ber)\n\n  function parseSet (f) {\n    const end = ber.offset + ber.length\n    while (ber.offset < end) { f.addFilter(_parse(ber)) }\n  }\n\n  let f\n\n  const type = ber.readSequence()\n  switch (type) {\n    case Protocol.FILTER_AND:\n      f = new AndFilter()\n      parseSet(f)\n      break\n\n    case Protocol.FILTER_APPROX:\n      f = new ApproximateFilter()\n      f.parse(ber)\n      break\n\n    case Protocol.FILTER_EQUALITY:\n      f = new EqualityFilter()\n      f.parse(ber)\n      return f\n\n    case Protocol.FILTER_EXT:\n      f = new ExtensibleFilter()\n      f.parse(ber)\n      return f\n\n    case Protocol.FILTER_GE:\n      f = new GreaterThanEqualsFilter()\n      f.parse(ber)\n      return f\n\n    case Protocol.FILTER_LE:\n      f = new LessThanEqualsFilter()\n      f.parse(ber)\n      return f\n\n    case Protocol.FILTER_NOT:\n      f = new NotFilter({\n        filter: _parse(ber)\n      })\n      break\n\n    case Protocol.FILTER_OR:\n      f = new OrFilter()\n      parseSet(f)\n      break\n\n    case Protocol.FILTER_PRESENT:\n      f = new PresenceFilter()\n      f.parse(ber)\n      break\n\n    case Protocol.FILTER_SUBSTRINGS:\n      f = new SubstringFilter()\n      f.parse(ber)\n      break\n\n    default:\n      throw new Error('Invalid search filter type: 0x' + type.toString(16))\n  }\n\n  assert.ok(f)\n  return f\n}\n\nfunction cloneFilter (input) {\n  let child\n  if (input.type === 'and' || input.type === 'or') {\n    child = input.filters.map(cloneFilter)\n  } else if (input.type === 'not') {\n    child = cloneFilter(input.filter)\n  }\n  switch (input.type) {\n    case 'and':\n      return new AndFilter({ filters: child })\n    case 'or':\n      return new OrFilter({ filters: child })\n    case 'not':\n      return new NotFilter({ filter: child })\n    case 'equal':\n      return new EqualityFilter(input)\n    case 'substring':\n      return new SubstringFilter(input)\n    case 'ge':\n      return new GreaterThanEqualsFilter(input)\n    case 'le':\n      return new LessThanEqualsFilter(input)\n    case 'present':\n      return new PresenceFilter(input)\n    case 'approx':\n      return new ApproximateFilter(input)\n    case 'ext':\n      return new ExtensibleFilter(input)\n    default:\n      throw new Error('invalid filter type:' + input.type)\n  }\n}\n\nfunction escapedToHex (str) {\n  return str.replace(/\\\\([0-9a-f](?![0-9a-f])|[^0-9a-f]|$)/gi, function (match, p1) {\n    if (!p1) {\n      return '\\\\5c'\n    }\n\n    const hexCode = p1.charCodeAt(0).toString(16)\n    return '\\\\' + hexCode\n  })\n}\n\nfunction parseString (str) {\n  const hexStr = escapedToHex(str)\n  const generic = parents.parse(hexStr)\n  // The filter object(s) return from ldap-filter.parse lack the toBer/parse\n  // decoration that native ldapjs filter possess.  cloneFilter adds that back.\n  return cloneFilter(generic)\n}\n\n/// --- API\n\nmodule.exports = {\n  parse: function (ber) {\n    if (!ber || !(ber instanceof BerReader)) { throw new TypeError('ber (BerReader) required') }\n\n    return _parse(ber)\n  },\n\n  parseString: parseString,\n\n  isFilter: Filter.isFilter,\n\n  AndFilter: AndFilter,\n  ApproximateFilter: ApproximateFilter,\n  EqualityFilter: EqualityFilter,\n  ExtensibleFilter: ExtensibleFilter,\n  GreaterThanEqualsFilter: GreaterThanEqualsFilter,\n  LessThanEqualsFilter: LessThanEqualsFilter,\n  NotFilter: NotFilter,\n  OrFilter: OrFilter,\n  PresenceFilter: PresenceFilter,\n  SubstringFilter: SubstringFilter\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst asn1 = require('asn1')\n\nconst LDAPMessage = require('./message')\n// var LDAPResult = require('./result')\nconst dn = require('../dn')\nconst filters = require('../filters')\nconst Protocol = require('../protocol')\n\n/// --- Globals\n\nconst Ber = asn1.Ber\n\n/// --- API\n\nfunction SearchRequest (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REQ_SEARCH\n  LDAPMessage.call(this, options)\n\n  if (options.baseObject !== undefined) {\n    this.baseObject = options.baseObject\n  } else {\n    this.baseObject = dn.parse('')\n  }\n  this.scope = options.scope || 'base'\n  this.derefAliases = options.derefAliases || Protocol.NEVER_DEREF_ALIASES\n  this.sizeLimit = options.sizeLimit || 0\n  this.timeLimit = options.timeLimit || 0\n  this.typesOnly = options.typesOnly || false\n  this.filter = options.filter || null\n  this.attributes = options.attributes ? options.attributes.slice(0) : []\n}\nutil.inherits(SearchRequest, LDAPMessage)\nObject.defineProperties(SearchRequest.prototype, {\n  type: {\n    get: function getType () { return 'SearchRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.baseObject },\n    configurable: false\n  },\n  scope: {\n    get: function getScope () {\n      switch (this._scope) {\n        case Protocol.SCOPE_BASE_OBJECT: return 'base'\n        case Protocol.SCOPE_ONE_LEVEL: return 'one'\n        case Protocol.SCOPE_SUBTREE: return 'sub'\n        default:\n          throw new Error(this._scope + ' is an invalid search scope')\n      }\n    },\n    set: function setScope (val) {\n      if (typeof (val) === 'string') {\n        switch (val) {\n          case 'base':\n            this._scope = Protocol.SCOPE_BASE_OBJECT\n            break\n          case 'one':\n            this._scope = Protocol.SCOPE_ONE_LEVEL\n            break\n          case 'sub':\n            this._scope = Protocol.SCOPE_SUBTREE\n            break\n          default:\n            throw new Error(val + ' is an invalid search scope')\n        }\n      } else {\n        this._scope = val\n      }\n    },\n    configurable: false\n  }\n})\n\nSearchRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.baseObject = ber.readString()\n  this.scope = ber.readEnumeration()\n  this.derefAliases = ber.readEnumeration()\n  this.sizeLimit = ber.readInt()\n  this.timeLimit = ber.readInt()\n  this.typesOnly = ber.readBoolean()\n\n  this.filter = filters.parse(ber)\n\n  // look for attributes\n  if (ber.peek() === 0x30) {\n    ber.readSequence()\n    const end = ber.offset + ber.length\n    while (ber.offset < end) { this.attributes.push(ber.readString().toLowerCase()) }\n  }\n\n  return true\n}\n\nSearchRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  // Format only with commas, since that is what RFC 4514 mandates.\n  // There's a gotcha here: even though it's called baseObject,\n  //  it can be a string or a DN object.\n  const formattedDN = dn.DN.isDN(this.baseObject)\n    ? this.baseObject.format({ skipSpace: true })\n    : this.baseObject.toString()\n  ber.writeString(formattedDN)\n  ber.writeEnumeration(this._scope)\n  ber.writeEnumeration(this.derefAliases)\n  ber.writeInt(this.sizeLimit)\n  ber.writeInt(this.timeLimit)\n  ber.writeBoolean(this.typesOnly)\n\n  const f = this.filter || new filters.PresenceFilter({ attribute: 'objectclass' })\n  ber = f.toBer(ber)\n\n  ber.startSequence(Ber.Sequence | Ber.Constructor)\n  if (this.attributes && this.attributes.length) {\n    this.attributes.forEach(function (a) {\n      ber.writeString(a)\n    })\n  }\n  ber.endSequence()\n\n  return ber\n}\n\nSearchRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.baseObject = this.baseObject\n  j.scope = this.scope\n  j.derefAliases = this.derefAliases\n  j.sizeLimit = this.sizeLimit\n  j.timeLimit = this.timeLimit\n  j.typesOnly = this.typesOnly\n  j.filter = this.filter.toString()\n  j.attributes = this.attributes\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = SearchRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\n// var asn1 = require('asn1')\n\nconst LDAPMessage = require('./message')\nconst Attribute = require('../attribute')\nconst Protocol = require('../protocol')\nconst lassert = require('../assert')\n\n/// --- Globals\n\n// var BerWriter = asn1.BerWriter\n\n/// --- API\n\nfunction SearchEntry (options) {\n  options = options || {}\n  assert.object(options)\n  lassert.optionalStringDN(options.objectName)\n\n  options.protocolOp = Protocol.LDAP_REP_SEARCH_ENTRY\n  LDAPMessage.call(this, options)\n\n  this.objectName = options.objectName || null\n  this.setAttributes(options.attributes || [])\n}\nutil.inherits(SearchEntry, LDAPMessage)\nObject.defineProperties(SearchEntry.prototype, {\n  type: {\n    get: function getType () { return 'SearchEntry' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return this.objectName },\n    configurable: false\n  },\n  object: {\n    get: function getObject () {\n      const obj = {\n        dn: this.dn.toString(),\n        controls: []\n      }\n      this.attributes.forEach(function (a) {\n        if (a.vals && a.vals.length) {\n          if (a.vals.length > 1) {\n            obj[a.type] = a.vals.slice()\n          } else {\n            obj[a.type] = a.vals[0]\n          }\n        } else {\n          obj[a.type] = []\n        }\n      })\n      this.controls.forEach(function (element) {\n        obj.controls.push(element.json)\n      })\n      return obj\n    },\n    configurable: false\n  },\n  raw: {\n    get: function getRaw () {\n      const obj = {\n        dn: this.dn.toString(),\n        controls: []\n      }\n\n      this.attributes.forEach(function (a) {\n        if (a.buffers && a.buffers.length) {\n          if (a.buffers.length > 1) {\n            obj[a.type] = a.buffers.slice()\n          } else {\n            obj[a.type] = a.buffers[0]\n          }\n        } else {\n          obj[a.type] = []\n        }\n      })\n      this.controls.forEach(function (element) {\n        obj.controls.push(element.json)\n      })\n      return obj\n    },\n    configurable: false\n  }\n})\n\nSearchEntry.prototype.addAttribute = function (attr) {\n  if (!attr || typeof (attr) !== 'object') { throw new TypeError('attr (attribute) required') }\n\n  this.attributes.push(attr)\n}\n\nSearchEntry.prototype.toObject = function () {\n  return this.object\n}\n\nSearchEntry.prototype.fromObject = function (obj) {\n  if (typeof (obj) !== 'object') { throw new TypeError('object required') }\n\n  const self = this\n  if (obj.controls) { this.controls = obj.controls }\n\n  if (obj.attributes) { obj = obj.attributes }\n  this.attributes = []\n\n  Object.keys(obj).forEach(function (k) {\n    self.attributes.push(new Attribute({ type: k, vals: obj[k] }))\n  })\n\n  return true\n}\n\nSearchEntry.prototype.setAttributes = function (obj) {\n  if (typeof (obj) !== 'object') { throw new TypeError('object required') }\n\n  if (Array.isArray(obj)) {\n    obj.forEach(function (a) {\n      if (!Attribute.isAttribute(a)) { throw new TypeError('entry must be an Array of Attributes') }\n    })\n    this.attributes = obj\n  } else {\n    const self = this\n\n    self.attributes = []\n    Object.keys(obj).forEach(function (k) {\n      const attr = new Attribute({ type: k })\n      if (Array.isArray(obj[k])) {\n        obj[k].forEach(function (v) {\n          attr.addValue(v.toString())\n        })\n      } else {\n        attr.addValue(obj[k].toString())\n      }\n      self.attributes.push(attr)\n    })\n  }\n}\n\nSearchEntry.prototype._json = function (j) {\n  assert.ok(j)\n\n  j.objectName = this.objectName.toString()\n  j.attributes = []\n  this.attributes.forEach(function (a) {\n    j.attributes.push(a.json || a)\n  })\n\n  return j\n}\n\nSearchEntry.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  this.objectName = ber.readString()\n  assert.ok(ber.readSequence())\n\n  const end = ber.offset + ber.length\n  while (ber.offset < end) {\n    const a = new Attribute()\n    a.parse(ber)\n    this.attributes.push(a)\n  }\n\n  return true\n}\n\nSearchEntry.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  const formattedObjectName = this.objectName.format({ skipSpace: true })\n  ber.writeString(formattedObjectName)\n  ber.startSequence()\n  this.attributes.forEach(function (a) {\n    // This may or may not be an attribute\n    ber = Attribute.toBer(a, ber)\n  })\n  ber.endSequence()\n\n  return ber\n}\n\n/// --- Exports\n\nmodule.exports = SearchEntry\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"querystring\" has been externalized for browser compatibility. Cannot access \"querystring.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict'\n\nconst querystring = require('querystring')\nconst url = require('url')\nconst dn = require('./dn')\nconst filter = require('./filters/')\n\nmodule.exports = {\n\n  parse: function (urlStr, parseDN) {\n    let parsedURL\n    try {\n      parsedURL = new url.URL(urlStr)\n    } catch (error) {\n      throw new TypeError(urlStr + ' is an invalid LDAP url (scope)')\n    }\n\n    if (!parsedURL.protocol || !(parsedURL.protocol === 'ldap:' || parsedURL.protocol === 'ldaps:')) { throw new TypeError(urlStr + ' is an invalid LDAP url (protocol)') }\n\n    const u = {\n      protocol: parsedURL.protocol,\n      hostname: parsedURL.hostname,\n      port: parsedURL.port,\n      pathname: parsedURL.pathname,\n      search: parsedURL.search,\n      href: parsedURL.href\n    }\n\n    u.secure = (u.protocol === 'ldaps:')\n\n    if (!u.hostname) { u.hostname = 'localhost' }\n\n    if (!u.port) {\n      u.port = (u.secure ? 636 : 389)\n    } else {\n      u.port = parseInt(u.port, 10)\n    }\n\n    if (u.pathname) {\n      u.pathname = querystring.unescape(u.pathname.substr(1))\n      u.DN = parseDN ? dn.parse(u.pathname) : u.pathname\n    }\n\n    if (u.search) {\n      u.attributes = []\n      const tmp = u.search.substr(1).split('?')\n      if (tmp && tmp.length) {\n        if (tmp[0]) {\n          tmp[0].split(',').forEach(function (a) {\n            u.attributes.push(querystring.unescape(a.trim()))\n          })\n        }\n      }\n      if (tmp[1]) {\n        if (tmp[1] !== 'base' && tmp[1] !== 'one' && tmp[1] !== 'sub') { throw new TypeError(urlStr + ' is an invalid LDAP url (scope)') }\n        u.scope = tmp[1]\n      }\n      if (tmp[2]) {\n        u.filter = querystring.unescape(tmp[2])\n      }\n      if (tmp[3]) {\n        u.extensions = querystring.unescape(tmp[3])\n      }\n\n      if (!u.scope) { u.scope = 'base' }\n      if (!u.filter) { u.filter = filter.parseString('(objectclass=*)') } else { u.filter = filter.parseString(u.filter) }\n    }\n\n    return u\n  }\n\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\n// var asn1 = require('asn1')\n\nconst LDAPMessage = require('./message')\nconst Protocol = require('../protocol')\nconst dn = require('../dn')\nconst url = require('../url')\n\n/// --- Globals\n\n// var BerWriter = asn1.BerWriter\nconst parseURL = url.parse\n\n/// --- API\n\nfunction SearchReference (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_SEARCH_REF\n  LDAPMessage.call(this, options)\n\n  this.uris = options.uris || []\n}\nutil.inherits(SearchReference, LDAPMessage)\nObject.defineProperties(SearchReference.prototype, {\n  type: {\n    get: function getType () { return 'SearchReference' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () { return new dn.DN('') },\n    configurable: false\n  },\n  object: {\n    get: function getObject () {\n      return {\n        dn: this.dn.toString(),\n        uris: this.uris.slice()\n      }\n    },\n    configurable: false\n  },\n  urls: {\n    get: function getUrls () { return this.uris },\n    set: function setUrls (val) {\n      assert.ok(val)\n      assert.ok(Array.isArray(val))\n      this.uris = val.slice()\n    },\n    configurable: false\n  }\n})\n\nSearchReference.prototype.toObject = function () {\n  return this.object\n}\n\nSearchReference.prototype.fromObject = function (obj) {\n  if (typeof (obj) !== 'object') { throw new TypeError('object required') }\n\n  this.uris = obj.uris ? obj.uris.slice() : []\n\n  return true\n}\n\nSearchReference.prototype._json = function (j) {\n  assert.ok(j)\n  j.uris = this.uris.slice()\n  return j\n}\n\nSearchReference.prototype._parse = function (ber, length) {\n  assert.ok(ber)\n\n  while (ber.offset < length) {\n    const _url = ber.readString()\n    parseURL(_url)\n    this.uris.push(_url)\n  }\n\n  return true\n}\n\nSearchReference.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  this.uris.forEach(function (u) {\n    ber.writeString(u.href || u)\n  })\n\n  return ber\n}\n\n/// --- Exports\n\nmodule.exports = SearchReference\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPResult = require('./result')\nconst SearchEntry = require('./search_entry')\nconst SearchReference = require('./search_reference')\n\nconst dtrace = require('../dtrace')\nconst parseDN = require('../dn').parse\nconst parseURL = require('../url').parse\nconst Protocol = require('../protocol')\n\n/// --- API\n\nfunction SearchResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REP_SEARCH\n  LDAPResult.call(this, options)\n\n  this.attributes = options.attributes ? options.attributes.slice() : []\n  this.notAttributes = []\n  this.sentEntries = 0\n}\nutil.inherits(SearchResponse, LDAPResult)\n\n/**\n * Allows you to send a SearchEntry back to the client.\n *\n * @param {Object} entry an instance of SearchEntry.\n * @param {Boolean} nofiltering skip filtering notAttributes and '_' attributes.\n *                  Defaults to 'false'.\n */\nSearchResponse.prototype.send = function (entry, nofiltering) {\n  if (!entry || typeof (entry) !== 'object') { throw new TypeError('entry (SearchEntry) required') }\n  if (nofiltering === undefined) { nofiltering = false }\n  if (typeof (nofiltering) !== 'boolean') { throw new TypeError('noFiltering must be a boolean') }\n\n  const self = this\n\n  const savedAttrs = {}\n  let save = null\n  if (entry instanceof SearchEntry || entry instanceof SearchReference) {\n    if (!entry.messageID) { entry.messageID = this.messageID }\n    if (entry.messageID !== this.messageID) { throw new Error('SearchEntry messageID mismatch') }\n  } else {\n    if (!entry.attributes) { throw new Error('entry.attributes required') }\n\n    const all = (self.attributes.indexOf('*') !== -1)\n    Object.keys(entry.attributes).forEach(function (a) {\n      const _a = a.toLowerCase()\n      if (!nofiltering && _a.length && _a[0] === '_') {\n        savedAttrs[a] = entry.attributes[a]\n        delete entry.attributes[a]\n      } else if (!nofiltering && self.notAttributes.indexOf(_a) !== -1) {\n        savedAttrs[a] = entry.attributes[a]\n        delete entry.attributes[a]\n      } else if (all) {\n        // do nothing\n      } else if (self.attributes.length && self.attributes.indexOf(_a) === -1) {\n        savedAttrs[a] = entry.attributes[a]\n        delete entry.attributes[a]\n      }\n    })\n\n    save = entry\n    entry = new SearchEntry({\n      objectName: typeof (save.dn) === 'string' ? parseDN(save.dn) : save.dn,\n      messageID: self.messageID,\n      log: self.log\n    })\n    entry.fromObject(save)\n  }\n\n  try {\n    this.log.debug('%s: sending:  %j', this.connection.ldap.id, entry.json)\n\n    this.connection.write(entry.toBer())\n    this.sentEntries++\n\n    if (self._dtraceOp && self._dtraceId) {\n      dtrace.fire('server-search-entry', function () {\n        const c = self.connection || { ldap: {} }\n        return [\n          self._dtraceId || 0,\n          (c.remoteAddress || ''),\n          c.ldap.bindDN ? c.ldap.bindDN.toString() : '',\n          (self.requestDN ? self.requestDN.toString() : ''),\n          entry.objectName.toString(),\n          entry.attributes.length\n        ]\n      })\n    }\n\n    // Restore attributes\n    Object.keys(savedAttrs).forEach(function (k) {\n      save.attributes[k] = savedAttrs[k]\n    })\n  } catch (e) {\n    this.log.warn(e, '%s failure to write message %j',\n      this.connection.ldap.id, this.json)\n  }\n}\n\nSearchResponse.prototype.createSearchEntry = function (object) {\n  assert.object(object)\n\n  const entry = new SearchEntry({\n    messageID: this.messageID,\n    log: this.log,\n    objectName: object.objectName || object.dn\n  })\n  entry.fromObject((object.attributes || object))\n  return entry\n}\n\nSearchResponse.prototype.createSearchReference = function (uris) {\n  if (!uris) { throw new TypeError('uris ([string]) required') }\n\n  if (!Array.isArray(uris)) { uris = [uris] }\n\n  for (let i = 0; i < uris.length; i++) {\n    if (typeof (uris[i]) === 'string') { uris[i] = parseURL(uris[i]) }\n  }\n\n  const self = this\n  return new SearchReference({\n    messageID: self.messageID,\n    log: self.log,\n    uris: uris\n  })\n}\n\n/// --- Exports\n\nmodule.exports = SearchResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./message')\nconst dn = require('../dn')\nconst Protocol = require('../protocol')\n\n/// --- Globals\n\nconst DN = dn.DN\nconst RDN = dn.RDN\n\n/// --- API\n\nfunction UnbindRequest (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = Protocol.LDAP_REQ_UNBIND\n  LDAPMessage.call(this, options)\n}\nutil.inherits(UnbindRequest, LDAPMessage)\nObject.defineProperties(UnbindRequest.prototype, {\n  type: {\n    get: function getType () { return 'UnbindRequest' },\n    configurable: false\n  },\n  _dn: {\n    get: function getDN () {\n      if (this.connection) {\n        return this.connection.ldap.bindDN\n      } else {\n        return new DN([new RDN({ cn: 'anonymous' })])\n      }\n    },\n    configurable: false\n  }\n})\n\nUnbindRequest.prototype._parse = function (ber) {\n  assert.ok(ber)\n\n  return true\n}\n\nUnbindRequest.prototype._toBer = function (ber) {\n  assert.ok(ber)\n\n  return ber\n}\n\nUnbindRequest.prototype._json = function (j) {\n  assert.ok(j)\n\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = UnbindRequest\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst EventEmitter = require('events').EventEmitter\nconst util = require('util')\n\nconst assert = require('assert-plus')\nconst asn1 = require('asn1')\n// var VError = require('verror').VError\nconst logger = require('../logger')\n\nconst AbandonRequest = require('./abandon_request')\nconst AddRequest = require('./add_request')\nconst AddResponse = require('./add_response')\nconst BindRequest = require('./bind_request')\nconst BindResponse = require('./bind_response')\nconst CompareRequest = require('./compare_request')\nconst CompareResponse = require('./compare_response')\nconst DeleteRequest = require('./del_request')\nconst DeleteResponse = require('./del_response')\nconst ExtendedRequest = require('./ext_request')\nconst ExtendedResponse = require('./ext_response')\nconst ModifyRequest = require('./modify_request')\nconst ModifyResponse = require('./modify_response')\nconst ModifyDNRequest = require('./moddn_request')\nconst ModifyDNResponse = require('./moddn_response')\nconst SearchRequest = require('./search_request')\nconst SearchEntry = require('./search_entry')\nconst SearchReference = require('./search_reference')\nconst SearchResponse = require('./search_response')\nconst UnbindRequest = require('./unbind_request')\n// var UnbindResponse = require('./unbind_response')\n\nconst LDAPResult = require('./result')\n// var Message = require('./message')\n\nconst Protocol = require('../protocol')\n\n/// --- Globals\n\n// var Ber = asn1.Ber\nconst BerReader = asn1.BerReader\n\n/// --- API\n\nfunction Parser (options = {}) {\n  assert.object(options)\n\n  EventEmitter.call(this)\n\n  this.buffer = null\n  this.log = options.log || logger\n}\nutil.inherits(Parser, EventEmitter)\n\nParser.prototype.write = function (data) {\n  if (!data || !Buffer.isBuffer(data)) { throw new TypeError('data (buffer) required') }\n\n  let nextMessage = null\n  const self = this\n\n  function end () {\n    if (nextMessage) { return self.write(nextMessage) }\n\n    return true\n  }\n\n  self.buffer = (self.buffer ? Buffer.concat([self.buffer, data]) : data)\n\n  const ber = new BerReader(self.buffer)\n\n  let foundSeq = false\n  try {\n    foundSeq = ber.readSequence()\n  } catch (e) {\n    this.emit('error', e)\n  }\n\n  if (!foundSeq || ber.remain < ber.length) {\n    // ENOTENOUGH\n    return false\n  } else if (ber.remain > ber.length) {\n    // ETOOMUCH\n    // This is sort of ugly, but allows us to make miminal copies\n    nextMessage = self.buffer.slice(ber.offset + ber.length)\n    ber._size = ber.offset + ber.length\n    assert.equal(ber.remain, ber.length)\n  }\n\n  // If we're here, ber holds the message, and nextMessage is temporarily\n  // pointing at the next sequence of data (if it exists)\n  self.buffer = null\n\n  let message\n  try {\n    // Bail here if peer isn't speaking protocol at all\n    message = this.getMessage(ber)\n\n    if (!message) {\n      return end()\n    }\n    message.parse(ber)\n  } catch (e) {\n    this.emit('error', e, message)\n    return false\n  }\n\n  this.emit('message', message)\n  return end()\n}\n\nParser.prototype.getMessage = function (ber) {\n  assert.ok(ber)\n\n  const self = this\n\n  const messageID = ber.readInt()\n  const type = ber.readSequence()\n\n  let Message\n  switch (type) {\n    case Protocol.LDAP_REQ_ABANDON:\n      Message = AbandonRequest\n      break\n\n    case Protocol.LDAP_REQ_ADD:\n      Message = AddRequest\n      break\n\n    case Protocol.LDAP_REP_ADD:\n      Message = AddResponse\n      break\n\n    case Protocol.LDAP_REQ_BIND:\n      Message = BindRequest\n      break\n\n    case Protocol.LDAP_REP_BIND:\n      Message = BindResponse\n      break\n\n    case Protocol.LDAP_REQ_COMPARE:\n      Message = CompareRequest\n      break\n\n    case Protocol.LDAP_REP_COMPARE:\n      Message = CompareResponse\n      break\n\n    case Protocol.LDAP_REQ_DELETE:\n      Message = DeleteRequest\n      break\n\n    case Protocol.LDAP_REP_DELETE:\n      Message = DeleteResponse\n      break\n\n    case Protocol.LDAP_REQ_EXTENSION:\n      Message = ExtendedRequest\n      break\n\n    case Protocol.LDAP_REP_EXTENSION:\n      Message = ExtendedResponse\n      break\n\n    case Protocol.LDAP_REQ_MODIFY:\n      Message = ModifyRequest\n      break\n\n    case Protocol.LDAP_REP_MODIFY:\n      Message = ModifyResponse\n      break\n\n    case Protocol.LDAP_REQ_MODRDN:\n      Message = ModifyDNRequest\n      break\n\n    case Protocol.LDAP_REP_MODRDN:\n      Message = ModifyDNResponse\n      break\n\n    case Protocol.LDAP_REQ_SEARCH:\n      Message = SearchRequest\n      break\n\n    case Protocol.LDAP_REP_SEARCH_ENTRY:\n      Message = SearchEntry\n      break\n\n    case Protocol.LDAP_REP_SEARCH_REF:\n      Message = SearchReference\n      break\n\n    case Protocol.LDAP_REP_SEARCH:\n      Message = SearchResponse\n      break\n\n    case Protocol.LDAP_REQ_UNBIND:\n      Message = UnbindRequest\n      break\n\n    default:\n      this.emit('error',\n        new Error('Op 0x' + (type ? type.toString(16) : '??') +\n                        ' not supported'),\n        new LDAPResult({\n          messageID: messageID,\n          protocolOp: type || Protocol.LDAP_REP_EXTENSION\n        }))\n\n      return false\n  }\n\n  return new Message({\n    messageID: messageID,\n    log: self.log\n  })\n}\n\n/// --- Exports\n\nmodule.exports = Parser\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst LDAPMessage = require('./result')\n// var Protocol = require('../protocol')\n\n/// --- API\n\nfunction AbandonResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = 0\n  LDAPMessage.call(this, options)\n}\nutil.inherits(AbandonResponse, LDAPMessage)\nObject.defineProperties(AbandonResponse.prototype, {\n  type: {\n    get: function getType () { return 'AbandonResponse' },\n    configurable: false\n  }\n})\n\nAbandonResponse.prototype.end = function (_status) {}\n\nAbandonResponse.prototype._json = function (j) {\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = AbandonResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert-plus')\nconst util = require('util')\n\nconst dtrace = require('../dtrace')\n\nconst LDAPMessage = require('./result')\n// var Protocol = require('../protocol')\n\n/// --- API\n// Ok, so there's really no such thing as an unbind 'response', but to make\n// the framework not suck, I just made this up, and have it stubbed so it's\n// not such a one-off.\n\nfunction UnbindResponse (options) {\n  options = options || {}\n  assert.object(options)\n\n  options.protocolOp = 0\n  LDAPMessage.call(this, options)\n}\nutil.inherits(UnbindResponse, LDAPMessage)\nObject.defineProperties(UnbindResponse.prototype, {\n  type: {\n    get: function getType () { return 'UnbindResponse' },\n    configurable: false\n  }\n})\n\n/**\n * Special override that just ends the connection, if present.\n *\n * @param {Number} _status completely ignored.\n */\nUnbindResponse.prototype.end = function (_status) {\n  assert.ok(this.connection)\n\n  this.log.trace('%s: unbinding!', this.connection.ldap.id)\n\n  this.connection.end()\n\n  const self = this\n  if (self._dtraceOp && self._dtraceId) {\n    dtrace.fire('server-' + self._dtraceOp + '-done', function () {\n      const c = self.connection || { ldap: {} }\n      return [\n        self._dtraceId || 0,\n        (c.remoteAddress || ''),\n        c.ldap.bindDN ? c.ldap.bindDN.toString() : '',\n        (self.requestDN ? self.requestDN.toString() : ''),\n        0,\n        ''\n      ]\n    })\n  }\n}\n\nUnbindResponse.prototype._json = function (j) {\n  return j\n}\n\n/// --- Exports\n\nmodule.exports = UnbindResponse\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst LDAPMessage = require('./message')\nconst LDAPResult = require('./result')\nconst Parser = require('./parser')\n\nconst AbandonRequest = require('./abandon_request')\nconst AbandonResponse = require('./abandon_response')\nconst AddRequest = require('./add_request')\nconst AddResponse = require('./add_response')\nconst BindRequest = require('./bind_request')\nconst BindResponse = require('./bind_response')\nconst CompareRequest = require('./compare_request')\nconst CompareResponse = require('./compare_response')\nconst DeleteRequest = require('./del_request')\nconst DeleteResponse = require('./del_response')\nconst ExtendedRequest = require('./ext_request')\nconst ExtendedResponse = require('./ext_response')\nconst ModifyRequest = require('./modify_request')\nconst ModifyResponse = require('./modify_response')\nconst ModifyDNRequest = require('./moddn_request')\nconst ModifyDNResponse = require('./moddn_response')\nconst SearchRequest = require('./search_request')\nconst SearchEntry = require('./search_entry')\nconst SearchReference = require('./search_reference')\nconst SearchResponse = require('./search_response')\nconst UnbindRequest = require('./unbind_request')\nconst UnbindResponse = require('./unbind_response')\n\n/// --- API\n\nmodule.exports = {\n\n  LDAPMessage: LDAPMessage,\n  LDAPResult: LDAPResult,\n  Parser: Parser,\n\n  AbandonRequest: AbandonRequest,\n  AbandonResponse: AbandonResponse,\n  AddRequest: AddRequest,\n  AddResponse: AddResponse,\n  BindRequest: BindRequest,\n  BindResponse: BindResponse,\n  CompareRequest: CompareRequest,\n  CompareResponse: CompareResponse,\n  DeleteRequest: DeleteRequest,\n  DeleteResponse: DeleteResponse,\n  ExtendedRequest: ExtendedRequest,\n  ExtendedResponse: ExtendedResponse,\n  ModifyRequest: ModifyRequest,\n  ModifyResponse: ModifyResponse,\n  ModifyDNRequest: ModifyDNRequest,\n  ModifyDNResponse: ModifyDNResponse,\n  SearchRequest: SearchRequest,\n  SearchEntry: SearchEntry,\n  SearchReference: SearchReference,\n  SearchResponse: SearchResponse,\n  UnbindRequest: UnbindRequest,\n  UnbindResponse: UnbindResponse\n\n}\n", "'use strict'\n\nconst util = require('util')\nconst assert = require('assert-plus')\n\nconst LDAPResult = require('../messages').LDAPResult\n\n/// --- Globals\n\nconst CODES = require('./codes')\nconst ERRORS = []\n\n/// --- Error Base class\n\nfunction LDAPError (message, dn, caller) {\n  if (Error.captureStackTrace) { Error.captureStackTrace(this, caller || LDAPError) }\n\n  this.lde_message = message\n  this.lde_dn = dn\n}\nutil.inherits(LDAPError, Error)\nObject.defineProperties(LDAPError.prototype, {\n  name: {\n    get: function getName () { return 'LDAPError' },\n    configurable: false\n  },\n  code: {\n    get: function getCode () { return CODES.LDAP_OTHER },\n    configurable: false\n  },\n  message: {\n    get: function getMessage () {\n      return this.lde_message || this.name\n    },\n    set: function setMessage (message) {\n      this.lde_message = message\n    },\n    configurable: false\n  },\n  dn: {\n    get: function getDN () {\n      return (this.lde_dn ? this.lde_dn.toString() : '')\n    },\n    configurable: false\n  }\n})\n\n/// --- Exported API\n\nmodule.exports = {}\nmodule.exports.LDAPError = LDAPError\n\n// Some whacky games here to make sure all the codes are exported\nObject.keys(CODES).forEach(function (code) {\n  module.exports[code] = CODES[code]\n  if (code === 'LDAP_SUCCESS') { return }\n\n  let err = ''\n  let msg = ''\n  const pieces = code.split('_').slice(1)\n  for (let i = 0; i < pieces.length; i++) {\n    const lc = pieces[i].toLowerCase()\n    const key = lc.charAt(0).toUpperCase() + lc.slice(1)\n    err += key\n    msg += key + ((i + 1) < pieces.length ? ' ' : '')\n  }\n\n  if (!/\\w+Error$/.test(err)) { err += 'Error' }\n\n  // At this point LDAP_OPERATIONS_ERROR is now OperationsError in $err\n  // and 'Operations Error' in $msg\n  module.exports[err] = function (message, dn, caller) {\n    LDAPError.call(this, message, dn, caller || module.exports[err])\n  }\n  module.exports[err].constructor = module.exports[err]\n  util.inherits(module.exports[err], LDAPError)\n  Object.defineProperties(module.exports[err].prototype, {\n    name: {\n      get: function getName () { return err },\n      configurable: false\n    },\n    code: {\n      get: function getCode () { return CODES[code] },\n      configurable: false\n    }\n  })\n\n  ERRORS[CODES[code]] = {\n    err: err,\n    message: msg\n  }\n})\n\nmodule.exports.getError = function (res) {\n  assert.ok(res instanceof LDAPResult, 'res (LDAPResult) required')\n\n  const errObj = ERRORS[res.status]\n  const E = module.exports[errObj.err]\n  return new E(res.errorMessage || errObj.message,\n    res.matchedDN || null,\n    module.exports.getError)\n}\n\nmodule.exports.getMessage = function (code) {\n  assert.number(code, 'code (number) required')\n\n  const errObj = ERRORS[code]\n  return (errObj && errObj.message ? errObj.message : '')\n}\n\n/// --- Custom application errors\n\nfunction ConnectionError (message) {\n  LDAPError.call(this, message, null, ConnectionError)\n}\nutil.inherits(ConnectionError, LDAPError)\nmodule.exports.ConnectionError = ConnectionError\nObject.defineProperties(ConnectionError.prototype, {\n  name: {\n    get: function () { return 'ConnectionError' },\n    configurable: false\n  }\n})\n\nfunction AbandonedError (message) {\n  LDAPError.call(this, message, null, AbandonedError)\n}\nutil.inherits(AbandonedError, LDAPError)\nmodule.exports.AbandonedError = AbandonedError\nObject.defineProperties(AbandonedError.prototype, {\n  name: {\n    get: function () { return 'AbandonedError' },\n    configurable: false\n  }\n})\n\nfunction TimeoutError (message) {\n  LDAPError.call(this, message, null, TimeoutError)\n}\nutil.inherits(TimeoutError, LDAPError)\nmodule.exports.TimeoutError = TimeoutError\nObject.defineProperties(TimeoutError.prototype, {\n  name: {\n    get: function () { return 'TimeoutError' },\n    configurable: false\n  }\n})\n", "'use strict'\n\nconst { TimeoutError } = require('../../errors')\n\n/**\n * Flushes the queue by rejecting all pending requests with a timeout error.\n */\nmodule.exports = function purge () {\n  this.flush(function flushCB (a, b, c, cb) {\n    cb(new TimeoutError('request queue timeout'))\n  })\n}\n", "'use strict'\n\nconst enqueue = require('./enqueue')\nconst flush = require('./flush')\nconst purge = require('./purge')\n\n/**\n * Builds a request queue object and returns it.\n *\n * @param {object} [options]\n * @param {integer} [options.size] Maximum size of the request queue. Must be\n * a number greater than `0` if supplied. Default: `Infinity`.\n * @param {integer} [options.timeout] Time in milliseconds a queue has to\n * complete the requests it contains.\n *\n * @returns {object} A queue instance.\n */\nmodule.exports = function requestQueueFactory (options) {\n  const opts = Object.assign({}, options)\n  const q = {\n    size: (opts.size > 0) ? opts.size : Infinity,\n    timeout: (opts.timeout > 0) ? opts.timeout : 0,\n    _queue: new Set(),\n    _timer: null,\n    _frozen: false\n  }\n\n  q.enqueue = enqueue.bind(q)\n  q.flush = flush.bind(q)\n  q.purge = purge.bind(q)\n  q.freeze = function freeze () {\n    this._frozen = true\n  }\n  q.thaw = function thaw () {\n    this._frozen = false\n  }\n\n  return q\n}\n", "'use strict'\n\nmodule.exports = {\n  // https://tools.ietf.org/html/rfc4511#section-4.1.1\n  // Message identifiers are an integer between (0, maxint).\n  MAX_MSGID: Math.pow(2, 31) - 1\n}\n", "'use strict'\n\nconst { MAX_MSGID } = require('../constants')\n\n/**\n * Returns a function that generates message identifiers. According to RFC 4511\n * the identifers should be `(0, MAX_MSGID)`. The returned function handles\n * this and wraps around when the maximum has been reached.\n *\n * @param {integer} [start=0] Starting number in the identifier sequence.\n *\n * @returns {function} This function accepts no parameters and returns an\n * increasing sequence identifier each invocation until it reaches the maximum\n * identifier. At this point the sequence starts over.\n */\nmodule.exports = function idGeneratorFactory (start = 0) {\n  let currentID = start\n  return function nextID () {\n    const id = currentID + 1\n    currentID = (id >= MAX_MSGID) ? 1 : id\n    return currentID\n  }\n}\n", "'use strict'\n\nconst { MAX_MSGID } = require('../constants')\n\n/**\n * Compare a reference id with another id to determine \"greater than or equal\"\n * between the two values according to a sliding window.\n *\n * @param {integer} ref\n * @param {integer} comp\n *\n * @returns {boolean} `true` if the `comp` value is >= to the `ref` value\n * within the computed window, otherwise `false`.\n */\nmodule.exports = function geWindow (ref, comp) {\n  let max = ref + Math.floor(MAX_MSGID / 2)\n  const min = ref\n  if (max >= MAX_MSGID) {\n    // Handle roll-over\n    max = max - MAX_MSGID - 1\n    return ((comp <= max) || (comp >= min))\n  } else {\n    return ((comp <= max) && (comp >= min))\n  }\n}\n", "'use strict'\n\nconst { AbandonedError } = require('../../errors')\nconst geWindow = require('./ge-window')\n\n/**\n * Given a `msgID` and a set of `abandoned` messages, remove any abandoned\n * messages that existed _prior_ to the specified `msgID`. For example, let's\n * assume the server has sent 3 messages:\n *\n * 1. A search message.\n * 2. An abandon message for the search message.\n * 3. A new search message.\n *\n * When the response for message #1 comes in, if it does, it will be processed\n * normally due to the specification. Message #2 will not receive a response, or\n * if the server does send one since the spec sort of allows it, we won't do\n * anything with it because we just discard that listener. Now the response\n * for message #3 comes in. At this point, we will issue a purge of responses\n * by passing in `msgID = 3`. This result is that we will remove the tracking\n * for message #1.\n *\n * @param {integer} msgID An upper bound for the messages to be purged.\n * @param {Map} abandoned A set of abandoned messages. Each message is an object\n * `{ age: <id>, cb: <func> }` where `age` was the current message id when the\n * abandon message was sent.\n */\nmodule.exports = function purgeAbandoned (msgID, abandoned) {\n  abandoned.forEach((val, key) => {\n    if (geWindow(val.age, msgID) === false) return\n    val.cb(new AbandonedError('client request abandoned'))\n    abandoned.delete(key)\n  })\n}\n", "'use strict'\n\nconst idGeneratorFactory = require('./id-generator')\nconst purgeAbandoned = require('./purge-abandoned')\n\n/**\n * Returns a message tracker object that keeps track of which message\n * identifiers correspond to which message handlers. Also handles keeping track\n * of abandoned messages.\n *\n * @param {object} options\n * @param {string} options.id An identifier for the tracker.\n * @param {object} options.parser An object that will be used to parse messages.\n *\n * @returns {MessageTracker}\n */\nmodule.exports = function messageTrackerFactory (options) {\n  if (Object.prototype.toString.call(options) !== '[object Object]') {\n    throw Error('options object is required')\n  }\n  if (!options.id || typeof options.id !== 'string') {\n    throw Error('options.id string is required')\n  }\n  if (!options.parser || Object.prototype.toString.call(options.parser) !== '[object Object]') {\n    throw Error('options.parser object is required')\n  }\n\n  let currentID = 0\n  const nextID = idGeneratorFactory()\n  const messages = new Map()\n  const abandoned = new Map()\n\n  /**\n   * @typedef {object} MessageTracker\n   * @property {string} id The identifier of the tracker as supplied via the options.\n   * @property {object} parser The parser object given by the the options.\n   */\n  const tracker = {\n    id: options.id,\n    parser: options.parser\n  }\n\n  /**\n   * Count of messages awaiting response.\n   *\n   * @alias pending\n   * @memberof! MessageTracker#\n   */\n  Object.defineProperty(tracker, 'pending', {\n    get () {\n      return messages.size\n    }\n  })\n\n  /**\n   * Move a specific message to the abanded track.\n   *\n   * @param {integer} msgID The identifier for the message to move.\n   *\n   * @memberof MessageTracker\n   * @method abandon\n   */\n  tracker.abandon = function abandonMessage (msgID) {\n    if (messages.has(msgID) === false) return false\n    abandoned.set(msgID, {\n      age: currentID,\n      cb: messages.get(msgID)\n    })\n    return messages.delete(msgID)\n  }\n\n  /**\n   * Retrieves the message handler for a message. Removes abandoned messages\n   * that have been given time to be resolved.\n   *\n   * @param {integer} msgID The identifier for the message to get the handler for.\n   *\n   * @memberof MessageTracker\n   * @method fetch\n   */\n  tracker.fetch = function fetchMessage (msgID) {\n    const messageCB = messages.get(msgID)\n    if (messageCB) {\n      purgeAbandoned(msgID, abandoned)\n      return messageCB\n    }\n\n    // We sent an abandon request but the server either wasn't able to process\n    // it or has not received it yet. Therefore, we received a response for the\n    // abandoned message. So we must return the abandoned message's callback\n    // to be processed normally.\n    const abandonedMsg = abandoned.get(msgID)\n    if (abandonedMsg) {\n      return abandonedMsg.cb\n    }\n\n    return null\n  }\n\n  /**\n   * Removes all message tracks, cleans up the abandoned track, and invokes\n   * a callback for each message purged.\n   *\n   * @param {function} cb A function with the signature `(msgID, handler)`.\n   *\n   * @memberof MessageTracker\n   * @method purge\n   */\n  tracker.purge = function purgeMessages (cb) {\n    messages.forEach((val, key) => {\n      purgeAbandoned(key, abandoned)\n      tracker.remove(key)\n      cb(key, val)\n    })\n  }\n\n  /**\n   * Removes a message from all tracking.\n   *\n   * @param {integer} msgID The identifier for the message to remove from tracking.\n   *\n   * @memberof MessageTracker\n   * @method remove\n   */\n  tracker.remove = function removeMessage (msgID) {\n    if (messages.delete(msgID) === false) {\n      abandoned.delete(msgID)\n    }\n  }\n\n  /**\n   * Add a message handler to be tracked.\n   *\n   * @param {object} message The message object to be tracked. This object will\n   * have a new property added to it: `messageID`.\n   * @param {function} callback The handler for the message.\n   *\n   * @memberof MessageTracker\n   * @method track\n   */\n  tracker.track = function trackMessage (message, callback) {\n    currentID = nextID()\n    // This side effect is not ideal but the client doesn't attach the tracker\n    // to itself until after the `.connect` method has fired. If this can be\n    // refactored later, then we can possibly get rid of this side effect.\n    message.messageID = currentID\n    messages.set(currentID, callback)\n  }\n\n  return tracker\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"net\" has been externalized for browser compatibility. Cannot access \"net.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"tls\" has been externalized for browser compatibility. Cannot access \"tls.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// Returns a wrapper function that returns a wrapped callback\r\n// The wrapper function should do some stuff, and return a\r\n// presumably different callback function.\r\n// This makes sure that own properties are retained, so that\r\n// decorations and such are not lost along the way.\r\nmodule.exports = wrappy\r\nfunction wrappy (fn, cb) {\r\n  if (fn && cb) return wrappy(fn)(cb)\r\n\r\n  if (typeof fn !== 'function')\r\n    throw new TypeError('need wrapper function')\r\n\r\n  Object.keys(fn).forEach(function (k) {\r\n    wrapper[k] = fn[k]\r\n  })\r\n\r\n  return wrapper\r\n\r\n  function wrapper() {\r\n    var args = new Array(arguments.length)\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n    var ret = fn.apply(this, args)\r\n    var cb = args[args.length-1]\r\n    if (typeof ret === 'function' && ret !== cb) {\r\n      Object.keys(cb).forEach(function (k) {\r\n        ret[k] = cb[k]\r\n      })\r\n    }\r\n    return ret\r\n  }\r\n}\r\n", "var wrappy = require('wrappy')\r\nmodule.exports = wrappy(once)\r\nmodule.exports.strict = wrappy(onceStrict)\r\n\r\nonce.proto = once(function () {\r\n  Object.defineProperty(Function.prototype, 'once', {\r\n    value: function () {\r\n      return once(this)\r\n    },\r\n    configurable: true\r\n  })\r\n\r\n  Object.defineProperty(Function.prototype, 'onceStrict', {\r\n    value: function () {\r\n      return onceStrict(this)\r\n    },\r\n    configurable: true\r\n  })\r\n})\r\n\r\nfunction once (fn) {\r\n  var f = function () {\r\n    if (f.called) return f.value\r\n    f.called = true\r\n    return f.value = fn.apply(this, arguments)\r\n  }\r\n  f.called = false\r\n  return f\r\n}\r\n\r\nfunction onceStrict (fn) {\r\n  var f = function () {\r\n    if (f.called)\r\n      throw new Error(f.onceError)\r\n    f.called = true\r\n    return f.value = fn.apply(this, arguments)\r\n  }\r\n  var name = fn.name || 'Function wrapped with `once`'\r\n  f.onceError = name + \" shouldn't be called more than once\"\r\n  f.called = false\r\n  return f\r\n}\r\n", "/*\r\n * Copyright (c) 2012 Mathieu Turcotte\r\n * Licensed under the MIT license.\r\n */\r\n\r\nvar util = require('util');\r\n\r\nfunction IllegalArgumentError(message) {\r\n    Error.call(this, message);\r\n    this.message = message;\r\n}\r\nutil.inherits(IllegalArgumentError, Error);\r\n\r\nIllegalArgumentError.prototype.name = 'IllegalArgumentError';\r\n\r\nfunction IllegalStateError(message) {\r\n    Error.call(this, message);\r\n    this.message = message;\r\n}\r\nutil.inherits(IllegalStateError, Error);\r\n\r\nIllegalStateError.prototype.name = 'IllegalStateError';\r\n\r\nmodule.exports.IllegalStateError = IllegalStateError;\r\nmodule.exports.IllegalArgumentError = IllegalArgumentError;", "/*\r\n * Copyright (c) 2012 Mathieu Turcotte\r\n * Licensed under the MIT license.\r\n */\r\n\r\nvar util = require('util');\r\n\r\nvar errors = module.exports = require('./errors');\r\n\r\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\r\n    messageFormat = messageFormat || '';\r\n    var message = util.format.apply(this, [messageFormat].concat(formatArgs));\r\n    var error = new ExceptionConstructor(message);\r\n    Error.captureStackTrace(error, callee);\r\n    throw error;\r\n}\r\n\r\nfunction failArgumentCheck(callee, message, formatArgs) {\r\n    failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\r\n}\r\n\r\nfunction failStateCheck(callee, message, formatArgs) {\r\n    failCheck(errors.IllegalStateError, callee, message, formatArgs);\r\n}\r\n\r\nmodule.exports.checkArgument = function(value, message) {\r\n    if (!value) {\r\n        failArgumentCheck(arguments.callee, message,\r\n            Array.prototype.slice.call(arguments, 2));\r\n    }\r\n};\r\n\r\nmodule.exports.checkState = function(value, message) {\r\n    if (!value) {\r\n        failStateCheck(arguments.callee, message,\r\n            Array.prototype.slice.call(arguments, 2));\r\n    }\r\n};\r\n\r\nmodule.exports.checkIsDef = function(value, message) {\r\n    if (value !== undefined) {\r\n        return value;\r\n    }\r\n\r\n    failArgumentCheck(arguments.callee, message ||\r\n        'Expected value to be defined but was undefined.',\r\n        Array.prototype.slice.call(arguments, 2));\r\n};\r\n\r\nmodule.exports.checkIsDefAndNotNull = function(value, message) {\r\n    // Note that undefined == null.\r\n    if (value != null) {\r\n        return value;\r\n    }\r\n\r\n    failArgumentCheck(arguments.callee, message ||\r\n        'Expected value to be defined and not null but got \"' +\r\n        typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\r\n};\r\n\r\n// Fixed version of the typeOf operator which returns 'null' for null values\r\n// and 'array' for arrays.\r\nfunction typeOf(value) {\r\n    var s = typeof value;\r\n    if (s == 'object') {\r\n        if (!value) {\r\n            return 'null';\r\n        } else if (value instanceof Array) {\r\n            return 'array';\r\n        }\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction typeCheck(expect) {\r\n    return function(value, message) {\r\n        var type = typeOf(value);\r\n\r\n        if (type == expect) {\r\n            return value;\r\n        }\r\n\r\n        failArgumentCheck(arguments.callee, message ||\r\n            'Expected \"' + expect + '\" but got \"' + type + '\".',\r\n            Array.prototype.slice.call(arguments, 2));\r\n    };\r\n}\r\n\r\nmodule.exports.checkIsString = typeCheck('string');\r\nmodule.exports.checkIsArray = typeCheck('array');\r\nmodule.exports.checkIsNumber = typeCheck('number');\r\nmodule.exports.checkIsBoolean = typeCheck('boolean');\r\nmodule.exports.checkIsFunction = typeCheck('function');\r\nmodule.exports.checkIsObject = typeCheck('object');\r\n", "/*\r\n * Copyright (c) 2012 Mathieu Turcotte\r\n * Licensed under the MIT license.\r\n */\r\n\r\nmodule.exports = require('./lib/checks');", "//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nvar events = require('events');\r\nvar precond = require('precond');\r\nvar util = require('util');\r\n\r\n// A class to hold the state of a backoff operation. Accepts a backoff strategy\r\n// to generate the backoff delays.\r\nfunction Backoff(backoffStrategy) {\r\n    events.EventEmitter.call(this);\r\n\r\n    this.backoffStrategy_ = backoffStrategy;\r\n    this.maxNumberOfRetry_ = -1;\r\n    this.backoffNumber_ = 0;\r\n    this.backoffDelay_ = 0;\r\n    this.timeoutID_ = -1;\r\n\r\n    this.handlers = {\r\n        backoff: this.onBackoff_.bind(this)\r\n    };\r\n}\r\nutil.inherits(Backoff, events.EventEmitter);\r\n\r\n// Sets a limit, greater than 0, on the maximum number of backoffs. A 'fail'\r\n// event will be emitted when the limit is reached.\r\nBackoff.prototype.failAfter = function(maxNumberOfRetry) {\r\n    precond.checkArgument(maxNumberOfRetry > 0,\r\n        'Expected a maximum number of retry greater than 0 but got %s.',\r\n        maxNumberOfRetry);\r\n\r\n    this.maxNumberOfRetry_ = maxNumberOfRetry;\r\n};\r\n\r\n// Starts a backoff operation. Accepts an optional parameter to let the\r\n// listeners know why the backoff operation was started.\r\nBackoff.prototype.backoff = function(err) {\r\n    precond.checkState(this.timeoutID_ === -1, 'Backoff in progress.');\r\n\r\n    if (this.backoffNumber_ === this.maxNumberOfRetry_) {\r\n        this.emit('fail', err);\r\n        this.reset();\r\n    } else {\r\n        this.backoffDelay_ = this.backoffStrategy_.next();\r\n        this.timeoutID_ = setTimeout(this.handlers.backoff, this.backoffDelay_);\r\n        this.emit('backoff', this.backoffNumber_, this.backoffDelay_, err);\r\n    }\r\n};\r\n\r\n// Handles the backoff timeout completion.\r\nBackoff.prototype.onBackoff_ = function() {\r\n    this.timeoutID_ = -1;\r\n    this.emit('ready', this.backoffNumber_, this.backoffDelay_);\r\n    this.backoffNumber_++;\r\n};\r\n\r\n// Stops any backoff operation and resets the backoff delay to its inital value.\r\nBackoff.prototype.reset = function() {\r\n    this.backoffNumber_ = 0;\r\n    this.backoffStrategy_.reset();\r\n    clearTimeout(this.timeoutID_);\r\n    this.timeoutID_ = -1;\r\n};\r\n\r\nmodule.exports = Backoff;\r\n", "//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nvar events = require('events');\r\nvar util = require('util');\r\n\r\nfunction isDef(value) {\r\n    return value !== undefined && value !== null;\r\n}\r\n\r\n// Abstract class defining the skeleton for the backoff strategies. Accepts an\r\n// object holding the options for the backoff strategy:\r\n//\r\n//  * `randomisationFactor`: The randomisation factor which must be between 0\r\n//     and 1 where 1 equates to a randomization factor of 100% and 0 to no\r\n//     randomization.\r\n//  * `initialDelay`: The backoff initial delay in milliseconds.\r\n//  * `maxDelay`: The backoff maximal delay in milliseconds.\r\nfunction BackoffStrategy(options) {\r\n    options = options || {};\r\n\r\n    if (isDef(options.initialDelay) && options.initialDelay < 1) {\r\n        throw new Error('The initial timeout must be greater than 0.');\r\n    } else if (isDef(options.maxDelay) && options.maxDelay < 1) {\r\n        throw new Error('The maximal timeout must be greater than 0.');\r\n    }\r\n\r\n    this.initialDelay_ = options.initialDelay || 100;\r\n    this.maxDelay_ = options.maxDelay || 10000;\r\n\r\n    if (this.maxDelay_ <= this.initialDelay_) {\r\n        throw new Error('The maximal backoff delay must be ' +\r\n                        'greater than the initial backoff delay.');\r\n    }\r\n\r\n    if (isDef(options.randomisationFactor) &&\r\n        (options.randomisationFactor < 0 || options.randomisationFactor > 1)) {\r\n        throw new Error('The randomisation factor must be between 0 and 1.');\r\n    }\r\n\r\n    this.randomisationFactor_ = options.randomisationFactor || 0;\r\n}\r\n\r\n// Gets the maximal backoff delay.\r\nBackoffStrategy.prototype.getMaxDelay = function() {\r\n    return this.maxDelay_;\r\n};\r\n\r\n// Gets the initial backoff delay.\r\nBackoffStrategy.prototype.getInitialDelay = function() {\r\n    return this.initialDelay_;\r\n};\r\n\r\n// Template method that computes and returns the next backoff delay in\r\n// milliseconds.\r\nBackoffStrategy.prototype.next = function() {\r\n    var backoffDelay = this.next_();\r\n    var randomisationMultiple = 1 + Math.random() * this.randomisationFactor_;\r\n    var randomizedDelay = Math.round(backoffDelay * randomisationMultiple);\r\n    return randomizedDelay;\r\n};\r\n\r\n// Computes and returns the next backoff delay. Intended to be overridden by\r\n// subclasses.\r\nBackoffStrategy.prototype.next_ = function() {\r\n    throw new Error('BackoffStrategy.next_() unimplemented.');\r\n};\r\n\r\n// Template method that resets the backoff delay to its initial value.\r\nBackoffStrategy.prototype.reset = function() {\r\n    this.reset_();\r\n};\r\n\r\n// Resets the backoff delay to its initial value. Intended to be overridden by\r\n// subclasses.\r\nBackoffStrategy.prototype.reset_ = function() {\r\n    throw new Error('BackoffStrategy.reset_() unimplemented.');\r\n};\r\n\r\nmodule.exports = BackoffStrategy;\r\n", "//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nvar util = require('util');\r\nvar precond = require('precond');\r\n\r\nvar BackoffStrategy = require('./strategy');\r\n\r\n// Exponential backoff strategy.\r\nfunction ExponentialBackoffStrategy(options) {\r\n    BackoffStrategy.call(this, options);\r\n    this.backoffDelay_ = 0;\r\n    this.nextBackoffDelay_ = this.getInitialDelay();\r\n    this.factor_ = ExponentialBackoffStrategy.DEFAULT_FACTOR;\r\n\r\n    if (options && options.factor !== undefined) {\r\n        precond.checkArgument(options.factor > 1,\r\n            'Exponential factor should be greater than 1 but got %s.',\r\n            options.factor);\r\n        this.factor_ = options.factor;\r\n    }\r\n}\r\nutil.inherits(ExponentialBackoffStrategy, BackoffStrategy);\r\n\r\n// Default multiplication factor used to compute the next backoff delay from\r\n// the current one. The value can be overridden by passing a custom factor as\r\n// part of the options.\r\nExponentialBackoffStrategy.DEFAULT_FACTOR = 2;\r\n\r\nExponentialBackoffStrategy.prototype.next_ = function() {\r\n    this.backoffDelay_ = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\r\n    this.nextBackoffDelay_ = this.backoffDelay_ * this.factor_;\r\n    return this.backoffDelay_;\r\n};\r\n\r\nExponentialBackoffStrategy.prototype.reset_ = function() {\r\n    this.backoffDelay_ = 0;\r\n    this.nextBackoffDelay_ = this.getInitialDelay();\r\n};\r\n\r\nmodule.exports = ExponentialBackoffStrategy;\r\n", "//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nvar util = require('util');\r\n\r\nvar BackoffStrategy = require('./strategy');\r\n\r\n// Fibonacci backoff strategy.\r\nfunction FibonacciBackoffStrategy(options) {\r\n    BackoffStrategy.call(this, options);\r\n    this.backoffDelay_ = 0;\r\n    this.nextBackoffDelay_ = this.getInitialDelay();\r\n}\r\nutil.inherits(FibonacciBackoffStrategy, BackoffStrategy);\r\n\r\nFibonacciBackoffStrategy.prototype.next_ = function() {\r\n    var backoffDelay = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\r\n    this.nextBackoffDelay_ += this.backoffDelay_;\r\n    this.backoffDelay_ = backoffDelay;\r\n    return backoffDelay;\r\n};\r\n\r\nFibonacciBackoffStrategy.prototype.reset_ = function() {\r\n    this.nextBackoffDelay_ = this.getInitialDelay();\r\n    this.backoffDelay_ = 0;\r\n};\r\n\r\nmodule.exports = FibonacciBackoffStrategy;\r\n", "//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nvar events = require('events');\r\nvar precond = require('precond');\r\nvar util = require('util');\r\n\r\nvar Backoff = require('./backoff');\r\nvar FibonacciBackoffStrategy = require('./strategy/fibonacci');\r\n\r\n// Wraps a function to be called in a backoff loop.\r\nfunction FunctionCall(fn, args, callback) {\r\n    events.EventEmitter.call(this);\r\n\r\n    precond.checkIsFunction(fn, 'Expected fn to be a function.');\r\n    precond.checkIsArray(args, 'Expected args to be an array.');\r\n    precond.checkIsFunction(callback, 'Expected callback to be a function.');\r\n\r\n    this.function_ = fn;\r\n    this.arguments_ = args;\r\n    this.callback_ = callback;\r\n    this.lastResult_ = [];\r\n    this.numRetries_ = 0;\r\n\r\n    this.backoff_ = null;\r\n    this.strategy_ = null;\r\n    this.failAfter_ = -1;\r\n    this.retryPredicate_ = FunctionCall.DEFAULT_RETRY_PREDICATE_;\r\n\r\n    this.state_ = FunctionCall.State_.PENDING;\r\n}\r\nutil.inherits(FunctionCall, events.EventEmitter);\r\n\r\n// States in which the call can be.\r\nFunctionCall.State_ = {\r\n    // Call isn't started yet.\r\n    PENDING: 0,\r\n    // Call is in progress.\r\n    RUNNING: 1,\r\n    // Call completed successfully which means that either the wrapped function\r\n    // returned successfully or the maximal number of backoffs was reached.\r\n    COMPLETED: 2,\r\n    // The call was aborted.\r\n    ABORTED: 3\r\n};\r\n\r\n// The default retry predicate which considers any error as retriable.\r\nFunctionCall.DEFAULT_RETRY_PREDICATE_ = function(err) {\r\n  return true;\r\n};\r\n\r\n// Checks whether the call is pending.\r\nFunctionCall.prototype.isPending = function() {\r\n    return this.state_ == FunctionCall.State_.PENDING;\r\n};\r\n\r\n// Checks whether the call is in progress.\r\nFunctionCall.prototype.isRunning = function() {\r\n    return this.state_ == FunctionCall.State_.RUNNING;\r\n};\r\n\r\n// Checks whether the call is completed.\r\nFunctionCall.prototype.isCompleted = function() {\r\n    return this.state_ == FunctionCall.State_.COMPLETED;\r\n};\r\n\r\n// Checks whether the call is aborted.\r\nFunctionCall.prototype.isAborted = function() {\r\n    return this.state_ == FunctionCall.State_.ABORTED;\r\n};\r\n\r\n// Sets the backoff strategy to use. Can only be called before the call is\r\n// started otherwise an exception will be thrown.\r\nFunctionCall.prototype.setStrategy = function(strategy) {\r\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\r\n    this.strategy_ = strategy;\r\n    return this; // Return this for chaining.\r\n};\r\n\r\n// Sets the predicate which will be used to determine whether the errors\r\n// returned from the wrapped function should be retried or not, e.g. a\r\n// network error would be retriable while a type error would stop the\r\n// function call.\r\nFunctionCall.prototype.retryIf = function(retryPredicate) {\r\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\r\n    this.retryPredicate_ = retryPredicate;\r\n    return this;\r\n};\r\n\r\n// Returns all intermediary results returned by the wrapped function since\r\n// the initial call.\r\nFunctionCall.prototype.getLastResult = function() {\r\n    return this.lastResult_.concat();\r\n};\r\n\r\n// Returns the number of times the wrapped function call was retried.\r\nFunctionCall.prototype.getNumRetries = function() {\r\n    return this.numRetries_;\r\n};\r\n\r\n// Sets the backoff limit.\r\nFunctionCall.prototype.failAfter = function(maxNumberOfRetry) {\r\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\r\n    this.failAfter_ = maxNumberOfRetry;\r\n    return this; // Return this for chaining.\r\n};\r\n\r\n// Aborts the call.\r\nFunctionCall.prototype.abort = function() {\r\n    if (this.isCompleted() || this.isAborted()) {\r\n      return;\r\n    }\r\n\r\n    if (this.isRunning()) {\r\n        this.backoff_.reset();\r\n    }\r\n\r\n    this.state_ = FunctionCall.State_.ABORTED;\r\n    this.lastResult_ = [new Error('Backoff aborted.')];\r\n    this.emit('abort');\r\n    this.doCallback_();\r\n};\r\n\r\n// Initiates the call to the wrapped function. Accepts an optional factory\r\n// function used to create the backoff instance; used when testing.\r\nFunctionCall.prototype.start = function(backoffFactory) {\r\n    precond.checkState(!this.isAborted(), 'FunctionCall is aborted.');\r\n    precond.checkState(this.isPending(), 'FunctionCall already started.');\r\n\r\n    var strategy = this.strategy_ || new FibonacciBackoffStrategy();\r\n\r\n    this.backoff_ = backoffFactory ?\r\n        backoffFactory(strategy) :\r\n        new Backoff(strategy);\r\n\r\n    this.backoff_.on('ready', this.doCall_.bind(this, true /* isRetry */));\r\n    this.backoff_.on('fail', this.doCallback_.bind(this));\r\n    this.backoff_.on('backoff', this.handleBackoff_.bind(this));\r\n\r\n    if (this.failAfter_ > 0) {\r\n        this.backoff_.failAfter(this.failAfter_);\r\n    }\r\n\r\n    this.state_ = FunctionCall.State_.RUNNING;\r\n    this.doCall_(false /* isRetry */);\r\n};\r\n\r\n// Calls the wrapped function.\r\nFunctionCall.prototype.doCall_ = function(isRetry) {\r\n    if (isRetry) {\r\n        this.numRetries_++;\r\n    }\r\n    var eventArgs = ['call'].concat(this.arguments_);\r\n    events.EventEmitter.prototype.emit.apply(this, eventArgs);\r\n    var callback = this.handleFunctionCallback_.bind(this);\r\n    this.function_.apply(null, this.arguments_.concat(callback));\r\n};\r\n\r\n// Calls the wrapped function's callback with the last result returned by the\r\n// wrapped function.\r\nFunctionCall.prototype.doCallback_ = function() {\r\n    this.callback_.apply(null, this.lastResult_);\r\n};\r\n\r\n// Handles wrapped function's completion. This method acts as a replacement\r\n// for the original callback function.\r\nFunctionCall.prototype.handleFunctionCallback_ = function() {\r\n    if (this.isAborted()) {\r\n        return;\r\n    }\r\n\r\n    var args = Array.prototype.slice.call(arguments);\r\n    this.lastResult_ = args; // Save last callback arguments.\r\n    events.EventEmitter.prototype.emit.apply(this, ['callback'].concat(args));\r\n\r\n    var err = args[0];\r\n    if (err && this.retryPredicate_(err)) {\r\n        this.backoff_.backoff(err);\r\n    } else {\r\n        this.state_ = FunctionCall.State_.COMPLETED;\r\n        this.doCallback_();\r\n    }\r\n};\r\n\r\n// Handles the backoff event by reemitting it.\r\nFunctionCall.prototype.handleBackoff_ = function(number, delay, err) {\r\n    this.emit('backoff', number, delay, err);\r\n};\r\n\r\nmodule.exports = FunctionCall;\r\n", "//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nvar Backoff = require('./lib/backoff');\r\nvar ExponentialBackoffStrategy = require('./lib/strategy/exponential');\r\nvar FibonacciBackoffStrategy = require('./lib/strategy/fibonacci');\r\nvar FunctionCall = require('./lib/function_call.js');\r\n\r\nmodule.exports.Backoff = Backoff;\r\nmodule.exports.FunctionCall = FunctionCall;\r\nmodule.exports.FibonacciStrategy = FibonacciBackoffStrategy;\r\nmodule.exports.ExponentialStrategy = ExponentialBackoffStrategy;\r\n\r\n// Constructs a Fibonacci backoff.\r\nmodule.exports.fibonacci = function(options) {\r\n    return new Backoff(new FibonacciBackoffStrategy(options));\r\n};\r\n\r\n// Constructs an exponential backoff.\r\nmodule.exports.exponential = function(options) {\r\n    return new Backoff(new ExponentialBackoffStrategy(options));\r\n};\r\n\r\n// Constructs a FunctionCall for the given function and arguments.\r\nmodule.exports.call = function(fn, vargs, callback) {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    fn = args[0];\r\n    vargs = args.slice(1, args.length - 1);\r\n    callback = args[args.length - 1];\r\n    return new FunctionCall(fn, vargs, callback);\r\n};\r\n", "/*\r\n * extsprintf.js: extended POSIX-style sprintf\r\n */\r\n\r\nvar mod_assert = require('assert');\r\nvar mod_util = require('util');\r\n\r\n/*\r\n * Public interface\r\n */\r\nexports.sprintf = jsSprintf;\r\nexports.printf = jsPrintf;\r\nexports.fprintf = jsFprintf;\r\n\r\n/*\r\n * Stripped down version of s[n]printf(3c).  We make a best effort to throw an\r\n * exception when given a format string we don't understand, rather than\r\n * ignoring it, so that we won't break existing programs if/when we go implement\r\n * the rest of this.\r\n *\r\n * This implementation currently supports specifying\r\n *\t- field alignment ('-' flag),\r\n * \t- zero-pad ('0' flag)\r\n *\t- always show numeric sign ('+' flag),\r\n *\t- field width\r\n *\t- conversions for strings, decimal integers, and floats (numbers).\r\n *\t- argument size specifiers.  These are all accepted but ignored, since\r\n *\t  Javascript has no notion of the physical size of an argument.\r\n *\r\n * Everything else is currently unsupported, most notably precision, unsigned\r\n * numbers, non-decimal numbers, and characters.\r\n */\r\nfunction jsSprintf(ofmt)\r\n{\r\n\tvar regex = [\r\n\t    '([^%]*)',\t\t\t\t/* normal text */\r\n\t    '%',\t\t\t\t/* start of format */\r\n\t    '([\\'\\\\-+ #0]*?)',\t\t\t/* flags (optional) */\r\n\t    '([1-9]\\\\d*)?',\t\t\t/* width (optional) */\r\n\t    '(\\\\.([1-9]\\\\d*))?',\t\t/* precision (optional) */\r\n\t    '[lhjztL]*?',\t\t\t/* length mods (ignored) */\r\n\t    '([diouxXfFeEgGaAcCsSp%jr])'\t/* conversion */\r\n\t].join('');\r\n\r\n\tvar re = new RegExp(regex);\r\n\r\n\t/* variadic arguments used to fill in conversion specifiers */\r\n\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t/* remaining format string */\r\n\tvar fmt = ofmt;\r\n\r\n\t/* components of the current conversion specifier */\r\n\tvar flags, width, precision, conversion;\r\n\tvar left, pad, sign, arg, match;\r\n\r\n\t/* return value */\r\n\tvar ret = '';\r\n\r\n\t/* current variadic argument (1-based) */\r\n\tvar argn = 1;\r\n\t/* 0-based position in the format string that we've read */\r\n\tvar posn = 0;\r\n\t/* 1-based position in the format string of the current conversion */\r\n\tvar convposn;\r\n\t/* current conversion specifier */\r\n\tvar curconv;\r\n\r\n\tmod_assert.equal('string', typeof (fmt),\r\n\t    'first argument must be a format string');\r\n\r\n\twhile ((match = re.exec(fmt)) !== null) {\r\n\t\tret += match[1];\r\n\t\tfmt = fmt.substring(match[0].length);\r\n\r\n\t\t/*\r\n\t\t * Update flags related to the current conversion specifier's\r\n\t\t * position so that we can report clear error messages.\r\n\t\t */\r\n\t\tcurconv = match[0].substring(match[1].length);\r\n\t\tconvposn = posn + match[1].length + 1;\r\n\t\tposn += match[0].length;\r\n\r\n\t\tflags = match[2] || '';\r\n\t\twidth = match[3] || 0;\r\n\t\tprecision = match[4] || '';\r\n\t\tconversion = match[6];\r\n\t\tleft = false;\r\n\t\tsign = false;\r\n\t\tpad = ' ';\r\n\r\n\t\tif (conversion == '%') {\r\n\t\t\tret += '%';\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (args.length === 0) {\r\n\t\t\tthrow (jsError(ofmt, convposn, curconv,\r\n\t\t\t    'has no matching argument ' +\r\n\t\t\t    '(too few arguments passed)'));\r\n\t\t}\r\n\r\n\t\targ = args.shift();\r\n\t\targn++;\r\n\r\n\t\tif (flags.match(/[\\' #]/)) {\r\n\t\t\tthrow (jsError(ofmt, convposn, curconv,\r\n\t\t\t    'uses unsupported flags'));\r\n\t\t}\r\n\r\n\t\tif (precision.length > 0) {\r\n\t\t\tthrow (jsError(ofmt, convposn, curconv,\r\n\t\t\t    'uses non-zero precision (not supported)'));\r\n\t\t}\r\n\r\n\t\tif (flags.match(/-/))\r\n\t\t\tleft = true;\r\n\r\n\t\tif (flags.match(/0/))\r\n\t\t\tpad = '0';\r\n\r\n\t\tif (flags.match(/\\+/))\r\n\t\t\tsign = true;\r\n\r\n\t\tswitch (conversion) {\r\n\t\tcase 's':\r\n\t\t\tif (arg === undefined || arg === null) {\r\n\t\t\t\tthrow (jsError(ofmt, convposn, curconv,\r\n\t\t\t\t    'attempted to print undefined or null ' +\r\n\t\t\t\t    'as a string (argument ' + argn + ' to ' +\r\n\t\t\t\t    'sprintf)'));\r\n\t\t\t}\r\n\t\t\tret += doPad(pad, width, left, arg.toString());\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'd':\r\n\t\t\targ = Math.floor(arg);\r\n\t\t\t/*jsl:fallthru*/\r\n\t\tcase 'f':\r\n\t\t\tsign = sign && arg > 0 ? '+' : '';\r\n\t\t\tret += sign + doPad(pad, width, left,\r\n\t\t\t    arg.toString());\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'x':\r\n\t\t\tret += doPad(pad, width, left, arg.toString(16));\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'j': /* non-standard */\r\n\t\t\tif (width === 0)\r\n\t\t\t\twidth = 10;\r\n\t\t\tret += mod_util.inspect(arg, false, width);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'r': /* non-standard */\r\n\t\t\tret += dumpException(arg);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow (jsError(ofmt, convposn, curconv,\r\n\t\t\t    'is not supported'));\r\n\t\t}\r\n\t}\r\n\r\n\tret += fmt;\r\n\treturn (ret);\r\n}\r\n\r\nfunction jsError(fmtstr, convposn, curconv, reason) {\r\n\tmod_assert.equal(typeof (fmtstr), 'string');\r\n\tmod_assert.equal(typeof (curconv), 'string');\r\n\tmod_assert.equal(typeof (convposn), 'number');\r\n\tmod_assert.equal(typeof (reason), 'string');\r\n\treturn (new Error('format string \"' + fmtstr +\r\n\t    '\": conversion specifier \"' + curconv + '\" at character ' +\r\n\t    convposn + ' ' + reason));\r\n}\r\n\r\nfunction jsPrintf() {\r\n\tvar args = Array.prototype.slice.call(arguments);\r\n\targs.unshift(process.stdout);\r\n\tjsFprintf.apply(null, args);\r\n}\r\n\r\nfunction jsFprintf(stream) {\r\n\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\treturn (stream.write(jsSprintf.apply(this, args)));\r\n}\r\n\r\nfunction doPad(chr, width, left, str)\r\n{\r\n\tvar ret = str;\r\n\r\n\twhile (ret.length < width) {\r\n\t\tif (left)\r\n\t\t\tret += chr;\r\n\t\telse\r\n\t\t\tret = chr + ret;\r\n\t}\r\n\r\n\treturn (ret);\r\n}\r\n\r\n/*\r\n * This function dumps long stack traces for exceptions having a cause() method.\r\n * See node-verror for an example.\r\n */\r\nfunction dumpException(ex)\r\n{\r\n\tvar ret;\r\n\r\n\tif (!(ex instanceof Error))\r\n\t\tthrow (new Error(jsSprintf('invalid type for %%r: %j', ex)));\r\n\r\n\t/* Note that V8 prepends \"ex.stack\" with ex.toString(). */\r\n\tret = 'EXCEPTION: ' + ex.constructor.name + ': ' + ex.stack;\r\n\r\n\tif (ex.cause && typeof (ex.cause) === 'function') {\r\n\t\tvar cex = ex.cause();\r\n\t\tif (cex) {\r\n\t\t\tret += '\\nCaused by: ' + dumpException(cex);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (ret);\r\n}\r\n", "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\n\r\nfunction isArray(arg) {\r\n  if (Array.isArray) {\r\n    return Array.isArray(arg);\r\n  }\r\n  return objectToString(arg) === '[object Array]';\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\nexports.isNull = isNull;\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\nexports.isSymbol = isSymbol;\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\n\r\nfunction isRegExp(re) {\r\n  return objectToString(re) === '[object RegExp]';\r\n}\r\nexports.isRegExp = isRegExp;\r\n\r\nfunction isObject(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\nexports.isObject = isObject;\r\n\r\nfunction isDate(d) {\r\n  return objectToString(d) === '[object Date]';\r\n}\r\nexports.isDate = isDate;\r\n\r\nfunction isError(e) {\r\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\nexports.isError = isError;\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\nexports.isPrimitive = isPrimitive;\r\n\r\nexports.isBuffer = Buffer.isBuffer;\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n", "/*\r\n * verror.js: richer JavaScript errors\r\n */\r\n\r\nvar mod_assertplus = require('assert-plus');\r\nvar mod_util = require('util');\r\n\r\nvar mod_extsprintf = require('extsprintf');\r\nvar mod_isError = require('core-util-is').isError;\r\nvar sprintf = mod_extsprintf.sprintf;\r\n\r\n/*\r\n * Public interface\r\n */\r\n\r\n/* So you can 'var VError = require('verror')' */\r\nmodule.exports = VError;\r\n/* For compatibility */\r\nVError.VError = VError;\r\n/* Other exported classes */\r\nVError.SError = SError;\r\nVError.WError = WError;\r\nVError.MultiError = MultiError;\r\n\r\n/*\r\n * Common function used to parse constructor arguments for VError, WError, and\r\n * SError.  Named arguments to this function:\r\n *\r\n *     strict\t\tforce strict interpretation of sprintf arguments, even\r\n *     \t\t\tif the options in \"argv\" don't say so\r\n *\r\n *     argv\t\terror's constructor arguments, which are to be\r\n *     \t\t\tinterpreted as described in README.md.  For quick\r\n *     \t\t\treference, \"argv\" has one of the following forms:\r\n *\r\n *          [ sprintf_args... ]           (argv[0] is a string)\r\n *          [ cause, sprintf_args... ]    (argv[0] is an Error)\r\n *          [ options, sprintf_args... ]  (argv[0] is an object)\r\n *\r\n * This function normalizes these forms, producing an object with the following\r\n * properties:\r\n *\r\n *    options           equivalent to \"options\" in third form.  This will never\r\n *    \t\t\tbe a direct reference to what the caller passed in\r\n *    \t\t\t(i.e., it may be a shallow copy), so it can be freely\r\n *    \t\t\tmodified.\r\n *\r\n *    shortmessage      result of sprintf(sprintf_args), taking options.strict\r\n *    \t\t\tinto account as described in README.md.\r\n */\r\nfunction parseConstructorArguments(args)\r\n{\r\n\tvar argv, options, sprintf_args, shortmessage, k;\r\n\r\n\tmod_assertplus.object(args, 'args');\r\n\tmod_assertplus.bool(args.strict, 'args.strict');\r\n\tmod_assertplus.array(args.argv, 'args.argv');\r\n\targv = args.argv;\r\n\r\n\t/*\r\n\t * First, figure out which form of invocation we've been given.\r\n\t */\r\n\tif (argv.length === 0) {\r\n\t\toptions = {};\r\n\t\tsprintf_args = [];\r\n\t} else if (mod_isError(argv[0])) {\r\n\t\toptions = { 'cause': argv[0] };\r\n\t\tsprintf_args = argv.slice(1);\r\n\t} else if (typeof (argv[0]) === 'object') {\r\n\t\toptions = {};\r\n\t\tfor (k in argv[0]) {\r\n\t\t\toptions[k] = argv[0][k];\r\n\t\t}\r\n\t\tsprintf_args = argv.slice(1);\r\n\t} else {\r\n\t\tmod_assertplus.string(argv[0],\r\n\t\t    'first argument to VError, SError, or WError ' +\r\n\t\t    'constructor must be a string, object, or Error');\r\n\t\toptions = {};\r\n\t\tsprintf_args = argv;\r\n\t}\r\n\r\n\t/*\r\n\t * Now construct the error's message.\r\n\t *\r\n\t * extsprintf (which we invoke here with our caller's arguments in order\r\n\t * to construct this Error's message) is strict in its interpretation of\r\n\t * values to be processed by the \"%s\" specifier.  The value passed to\r\n\t * extsprintf must actually be a string or something convertible to a\r\n\t * String using .toString().  Passing other values (notably \"null\" and\r\n\t * \"undefined\") is considered a programmer error.  The assumption is\r\n\t * that if you actually want to print the string \"null\" or \"undefined\",\r\n\t * then that's easy to do that when you're calling extsprintf; on the\r\n\t * other hand, if you did NOT want that (i.e., there's actually a bug\r\n\t * where the program assumes some variable is non-null and tries to\r\n\t * print it, which might happen when constructing a packet or file in\r\n\t * some specific format), then it's better to stop immediately than\r\n\t * produce bogus output.\r\n\t *\r\n\t * However, sometimes the bug is only in the code calling VError, and a\r\n\t * programmer might prefer to have the error message contain \"null\" or\r\n\t * \"undefined\" rather than have the bug in the error path crash the\r\n\t * program (making the first bug harder to identify).  For that reason,\r\n\t * by default VError converts \"null\" or \"undefined\" arguments to their\r\n\t * string representations and passes those to extsprintf.  Programmers\r\n\t * desiring the strict behavior can use the SError class or pass the\r\n\t * \"strict\" option to the VError constructor.\r\n\t */\r\n\tmod_assertplus.object(options);\r\n\tif (!options.strict && !args.strict) {\r\n\t\tsprintf_args = sprintf_args.map(function (a) {\r\n\t\t\treturn (a === null ? 'null' :\r\n\t\t\t    a === undefined ? 'undefined' : a);\r\n\t\t});\r\n\t}\r\n\r\n\tif (sprintf_args.length === 0) {\r\n\t\tshortmessage = '';\r\n\t} else {\r\n\t\tshortmessage = sprintf.apply(null, sprintf_args);\r\n\t}\r\n\r\n\treturn ({\r\n\t    'options': options,\r\n\t    'shortmessage': shortmessage\r\n\t});\r\n}\r\n\r\n/*\r\n * See README.md for reference documentation.\r\n */\r\nfunction VError()\r\n{\r\n\tvar args, obj, parsed, cause, ctor, message, k;\r\n\r\n\targs = Array.prototype.slice.call(arguments, 0);\r\n\r\n\t/*\r\n\t * This is a regrettable pattern, but JavaScript's built-in Error class\r\n\t * is defined to work this way, so we allow the constructor to be called\r\n\t * without \"new\".\r\n\t */\r\n\tif (!(this instanceof VError)) {\r\n\t\tobj = Object.create(VError.prototype);\r\n\t\tVError.apply(obj, arguments);\r\n\t\treturn (obj);\r\n\t}\r\n\r\n\t/*\r\n\t * For convenience and backwards compatibility, we support several\r\n\t * different calling forms.  Normalize them here.\r\n\t */\r\n\tparsed = parseConstructorArguments({\r\n\t    'argv': args,\r\n\t    'strict': false\r\n\t});\r\n\r\n\t/*\r\n\t * If we've been given a name, apply it now.\r\n\t */\r\n\tif (parsed.options.name) {\r\n\t\tmod_assertplus.string(parsed.options.name,\r\n\t\t    'error\\'s \"name\" must be a string');\r\n\t\tthis.name = parsed.options.name;\r\n\t}\r\n\r\n\t/*\r\n\t * For debugging, we keep track of the original short message (attached\r\n\t * this Error particularly) separately from the complete message (which\r\n\t * includes the messages of our cause chain).\r\n\t */\r\n\tthis.jse_shortmsg = parsed.shortmessage;\r\n\tmessage = parsed.shortmessage;\r\n\r\n\t/*\r\n\t * If we've been given a cause, record a reference to it and update our\r\n\t * message appropriately.\r\n\t */\r\n\tcause = parsed.options.cause;\r\n\tif (cause) {\r\n\t\tmod_assertplus.ok(mod_isError(cause), 'cause is not an Error');\r\n\t\tthis.jse_cause = cause;\r\n\r\n\t\tif (!parsed.options.skipCauseMessage) {\r\n\t\t\tmessage += ': ' + cause.message;\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * If we've been given an object with properties, shallow-copy that\r\n\t * here.  We don't want to use a deep copy in case there are non-plain\r\n\t * objects here, but we don't want to use the original object in case\r\n\t * the caller modifies it later.\r\n\t */\r\n\tthis.jse_info = {};\r\n\tif (parsed.options.info) {\r\n\t\tfor (k in parsed.options.info) {\r\n\t\t\tthis.jse_info[k] = parsed.options.info[k];\r\n\t\t}\r\n\t}\r\n\r\n\tthis.message = message;\r\n\tError.call(this, message);\r\n\r\n\tif (Error.captureStackTrace) {\r\n\t\tctor = parsed.options.constructorOpt || this.constructor;\r\n\t\tError.captureStackTrace(this, ctor);\r\n\t}\r\n\r\n\treturn (this);\r\n}\r\n\r\nmod_util.inherits(VError, Error);\r\nVError.prototype.name = 'VError';\r\n\r\nVError.prototype.toString = function ve_toString()\r\n{\r\n\tvar str = (this.hasOwnProperty('name') && this.name ||\r\n\t\tthis.constructor.name || this.constructor.prototype.name);\r\n\tif (this.message)\r\n\t\tstr += ': ' + this.message;\r\n\r\n\treturn (str);\r\n};\r\n\r\n/*\r\n * This method is provided for compatibility.  New callers should use\r\n * VError.cause() instead.  That method also uses the saner `null` return value\r\n * when there is no cause.\r\n */\r\nVError.prototype.cause = function ve_cause()\r\n{\r\n\tvar cause = VError.cause(this);\r\n\treturn (cause === null ? undefined : cause);\r\n};\r\n\r\n/*\r\n * Static methods\r\n *\r\n * These class-level methods are provided so that callers can use them on\r\n * instances of Errors that are not VErrors.  New interfaces should be provided\r\n * only using static methods to eliminate the class of programming mistake where\r\n * people fail to check whether the Error object has the corresponding methods.\r\n */\r\n\r\nVError.cause = function (err)\r\n{\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\treturn (mod_isError(err.jse_cause) ? err.jse_cause : null);\r\n};\r\n\r\nVError.info = function (err)\r\n{\r\n\tvar rv, cause, k;\r\n\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\tcause = VError.cause(err);\r\n\tif (cause !== null) {\r\n\t\trv = VError.info(cause);\r\n\t} else {\r\n\t\trv = {};\r\n\t}\r\n\r\n\tif (typeof (err.jse_info) == 'object' && err.jse_info !== null) {\r\n\t\tfor (k in err.jse_info) {\r\n\t\t\trv[k] = err.jse_info[k];\r\n\t\t}\r\n\t}\r\n\r\n\treturn (rv);\r\n};\r\n\r\nVError.findCauseByName = function (err, name)\r\n{\r\n\tvar cause;\r\n\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\tmod_assertplus.string(name, 'name');\r\n\tmod_assertplus.ok(name.length > 0, 'name cannot be empty');\r\n\r\n\tfor (cause = err; cause !== null; cause = VError.cause(cause)) {\r\n\t\tmod_assertplus.ok(mod_isError(cause));\r\n\t\tif (cause.name == name) {\r\n\t\t\treturn (cause);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (null);\r\n};\r\n\r\nVError.hasCauseWithName = function (err, name)\r\n{\r\n\treturn (VError.findCauseByName(err, name) !== null);\r\n};\r\n\r\nVError.fullStack = function (err)\r\n{\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\r\n\tvar cause = VError.cause(err);\r\n\r\n\tif (cause) {\r\n\t\treturn (err.stack + '\\ncaused by: ' + VError.fullStack(cause));\r\n\t}\r\n\r\n\treturn (err.stack);\r\n};\r\n\r\nVError.errorFromList = function (errors)\r\n{\r\n\tmod_assertplus.arrayOfObject(errors, 'errors');\r\n\r\n\tif (errors.length === 0) {\r\n\t\treturn (null);\r\n\t}\r\n\r\n\terrors.forEach(function (e) {\r\n\t\tmod_assertplus.ok(mod_isError(e));\r\n\t});\r\n\r\n\tif (errors.length == 1) {\r\n\t\treturn (errors[0]);\r\n\t}\r\n\r\n\treturn (new MultiError(errors));\r\n};\r\n\r\nVError.errorForEach = function (err, func)\r\n{\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\tmod_assertplus.func(func, 'func');\r\n\r\n\tif (err instanceof MultiError) {\r\n\t\terr.errors().forEach(function iterError(e) { func(e); });\r\n\t} else {\r\n\t\tfunc(err);\r\n\t}\r\n};\r\n\r\n\r\n/*\r\n * SError is like VError, but stricter about types.  You cannot pass \"null\" or\r\n * \"undefined\" as string arguments to the formatter.\r\n */\r\nfunction SError()\r\n{\r\n\tvar args, obj, parsed, options;\r\n\r\n\targs = Array.prototype.slice.call(arguments, 0);\r\n\tif (!(this instanceof SError)) {\r\n\t\tobj = Object.create(SError.prototype);\r\n\t\tSError.apply(obj, arguments);\r\n\t\treturn (obj);\r\n\t}\r\n\r\n\tparsed = parseConstructorArguments({\r\n\t    'argv': args,\r\n\t    'strict': true\r\n\t});\r\n\r\n\toptions = parsed.options;\r\n\tVError.call(this, options, '%s', parsed.shortmessage);\r\n\r\n\treturn (this);\r\n}\r\n\r\n/*\r\n * We don't bother setting SError.prototype.name because once constructed,\r\n * SErrors are just like VErrors.\r\n */\r\nmod_util.inherits(SError, VError);\r\n\r\n\r\n/*\r\n * Represents a collection of errors for the purpose of consumers that generally\r\n * only deal with one error.  Callers can extract the individual errors\r\n * contained in this object, but may also just treat it as a normal single\r\n * error, in which case a summary message will be printed.\r\n */\r\nfunction MultiError(errors)\r\n{\r\n\tmod_assertplus.array(errors, 'list of errors');\r\n\tmod_assertplus.ok(errors.length > 0, 'must be at least one error');\r\n\tthis.ase_errors = errors;\r\n\r\n\tVError.call(this, {\r\n\t    'cause': errors[0]\r\n\t}, 'first of %d error%s', errors.length, errors.length == 1 ? '' : 's');\r\n}\r\n\r\nmod_util.inherits(MultiError, VError);\r\nMultiError.prototype.name = 'MultiError';\r\n\r\nMultiError.prototype.errors = function me_errors()\r\n{\r\n\treturn (this.ase_errors.slice(0));\r\n};\r\n\r\n\r\n/*\r\n * See README.md for reference details.\r\n */\r\nfunction WError()\r\n{\r\n\tvar args, obj, parsed, options;\r\n\r\n\targs = Array.prototype.slice.call(arguments, 0);\r\n\tif (!(this instanceof WError)) {\r\n\t\tobj = Object.create(WError.prototype);\r\n\t\tWError.apply(obj, args);\r\n\t\treturn (obj);\r\n\t}\r\n\r\n\tparsed = parseConstructorArguments({\r\n\t    'argv': args,\r\n\t    'strict': false\r\n\t});\r\n\r\n\toptions = parsed.options;\r\n\toptions['skipCauseMessage'] = true;\r\n\tVError.call(this, options, '%s', parsed.shortmessage);\r\n\r\n\treturn (this);\r\n}\r\n\r\nmod_util.inherits(WError, VError);\r\nWError.prototype.name = 'WError';\r\n\r\nWError.prototype.toString = function we_toString()\r\n{\r\n\tvar str = (this.hasOwnProperty('name') && this.name ||\r\n\t\tthis.constructor.name || this.constructor.prototype.name);\r\n\tif (this.message)\r\n\t\tstr += ': ' + this.message;\r\n\tif (this.jse_cause && this.jse_cause.message)\r\n\t\tstr += '; caused by ' + this.jse_cause.toString();\r\n\r\n\treturn (str);\r\n};\r\n\r\n/*\r\n * For purely historical reasons, WError's cause() function allows you to set\r\n * the cause.\r\n */\r\nWError.prototype.cause = function we_cause(c)\r\n{\r\n\tif (mod_isError(c))\r\n\t\tthis.jse_cause = c;\r\n\r\n\treturn (this.jse_cause);\r\n};\r\n", "/*\r\n * vasync.js: utilities for observable asynchronous control flow\r\n */\r\n\r\nvar mod_assert = require('assert');\r\nvar mod_events = require('events');\r\nvar mod_util = require('util');\r\nvar mod_verror = require('verror');\r\n\r\n/*\r\n * Public interface\r\n */\r\nexports.parallel = parallel;\r\nexports.forEachParallel = forEachParallel;\r\nexports.pipeline = pipeline;\r\nexports.tryEach = tryEach;\r\nexports.forEachPipeline = forEachPipeline;\r\nexports.filter = filter;\r\nexports.filterLimit = filterLimit;\r\nexports.filterSeries = filterSeries;\r\nexports.whilst = whilst;\r\nexports.queue = queue;\r\nexports.queuev = queuev;\r\nexports.barrier = barrier;\r\nexports.waterfall = waterfall;\r\n\r\nif (!global.setImmediate) {\r\n\tglobal.setImmediate = function (func) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\targs.unshift(0);\r\n\t\targs.unshift(func);\r\n\t\tsetTimeout.apply(this, args);\r\n\t};\r\n}\r\n\r\n/*\r\n * This is incorporated here from jsprim because jsprim ends up pulling in a lot\r\n * of dependencies.  If we end up needing more from jsprim, though, we should\r\n * add it back and rip out this function.\r\n */\r\nfunction isEmpty(obj)\r\n{\r\n\tvar key;\r\n\tfor (key in obj)\r\n\t\treturn (false);\r\n\treturn (true);\r\n}\r\n\r\n/*\r\n * Given a set of functions that complete asynchronously using the standard\r\n * callback(err, result) pattern, invoke them all and merge the results.  See\r\n * README.md for details.\r\n */\r\nfunction parallel(args, callback)\r\n{\r\n\tvar funcs, rv, doneOne, i;\r\n\r\n\tmod_assert.equal(typeof (args), 'object', '\"args\" must be an object');\r\n\tmod_assert.ok(Array.isArray(args['funcs']),\r\n\t    '\"args.funcs\" must be specified and must be an array');\r\n\tmod_assert.equal(typeof (callback), 'function',\r\n\t    'callback argument must be specified and must be a function');\r\n\r\n\tfuncs = args['funcs'].slice(0);\r\n\r\n\trv = {\r\n\t    'operations': new Array(funcs.length),\r\n\t    'successes': [],\r\n\t    'ndone': 0,\r\n\t    'nerrors': 0\r\n\t};\r\n\r\n\tif (funcs.length === 0) {\r\n\t\tsetImmediate(function () { callback(null, rv); });\r\n\t\treturn (rv);\r\n\t}\r\n\r\n\tdoneOne = function (entry) {\r\n\t\treturn (function (err, result) {\r\n\t\t\tmod_assert.equal(entry['status'], 'pending');\r\n\r\n\t\t\tentry['err'] = err;\r\n\t\t\tentry['result'] = result;\r\n\t\t\tentry['status'] = err ? 'fail' : 'ok';\r\n\r\n\t\t\tif (err)\r\n\t\t\t\trv['nerrors']++;\r\n\t\t\telse\r\n\t\t\t\trv['successes'].push(result);\r\n\r\n\t\t\tif (++rv['ndone'] < funcs.length)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar errors = rv['operations'].filter(function (ent) {\r\n\t\t\t\treturn (ent['status'] == 'fail');\r\n\t\t\t}).map(function (ent) { return (ent['err']); });\r\n\r\n\t\t\tif (errors.length > 0)\r\n\t\t\t\tcallback(new mod_verror.MultiError(errors), rv);\r\n\t\t\telse\r\n\t\t\t\tcallback(null, rv);\r\n\t\t});\r\n\t};\r\n\r\n\tfor (i = 0; i < funcs.length; i++) {\r\n\t\trv['operations'][i] = {\r\n\t\t\t'func': funcs[i],\r\n\t\t\t'funcname': funcs[i].name || '(anon)',\r\n\t\t\t'status': 'pending'\r\n\t\t};\r\n\r\n\t\tfuncs[i](doneOne(rv['operations'][i]));\r\n\t}\r\n\r\n\treturn (rv);\r\n}\r\n\r\n/*\r\n * Exactly like parallel, except that the input is specified as a single\r\n * function to invoke on N different inputs (rather than N functions).  \"args\"\r\n * must have the following fields:\r\n *\r\n *\tfunc\t\tasynchronous function to invoke on each input value\r\n *\r\n *\tinputs\t\tarray of input values\r\n */\r\nfunction forEachParallel(args, callback)\r\n{\r\n\tvar func, funcs;\r\n\r\n\tmod_assert.equal(typeof (args), 'object', '\"args\" must be an object');\r\n\tmod_assert.equal(typeof (args['func']), 'function',\r\n\t    '\"args.func\" must be specified and must be a function');\r\n\tmod_assert.ok(Array.isArray(args['inputs']),\r\n\t    '\"args.inputs\" must be specified and must be an array');\r\n\r\n\tfunc = args['func'];\r\n\tfuncs = args['inputs'].map(function (input) {\r\n\t\treturn (function (subcallback) {\r\n\t\t\treturn (func(input, subcallback));\r\n\t\t});\r\n\t});\r\n\r\n\treturn (parallel({ 'funcs': funcs }, callback));\r\n}\r\n\r\n/*\r\n * Like parallel, but invokes functions in sequence rather than in parallel\r\n * and aborts if any function exits with failure.  Arguments include:\r\n *\r\n *    funcs\tinvoke the functions in parallel\r\n *\r\n *    arg\tfirst argument to each pipeline function\r\n */\r\nfunction pipeline(args, callback)\r\n{\r\n\tmod_assert.equal(typeof (args), 'object', '\"args\" must be an object');\r\n\tmod_assert.ok(Array.isArray(args['funcs']),\r\n\t    '\"args.funcs\" must be specified and must be an array');\r\n\r\n\tvar opts = {\r\n\t    'funcs': args['funcs'].slice(0),\r\n\t    'callback': callback,\r\n\t    'args': { impl: 'pipeline', uarg: args['arg'] },\r\n\t    'stop_when': 'error',\r\n\t    'res_type': 'rv'\r\n\t};\r\n\treturn (waterfall_impl(opts));\r\n}\r\n\r\nfunction tryEach(funcs, callback)\r\n{\r\n\tmod_assert.ok(Array.isArray(funcs),\r\n\t    '\"funcs\" must be specified and must be an array');\r\n\tmod_assert.ok(arguments.length == 1 || typeof (callback) == 'function',\r\n\t    '\"callback\" must be a function');\r\n\tvar opts = {\r\n\t    'funcs': funcs.slice(0),\r\n\t    'callback': callback,\r\n\t    'args': { impl: 'tryEach' },\r\n\t    'stop_when': 'success',\r\n\t    'res_type': 'array'\r\n\t};\r\n\treturn (waterfall_impl(opts));\r\n}\r\n\r\n/*\r\n * Exactly like pipeline, except that the input is specified as a single\r\n * function to invoke on N different inputs (rather than N functions).  \"args\"\r\n * must have the following fields:\r\n *\r\n *\tfunc\t\tasynchronous function to invoke on each input value\r\n *\r\n *\tinputs\t\tarray of input values\r\n */\r\nfunction forEachPipeline(args, callback) {\r\n\tmod_assert.equal(typeof (args), 'object', '\"args\" must be an object');\r\n\tmod_assert.equal(typeof (args['func']), 'function',\r\n\t    '\"args.func\" must be specified and must be a function');\r\n\tmod_assert.ok(Array.isArray(args['inputs']),\r\n\t    '\"args.inputs\" must be specified and must be an array');\r\n\tmod_assert.equal(typeof (callback), 'function',\r\n\t    'callback argument must be specified and must be a function');\r\n\r\n\tvar func = args['func'];\r\n\r\n\tvar funcs = args['inputs'].map(function (input) {\r\n\t\treturn (function (_, subcallback) {\r\n\t\t\t\treturn (func(input, subcallback));\r\n\t\t\t});\r\n\t});\r\n\r\n\treturn (pipeline({'funcs': funcs}, callback));\r\n}\r\n\r\n/*\r\n * async.js compatible filter, filterLimit, and filterSeries.  Takes an input\r\n * array, optionally a limit, and a single function to filter an array and will\r\n * callback with a new filtered array. This is effectively an asynchronous\r\n * version of Array.prototype.filter.\r\n */\r\nfunction filter(inputs, filterFunc, callback) {\r\n\treturn (filterLimit(inputs, Infinity, filterFunc, callback));\r\n}\r\n\r\nfunction filterSeries(inputs, filterFunc, callback) {\r\n\treturn (filterLimit(inputs, 1, filterFunc, callback));\r\n}\r\n\r\nfunction filterLimit(inputs, limit, filterFunc, callback) {\r\n\tmod_assert.ok(Array.isArray(inputs),\r\n\t    '\"inputs\" must be specified and must be an array');\r\n\tmod_assert.equal(typeof (limit), 'number',\r\n\t    '\"limit\" must be a number');\r\n\tmod_assert.equal(isNaN(limit), false,\r\n\t    '\"limit\" must be a number');\r\n\tmod_assert.equal(typeof (filterFunc), 'function',\r\n\t    '\"filterFunc\" must be specified and must be a function');\r\n\tmod_assert.equal(typeof (callback), 'function',\r\n\t    '\"callback\" argument must be specified as a function');\r\n\r\n\tvar errors = [];\r\n\tvar q = queue(processInput, limit);\r\n\tvar results = [];\r\n\r\n\tfunction processInput(input, cb) {\r\n\t\t/*\r\n\t\t * If the errors array has any members, an error was\r\n\t\t * encountered in a previous invocation of filterFunc, so all\r\n\t\t * future filtering will be skipped.\r\n\t\t */\r\n\t\tif (errors.length > 0) {\r\n\t\t\tcb();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfilterFunc(input.elem, function inputFiltered(err, ans) {\r\n\t\t\t/*\r\n\t\t\t * We ensure here that a filterFunc callback is only\r\n\t\t\t * ever invoked once.\r\n\t\t\t */\r\n\t\t\tif (results.hasOwnProperty(input.idx)) {\r\n\t\t\t\tthrow (new mod_verror.VError(\r\n\t\t\t\t    'vasync.filter*: filterFunc idx %d ' +\r\n\t\t\t\t    'invoked its callback twice', input.idx));\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * The original element, as well as the answer \"ans\"\r\n\t\t\t * (truth value) is stored to later be filtered when\r\n\t\t\t * all outstanding jobs are finished.\r\n\t\t\t */\r\n\t\t\tresults[input.idx] = {\r\n\t\t\t\telem: input.elem,\r\n\t\t\t\tans: !!ans\r\n\t\t\t};\r\n\r\n\t\t\t/*\r\n\t\t\t * Any error encountered while filtering will result in\r\n\t\t\t * all future operations being skipped, and the error\r\n\t\t\t * object being returned in the users callback.\r\n\t\t\t */\r\n\t\t\tif (err) {\r\n\t\t\t\terrors.push(err);\r\n\t\t\t\tcb();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcb();\r\n\t\t});\r\n\t}\r\n\r\n\tq.once('end', function queueDrained() {\r\n\t\tif (errors.length > 0) {\r\n\t\t\tcallback(mod_verror.errorFromList(errors));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * results is now an array of objects in the same order of the\r\n\t\t * inputs array, where each object looks like:\r\n\t\t *\r\n\t\t * {\r\n\t\t *     \"ans\": <true|false>,\r\n\t\t *     \"elem\": <original input element>\r\n\t\t * }\r\n\t\t *\r\n\t\t * we filter out elements that have a false \"ans\" value, and\r\n\t\t * then map the array to contain only the input elements.\r\n\t\t */\r\n\t\tresults = results.filter(function filterFalseInputs(input) {\r\n\t\t\treturn (input.ans);\r\n\t\t}).map(function mapInputElements(input) {\r\n\t\t\treturn (input.elem);\r\n\t\t});\r\n\t\tcallback(null, results);\r\n\t});\r\n\r\n\tinputs.forEach(function iterateInput(elem, idx) {\r\n\t\t/*\r\n\t\t * We retain the array index to ensure that order is\r\n\t\t * maintained.\r\n\t\t */\r\n\t\tq.push({\r\n\t\t\telem: elem,\r\n\t\t\tidx: idx\r\n\t\t});\r\n\t});\r\n\r\n\tq.close();\r\n\r\n\treturn (q);\r\n}\r\n\r\n/*\r\n * async-compatible \"whilst\" function, with a few notable exceptions/addons.\r\n *\r\n * 1. More strict typing of arguments (functions *must* be supplied).\r\n * 2. A callback function is required, not optional.\r\n * 3. An object is returned, not undefined.\r\n */\r\nfunction whilst(testFunc, iterateFunc, callback) {\r\n\tmod_assert.equal(typeof (testFunc), 'function',\r\n\t    '\"testFunc\" must be specified and must be a function');\r\n\tmod_assert.equal(typeof (iterateFunc), 'function',\r\n\t    '\"iterateFunc\" must be specified and must be a function');\r\n\tmod_assert.equal(typeof (callback), 'function',\r\n\t    '\"callback\" argument must be specified as a function');\r\n\r\n\t/*\r\n\t * The object returned to the caller that provides a read-only\r\n\t * interface to introspect this specific invocation of \"whilst\".\r\n\t */\r\n\tvar o = {\r\n\t    'finished': false,\r\n\t    'iterations': 0\r\n\t};\r\n\r\n\t/*\r\n\t * Store the last set of arguments from the final call to \"iterateFunc\".\r\n\t * The arguments will be passed to the final callback when an error is\r\n\t * encountered or when the testFunc returns false.\r\n\t */\r\n\tvar args = [];\r\n\r\n\tfunction iterate() {\r\n\t\tvar shouldContinue = testFunc();\r\n\r\n\t\tif (!shouldContinue) {\r\n\t\t\t/*\r\n\t\t\t * The test condition is false - break out of the loop.\r\n\t\t\t */\r\n\t\t\tdone();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/* Bump iterations after testFunc but before iterateFunc. */\r\n\t\to.iterations++;\r\n\r\n\t\titerateFunc(function whilstIteration(err) {\r\n\t\t\t/* Store the latest set of arguments seen. */\r\n\t\t\targs = Array.prototype.slice.call(arguments);\r\n\r\n\t\t\t/* Any error with iterateFunc will break the loop. */\r\n\t\t\tif (err) {\r\n\t\t\t\tdone();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t/* Try again. */\r\n\t\t\tsetImmediate(iterate);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction done() {\r\n\t\tmod_assert.ok(!o.finished, 'whilst already finished');\r\n\t\to.finished = true;\r\n\t\tcallback.apply(this, args);\r\n\t}\r\n\r\n\tsetImmediate(iterate);\r\n\r\n\treturn (o);\r\n}\r\n\r\n/*\r\n * async-compatible \"queue\" function.\r\n */\r\nfunction queue(worker, concurrency)\r\n{\r\n\treturn (new WorkQueue({\r\n\t    'worker': worker,\r\n\t    'concurrency': concurrency\r\n\t}));\r\n}\r\n\r\nfunction queuev(args)\r\n{\r\n\treturn (new WorkQueue(args));\r\n}\r\n\r\nfunction WorkQueue(args)\r\n{\r\n\tmod_assert.ok(args.hasOwnProperty('worker'));\r\n\tmod_assert.equal(typeof (args['worker']), 'function');\r\n\tmod_assert.ok(args.hasOwnProperty('concurrency'));\r\n\tmod_assert.equal(typeof (args['concurrency']), 'number');\r\n\tmod_assert.equal(Math.floor(args['concurrency']), args['concurrency']);\r\n\tmod_assert.ok(args['concurrency'] > 0);\r\n\r\n\tmod_events.EventEmitter.call(this);\r\n\r\n\tthis.nextid = 0;\r\n\tthis.worker = args['worker'];\r\n\tthis.worker_name = args['worker'].name || 'anon';\r\n\tthis.npending = 0;\r\n\tthis.pending = {};\r\n\tthis.queued = [];\r\n\tthis.closed = false;\r\n\tthis.ended = false;\r\n\r\n\t/* user-settable fields inherited from \"async\" interface */\r\n\tthis.concurrency = args['concurrency'];\r\n\tthis.saturated = undefined;\r\n\tthis.empty = undefined;\r\n\tthis.drain = undefined;\r\n}\r\n\r\nmod_util.inherits(WorkQueue, mod_events.EventEmitter);\r\n\r\nWorkQueue.prototype.push = function (tasks, callback)\r\n{\r\n\tif (!Array.isArray(tasks))\r\n\t\treturn (this.pushOne(tasks, callback));\r\n\r\n\tvar wq = this;\r\n\treturn (tasks.map(function (task) {\r\n\t    return (wq.pushOne(task, callback));\r\n\t}));\r\n};\r\n\r\nWorkQueue.prototype.updateConcurrency = function (concurrency)\r\n{\r\n\tif (this.closed)\r\n\t\tthrow new mod_verror.VError(\r\n\t\t\t'update concurrency invoked after queue closed');\r\n\tthis.concurrency = concurrency;\r\n\tthis.dispatchNext();\r\n};\r\n\r\nWorkQueue.prototype.close = function ()\r\n{\r\n\tvar wq = this;\r\n\r\n\tif (wq.closed)\r\n\t\treturn;\r\n\twq.closed = true;\r\n\r\n\t/*\r\n\t * If the queue is already empty, just fire the \"end\" event on the\r\n\t * next tick.\r\n\t */\r\n\tif (wq.npending === 0 && wq.queued.length === 0) {\r\n\t\tsetImmediate(function () {\r\n\t\t\tif (!wq.ended) {\r\n\t\t\t\twq.ended = true;\r\n\t\t\t\twq.emit('end');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/* private */\r\nWorkQueue.prototype.pushOne = function (task, callback)\r\n{\r\n\tif (this.closed)\r\n\t\tthrow new mod_verror.VError('push invoked after queue closed');\r\n\r\n\tvar id = ++this.nextid;\r\n\tvar entry = { 'id': id, 'task': task, 'callback': callback };\r\n\r\n\tthis.queued.push(entry);\r\n\tthis.dispatchNext();\r\n\r\n\treturn (id);\r\n};\r\n\r\n/* private */\r\nWorkQueue.prototype.dispatchNext = function ()\r\n{\r\n\tvar wq = this;\r\n\tif (wq.npending === 0 && wq.queued.length === 0) {\r\n\t\tif (wq.drain)\r\n\t\t\twq.drain();\r\n\t\twq.emit('drain');\r\n\t\t/*\r\n\t\t * The queue is closed; emit the final \"end\"\r\n\t\t * event before we come to rest:\r\n\t\t */\r\n\t\tif (wq.closed) {\r\n\t\t\twq.ended = true;\r\n\t\t\twq.emit('end');\r\n\t\t}\r\n\t} else if (wq.queued.length > 0) {\r\n\t\twhile (wq.queued.length > 0 && wq.npending < wq.concurrency) {\r\n\t\t\tvar next = wq.queued.shift();\r\n\t\t\twq.dispatch(next);\r\n\r\n\t\t\tif (wq.queued.length === 0) {\r\n\t\t\t\tif (wq.empty)\r\n\t\t\t\t\twq.empty();\r\n\t\t\t\twq.emit('empty');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nWorkQueue.prototype.dispatch = function (entry)\r\n{\r\n\tvar wq = this;\r\n\r\n\tmod_assert.ok(!this.pending.hasOwnProperty(entry['id']));\r\n\tmod_assert.ok(this.npending < this.concurrency);\r\n\tmod_assert.ok(!this.ended);\r\n\r\n\tthis.npending++;\r\n\tthis.pending[entry['id']] = entry;\r\n\r\n\tif (this.npending === this.concurrency) {\r\n\t\tif (this.saturated)\r\n\t\t\tthis.saturated();\r\n\t\tthis.emit('saturated');\r\n\t}\r\n\r\n\t/*\r\n\t * We invoke the worker function on the next tick so that callers can\r\n\t * always assume that the callback is NOT invoked during the call to\r\n\t * push() even if the queue is not at capacity.  It also avoids O(n)\r\n\t * stack usage when used with synchronous worker functions.\r\n\t */\r\n\tsetImmediate(function () {\r\n\t\twq.worker(entry['task'], function (err) {\r\n\t\t\t--wq.npending;\r\n\t\t\tdelete (wq.pending[entry['id']]);\r\n\r\n\t\t\tif (entry['callback'])\r\n\t\t\t\tentry['callback'].apply(null, arguments);\r\n\r\n\t\t\twq.dispatchNext();\r\n\t\t});\r\n\t});\r\n};\r\n\r\nWorkQueue.prototype.length = function ()\r\n{\r\n\treturn (this.queued.length);\r\n};\r\n\r\nWorkQueue.prototype.kill = function ()\r\n{\r\n\tthis.killed = true;\r\n\tthis.queued = [];\r\n\tthis.drain = undefined;\r\n\tthis.close();\r\n};\r\n\r\n/*\r\n * Barriers coordinate multiple concurrent operations.\r\n */\r\nfunction barrier(args)\r\n{\r\n\treturn (new Barrier(args));\r\n}\r\n\r\nfunction Barrier(args)\r\n{\r\n\tmod_assert.ok(!args || !args['nrecent'] ||\r\n\t    typeof (args['nrecent']) == 'number',\r\n\t    '\"nrecent\" must have type \"number\"');\r\n\r\n\tmod_events.EventEmitter.call(this);\r\n\r\n\tvar nrecent = args && args['nrecent'] ? args['nrecent'] : 10;\r\n\r\n\tif (nrecent > 0) {\r\n\t\tthis.nrecent = nrecent;\r\n\t\tthis.recent = [];\r\n\t}\r\n\r\n\tthis.pending = {};\r\n\tthis.scheduled = false;\r\n}\r\n\r\nmod_util.inherits(Barrier, mod_events.EventEmitter);\r\n\r\nBarrier.prototype.start = function (name)\r\n{\r\n\tmod_assert.ok(!this.pending.hasOwnProperty(name),\r\n\t    'operation \"' + name + '\" is already pending');\r\n\tthis.pending[name] = Date.now();\r\n};\r\n\r\nBarrier.prototype.done = function (name)\r\n{\r\n\tmod_assert.ok(this.pending.hasOwnProperty(name),\r\n\t    'operation \"' + name + '\" is not pending');\r\n\r\n\tif (this.recent) {\r\n\t\tthis.recent.push({\r\n\t\t    'name': name,\r\n\t\t    'start': this.pending[name],\r\n\t\t    'done': Date.now()\r\n\t\t});\r\n\r\n\t\tif (this.recent.length > this.nrecent)\r\n\t\t\tthis.recent.shift();\r\n\t}\r\n\r\n\tdelete (this.pending[name]);\r\n\r\n\t/*\r\n\t * If we executed at least one operation and we're now empty, we should\r\n\t * emit \"drain\".  But most code doesn't deal well with events being\r\n\t * processed while they're executing, so we actually schedule this event\r\n\t * for the next tick.\r\n\t *\r\n\t * We use the \"scheduled\" flag to avoid emitting multiple \"drain\" events\r\n\t * on consecutive ticks if the user starts and ends another task during\r\n\t * this tick.\r\n\t */\r\n\tif (!isEmpty(this.pending) || this.scheduled)\r\n\t\treturn;\r\n\r\n\tthis.scheduled = true;\r\n\r\n\tvar self = this;\r\n\r\n\tsetImmediate(function () {\r\n\t\tself.scheduled = false;\r\n\r\n\t\t/*\r\n\t\t * It's also possible that the user has started another task on\r\n\t\t * the previous tick, in which case we really shouldn't emit\r\n\t\t * \"drain\".\r\n\t\t */\r\n\t\tif (isEmpty(self.pending))\r\n\t\t\tself.emit('drain');\r\n\t});\r\n};\r\n\r\n/*\r\n * waterfall([ funcs ], callback): invoke each of the asynchronous functions\r\n * \"funcs\" in series.  Each function is passed any values emitted by the\r\n * previous function (none for the first function), followed by the callback to\r\n * invoke upon completion.  This callback must be invoked exactly once,\r\n * regardless of success or failure.  As conventional in Node, the first\r\n * argument to the callback indicates an error (if non-null).  Subsequent\r\n * arguments are passed to the next function in the \"funcs\" chain.\r\n *\r\n * If any function fails (i.e., calls its callback with an Error), then the\r\n * remaining functions are not invoked and \"callback\" is invoked with the error.\r\n *\r\n * The only difference between waterfall() and pipeline() are the arguments\r\n * passed to each function in the chain.  pipeline() always passes the same\r\n * argument followed by the callback, while waterfall() passes whatever values\r\n * were emitted by the previous function followed by the callback.\r\n */\r\nfunction waterfall(funcs, callback)\r\n{\r\n\tmod_assert.ok(Array.isArray(funcs),\r\n\t    '\"funcs\" must be specified and must be an array');\r\n\tmod_assert.ok(arguments.length == 1 || typeof (callback) == 'function',\r\n\t    '\"callback\" must be a function');\r\n\tvar opts = {\r\n\t    'funcs': funcs.slice(0),\r\n\t    'callback': callback,\r\n\t    'args': { impl: 'waterfall' },\r\n\t    'stop_when': 'error',\r\n\t    'res_type': 'values'\r\n\t};\r\n\treturn (waterfall_impl(opts));\r\n}\r\n\r\n/*\r\n * This function is used to implement vasync-functions that need to execute a\r\n * list of functions in a sequence, but differ in how they make use of the\r\n * intermediate callbacks and finall callback, as well as under what conditions\r\n * they stop executing the functions in the list. Examples of such functions\r\n * are `pipeline`, `waterfall`, and `tryEach`. See the documentation for those\r\n * functions to see how they operate.\r\n *\r\n * This function's behavior is influenced via the `opts` object that we pass\r\n * in. This object has the following layout:\r\n *\r\n * \t{\r\n * \t\t'funcs': array of functions\r\n * \t\t'callback': the final callback\r\n * \t\t'args': {\r\n * \t\t\t'impl': 'pipeline' or 'tryEach' or 'waterfall'\r\n * \t\t\t'uarg': the arg passed to each func for 'pipeline'\r\n * \t\t\t}\r\n * \t\t'stop_when': 'error' or 'success'\r\n * \t\t'res_type': 'values' or 'arrays' or 'rv'\r\n * \t}\r\n *\r\n * In the object, 'res_type' is used to indicate what the type of the result\r\n * values(s) is that we pass to the final callback. We secondarily use\r\n * 'args.impl' to adjust this behavior in an implementation-specific way. For\r\n * example, 'tryEach' only returns an array if it has more than 1 result passed\r\n * to the final callback. Otherwise, it passes a solitary value to the final\r\n * callback.\r\n *\r\n * In case it's not clear, 'rv' in the `res_type` member, is just the\r\n * result-value that we also return. This is the convention in functions that\r\n * originated in `vasync` (pipeline), but not in functions that originated in\r\n * `async` (waterfall, tryEach).\r\n */\r\nfunction waterfall_impl(opts)\r\n{\r\n\tmod_assert.ok(typeof (opts) === 'object');\r\n\tvar rv, current, next;\r\n\tvar funcs = opts.funcs;\r\n\tvar callback = opts.callback;\r\n\r\n\tmod_assert.ok(Array.isArray(funcs),\r\n\t    '\"opts.funcs\" must be specified and must be an array');\r\n\tmod_assert.ok(arguments.length == 1,\r\n\t    'Function \"waterfall_impl\" must take only 1 arg');\r\n\tmod_assert.ok(opts.res_type === 'values' ||\r\n\t    opts.res_type === 'array' || opts.res_type == 'rv',\r\n\t    '\"opts.res_type\" must either be \"values\", \"array\", or \"rv\"');\r\n\tmod_assert.ok(opts.stop_when === 'error' ||\r\n\t    opts.stop_when === 'success',\r\n\t    '\"opts.stop_when\" must either be \"error\" or \"success\"');\r\n\tmod_assert.ok(opts.args.impl === 'pipeline' ||\r\n\t    opts.args.impl === 'waterfall' || opts.args.impl === 'tryEach',\r\n\t    '\"opts.args.impl\" must be \"pipeline\", \"waterfall\", or \"tryEach\"');\r\n\tif (opts.args.impl === 'pipeline') {\r\n\t\tmod_assert.ok(typeof (opts.args.uarg) !== undefined,\r\n\t\t    '\"opts.args.uarg\" should be defined when pipeline is used');\r\n\t}\r\n\r\n\trv = {\r\n\t    'operations': funcs.map(function (func) {\r\n\t        return ({\r\n\t\t    'func': func,\r\n\t\t    'funcname': func.name || '(anon)',\r\n\t\t    'status': 'waiting'\r\n\t\t});\r\n\t    }),\r\n\t    'successes': [],\r\n\t    'ndone': 0,\r\n\t    'nerrors': 0\r\n\t};\r\n\r\n\tif (funcs.length === 0) {\r\n\t\tif (callback)\r\n\t\t\tsetImmediate(function () {\r\n\t\t\t\tvar res = (opts.args.impl === 'pipeline') ? rv\r\n\t\t\t\t    : undefined;\r\n\t\t\t\tcallback(null, res);\r\n\t\t\t});\r\n\t\treturn (rv);\r\n\t}\r\n\r\n\tnext = function (idx, err) {\r\n\t\t/*\r\n\t\t * Note that nfunc_args contains the args we will pass to the\r\n\t\t * next func in the func-list the user gave us. Except for\r\n\t\t * 'tryEach', which passes cb's. However, it will pass\r\n\t\t * 'nfunc_args' to its final callback -- see below.\r\n\t\t */\r\n\t\tvar res_key, nfunc_args, entry, nextentry;\r\n\r\n\t\tif (err === undefined)\r\n\t\t\terr = null;\r\n\r\n\t\tif (idx != current) {\r\n\t\t\tthrow (new mod_verror.VError(\r\n\t\t\t    'vasync.waterfall: function %d (\"%s\") invoked ' +\r\n\t\t\t    'its callback twice', idx,\r\n\t\t\t    rv['operations'][idx].funcname));\r\n\t\t}\r\n\r\n\t\tmod_assert.equal(idx, rv['ndone'],\r\n\t\t    'idx should be equal to ndone');\r\n\t\tentry = rv['operations'][rv['ndone']++];\r\n\t\tif (opts.args.impl === 'tryEach' ||\r\n\t\t    opts.args.impl === 'waterfall') {\r\n\t\t\tnfunc_args = Array.prototype.slice.call(arguments, 2);\r\n\t\t\tres_key = 'results';\r\n\t\t\tentry['results'] = nfunc_args;\r\n\t\t} else if (opts.args.impl === 'pipeline') {\r\n\t\t\tnfunc_args = [ opts.args.uarg ];\r\n\t\t\tres_key = 'result';\r\n\t\t\tentry['result'] = arguments[2];\r\n\t\t}\r\n\r\n\t\tmod_assert.equal(entry['status'], 'pending',\r\n\t\t    'status should be pending');\r\n\t\tentry['status'] = err ? 'fail' : 'ok';\r\n\t\tentry['err'] = err;\r\n\r\n\t\tif (err) {\r\n\t\t\trv['nerrors']++;\r\n\t\t} else {\r\n\t\t\trv['successes'].push(entry[res_key]);\r\n\t\t}\r\n\r\n\t\tif ((opts.stop_when === 'error' && err) ||\r\n\t\t    (opts.stop_when === 'success' &&\r\n\t\t    rv['successes'].length > 0) ||\r\n\t\t    rv['ndone'] == funcs.length) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tif (opts.res_type === 'values' ||\r\n\t\t\t\t    (opts.res_type === 'array' &&\r\n\t\t\t\t     nfunc_args.length <= 1)) {\r\n\t\t\t\t\tnfunc_args.unshift(err);\r\n\t\t\t\t\tcallback.apply(null, nfunc_args);\r\n\t\t\t\t} else if (opts.res_type === 'array') {\r\n\t\t\t\t\tcallback(err, nfunc_args);\r\n\t\t\t\t} else if (opts.res_type === 'rv') {\r\n\t\t\t\t\tcallback(err, rv);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnextentry = rv['operations'][rv['ndone']];\r\n\t\t\tnextentry['status'] = 'pending';\r\n\t\t\tcurrent++;\r\n\t\t\tnfunc_args.push(next.bind(null, current));\r\n\t\t\tsetImmediate(function () {\r\n\t\t\t\tvar nfunc = nextentry['func'];\r\n\t\t\t\t/*\r\n\t\t\t\t * At first glance it may seem like this branch\r\n\t\t\t\t * is superflous with the code above that\r\n\t\t\t\t * branches on `opts.args.impl`. It may also\r\n\t\t\t\t * seem like calling `nfunc.apply` is\r\n\t\t\t\t * sufficient for both cases (after all we\r\n\t\t\t\t * pushed `next.bind(null, current)` to the\r\n\t\t\t\t * `nfunc_args` array), before we call\r\n\t\t\t\t * `setImmediate()`. However, this is not the\r\n\t\t\t\t * case, because the interface exposed by\r\n\t\t\t\t * tryEach is different from the others. The\r\n\t\t\t\t * others pass argument(s) from task to task.\r\n\t\t\t\t * tryEach passes nothing but a callback\r\n\t\t\t\t * (`next.bind` below). However, the callback\r\n\t\t\t\t * itself _can_ be called with one or more\r\n\t\t\t\t * results, which we collect into `nfunc_args`\r\n\t\t\t\t * using the aformentioned `opts.args.impl`\r\n\t\t\t\t * branch above, and which we pass to the\r\n\t\t\t\t * callback via the `opts.res_type` branch\r\n\t\t\t\t * above (where res_type is set to 'array').\r\n\t\t\t\t */\r\n\t\t\t\tif (opts.args.impl !== 'tryEach') {\r\n\t\t\t\t\tnfunc.apply(null, nfunc_args);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnfunc(next.bind(null, current));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trv['operations'][0]['status'] = 'pending';\r\n\tcurrent = 0;\r\n\tif (opts.args.impl !== 'pipeline') {\r\n\t\tfuncs[0](next.bind(null, current));\r\n\t} else {\r\n\t\tfuncs[0](opts.args.uarg, next.bind(null, current));\r\n\t}\r\n\treturn (rv);\r\n}\r\n", "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\n\r\nfunction isArray(arg) {\r\n  if (Array.isArray) {\r\n    return Array.isArray(arg);\r\n  }\r\n  return objectToString(arg) === '[object Array]';\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\nexports.isNull = isNull;\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\nexports.isSymbol = isSymbol;\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\n\r\nfunction isRegExp(re) {\r\n  return objectToString(re) === '[object RegExp]';\r\n}\r\nexports.isRegExp = isRegExp;\r\n\r\nfunction isObject(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\nexports.isObject = isObject;\r\n\r\nfunction isDate(d) {\r\n  return objectToString(d) === '[object Date]';\r\n}\r\nexports.isDate = isDate;\r\n\r\nfunction isError(e) {\r\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\nexports.isError = isError;\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\nexports.isPrimitive = isPrimitive;\r\n\r\nexports.isBuffer = Buffer.isBuffer;\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n", "/*\r\n * verror.js: richer JavaScript errors\r\n */\r\n\r\nvar mod_assertplus = require('assert-plus');\r\nvar mod_util = require('util');\r\n\r\nvar mod_extsprintf = require('extsprintf');\r\nvar mod_isError = require('core-util-is').isError;\r\nvar sprintf = mod_extsprintf.sprintf;\r\n\r\n/*\r\n * Public interface\r\n */\r\n\r\n/* So you can 'var VError = require('verror')' */\r\nmodule.exports = VError;\r\n/* For compatibility */\r\nVError.VError = VError;\r\n/* Other exported classes */\r\nVError.SError = SError;\r\nVError.WError = WError;\r\nVError.MultiError = MultiError;\r\n\r\n/*\r\n * Common function used to parse constructor arguments for VError, WError, and\r\n * SError.  Named arguments to this function:\r\n *\r\n *     strict\t\tforce strict interpretation of sprintf arguments, even\r\n *     \t\t\tif the options in \"argv\" don't say so\r\n *\r\n *     argv\t\terror's constructor arguments, which are to be\r\n *     \t\t\tinterpreted as described in README.md.  For quick\r\n *     \t\t\treference, \"argv\" has one of the following forms:\r\n *\r\n *          [ sprintf_args... ]           (argv[0] is a string)\r\n *          [ cause, sprintf_args... ]    (argv[0] is an Error)\r\n *          [ options, sprintf_args... ]  (argv[0] is an object)\r\n *\r\n * This function normalizes these forms, producing an object with the following\r\n * properties:\r\n *\r\n *    options           equivalent to \"options\" in third form.  This will never\r\n *    \t\t\tbe a direct reference to what the caller passed in\r\n *    \t\t\t(i.e., it may be a shallow copy), so it can be freely\r\n *    \t\t\tmodified.\r\n *\r\n *    shortmessage      result of sprintf(sprintf_args), taking options.strict\r\n *    \t\t\tinto account as described in README.md.\r\n */\r\nfunction parseConstructorArguments(args)\r\n{\r\n\tvar argv, options, sprintf_args, shortmessage, k;\r\n\r\n\tmod_assertplus.object(args, 'args');\r\n\tmod_assertplus.bool(args.strict, 'args.strict');\r\n\tmod_assertplus.array(args.argv, 'args.argv');\r\n\targv = args.argv;\r\n\r\n\t/*\r\n\t * First, figure out which form of invocation we've been given.\r\n\t */\r\n\tif (argv.length === 0) {\r\n\t\toptions = {};\r\n\t\tsprintf_args = [];\r\n\t} else if (mod_isError(argv[0])) {\r\n\t\toptions = { 'cause': argv[0] };\r\n\t\tsprintf_args = argv.slice(1);\r\n\t} else if (typeof (argv[0]) === 'object') {\r\n\t\toptions = {};\r\n\t\tfor (k in argv[0]) {\r\n\t\t\toptions[k] = argv[0][k];\r\n\t\t}\r\n\t\tsprintf_args = argv.slice(1);\r\n\t} else {\r\n\t\tmod_assertplus.string(argv[0],\r\n\t\t    'first argument to VError, SError, or WError ' +\r\n\t\t    'constructor must be a string, object, or Error');\r\n\t\toptions = {};\r\n\t\tsprintf_args = argv;\r\n\t}\r\n\r\n\t/*\r\n\t * Now construct the error's message.\r\n\t *\r\n\t * extsprintf (which we invoke here with our caller's arguments in order\r\n\t * to construct this Error's message) is strict in its interpretation of\r\n\t * values to be processed by the \"%s\" specifier.  The value passed to\r\n\t * extsprintf must actually be a string or something convertible to a\r\n\t * String using .toString().  Passing other values (notably \"null\" and\r\n\t * \"undefined\") is considered a programmer error.  The assumption is\r\n\t * that if you actually want to print the string \"null\" or \"undefined\",\r\n\t * then that's easy to do that when you're calling extsprintf; on the\r\n\t * other hand, if you did NOT want that (i.e., there's actually a bug\r\n\t * where the program assumes some variable is non-null and tries to\r\n\t * print it, which might happen when constructing a packet or file in\r\n\t * some specific format), then it's better to stop immediately than\r\n\t * produce bogus output.\r\n\t *\r\n\t * However, sometimes the bug is only in the code calling VError, and a\r\n\t * programmer might prefer to have the error message contain \"null\" or\r\n\t * \"undefined\" rather than have the bug in the error path crash the\r\n\t * program (making the first bug harder to identify).  For that reason,\r\n\t * by default VError converts \"null\" or \"undefined\" arguments to their\r\n\t * string representations and passes those to extsprintf.  Programmers\r\n\t * desiring the strict behavior can use the SError class or pass the\r\n\t * \"strict\" option to the VError constructor.\r\n\t */\r\n\tmod_assertplus.object(options);\r\n\tif (!options.strict && !args.strict) {\r\n\t\tsprintf_args = sprintf_args.map(function (a) {\r\n\t\t\treturn (a === null ? 'null' :\r\n\t\t\t    a === undefined ? 'undefined' : a);\r\n\t\t});\r\n\t}\r\n\r\n\tif (sprintf_args.length === 0) {\r\n\t\tshortmessage = '';\r\n\t} else {\r\n\t\tshortmessage = sprintf.apply(null, sprintf_args);\r\n\t}\r\n\r\n\treturn ({\r\n\t    'options': options,\r\n\t    'shortmessage': shortmessage\r\n\t});\r\n}\r\n\r\n/*\r\n * See README.md for reference documentation.\r\n */\r\nfunction VError()\r\n{\r\n\tvar args, obj, parsed, cause, ctor, message, k;\r\n\r\n\targs = Array.prototype.slice.call(arguments, 0);\r\n\r\n\t/*\r\n\t * This is a regrettable pattern, but JavaScript's built-in Error class\r\n\t * is defined to work this way, so we allow the constructor to be called\r\n\t * without \"new\".\r\n\t */\r\n\tif (!(this instanceof VError)) {\r\n\t\tobj = Object.create(VError.prototype);\r\n\t\tVError.apply(obj, arguments);\r\n\t\treturn (obj);\r\n\t}\r\n\r\n\t/*\r\n\t * For convenience and backwards compatibility, we support several\r\n\t * different calling forms.  Normalize them here.\r\n\t */\r\n\tparsed = parseConstructorArguments({\r\n\t    'argv': args,\r\n\t    'strict': false\r\n\t});\r\n\r\n\t/*\r\n\t * If we've been given a name, apply it now.\r\n\t */\r\n\tif (parsed.options.name) {\r\n\t\tmod_assertplus.string(parsed.options.name,\r\n\t\t    'error\\'s \"name\" must be a string');\r\n\t\tthis.name = parsed.options.name;\r\n\t}\r\n\r\n\t/*\r\n\t * For debugging, we keep track of the original short message (attached\r\n\t * this Error particularly) separately from the complete message (which\r\n\t * includes the messages of our cause chain).\r\n\t */\r\n\tthis.jse_shortmsg = parsed.shortmessage;\r\n\tmessage = parsed.shortmessage;\r\n\r\n\t/*\r\n\t * If we've been given a cause, record a reference to it and update our\r\n\t * message appropriately.\r\n\t */\r\n\tcause = parsed.options.cause;\r\n\tif (cause) {\r\n\t\tmod_assertplus.ok(mod_isError(cause), 'cause is not an Error');\r\n\t\tthis.jse_cause = cause;\r\n\r\n\t\tif (!parsed.options.skipCauseMessage) {\r\n\t\t\tmessage += ': ' + cause.message;\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * If we've been given an object with properties, shallow-copy that\r\n\t * here.  We don't want to use a deep copy in case there are non-plain\r\n\t * objects here, but we don't want to use the original object in case\r\n\t * the caller modifies it later.\r\n\t */\r\n\tthis.jse_info = {};\r\n\tif (parsed.options.info) {\r\n\t\tfor (k in parsed.options.info) {\r\n\t\t\tthis.jse_info[k] = parsed.options.info[k];\r\n\t\t}\r\n\t}\r\n\r\n\tthis.message = message;\r\n\tError.call(this, message);\r\n\r\n\tif (Error.captureStackTrace) {\r\n\t\tctor = parsed.options.constructorOpt || this.constructor;\r\n\t\tError.captureStackTrace(this, ctor);\r\n\t}\r\n\r\n\treturn (this);\r\n}\r\n\r\nmod_util.inherits(VError, Error);\r\nVError.prototype.name = 'VError';\r\n\r\nVError.prototype.toString = function ve_toString()\r\n{\r\n\tvar str = (this.hasOwnProperty('name') && this.name ||\r\n\t\tthis.constructor.name || this.constructor.prototype.name);\r\n\tif (this.message)\r\n\t\tstr += ': ' + this.message;\r\n\r\n\treturn (str);\r\n};\r\n\r\n/*\r\n * This method is provided for compatibility.  New callers should use\r\n * VError.cause() instead.  That method also uses the saner `null` return value\r\n * when there is no cause.\r\n */\r\nVError.prototype.cause = function ve_cause()\r\n{\r\n\tvar cause = VError.cause(this);\r\n\treturn (cause === null ? undefined : cause);\r\n};\r\n\r\n/*\r\n * Static methods\r\n *\r\n * These class-level methods are provided so that callers can use them on\r\n * instances of Errors that are not VErrors.  New interfaces should be provided\r\n * only using static methods to eliminate the class of programming mistake where\r\n * people fail to check whether the Error object has the corresponding methods.\r\n */\r\n\r\nVError.cause = function (err)\r\n{\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\treturn (mod_isError(err.jse_cause) ? err.jse_cause : null);\r\n};\r\n\r\nVError.info = function (err)\r\n{\r\n\tvar rv, cause, k;\r\n\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\tcause = VError.cause(err);\r\n\tif (cause !== null) {\r\n\t\trv = VError.info(cause);\r\n\t} else {\r\n\t\trv = {};\r\n\t}\r\n\r\n\tif (typeof (err.jse_info) == 'object' && err.jse_info !== null) {\r\n\t\tfor (k in err.jse_info) {\r\n\t\t\trv[k] = err.jse_info[k];\r\n\t\t}\r\n\t}\r\n\r\n\treturn (rv);\r\n};\r\n\r\nVError.findCauseByName = function (err, name)\r\n{\r\n\tvar cause;\r\n\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\tmod_assertplus.string(name, 'name');\r\n\tmod_assertplus.ok(name.length > 0, 'name cannot be empty');\r\n\r\n\tfor (cause = err; cause !== null; cause = VError.cause(cause)) {\r\n\t\tmod_assertplus.ok(mod_isError(cause));\r\n\t\tif (cause.name == name) {\r\n\t\t\treturn (cause);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (null);\r\n};\r\n\r\nVError.hasCauseWithName = function (err, name)\r\n{\r\n\treturn (VError.findCauseByName(err, name) !== null);\r\n};\r\n\r\nVError.fullStack = function (err)\r\n{\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\r\n\tvar cause = VError.cause(err);\r\n\r\n\tif (cause) {\r\n\t\treturn (err.stack + '\\ncaused by: ' + VError.fullStack(cause));\r\n\t}\r\n\r\n\treturn (err.stack);\r\n};\r\n\r\nVError.errorFromList = function (errors)\r\n{\r\n\tmod_assertplus.arrayOfObject(errors, 'errors');\r\n\r\n\tif (errors.length === 0) {\r\n\t\treturn (null);\r\n\t}\r\n\r\n\terrors.forEach(function (e) {\r\n\t\tmod_assertplus.ok(mod_isError(e));\r\n\t});\r\n\r\n\tif (errors.length == 1) {\r\n\t\treturn (errors[0]);\r\n\t}\r\n\r\n\treturn (new MultiError(errors));\r\n};\r\n\r\nVError.errorForEach = function (err, func)\r\n{\r\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\r\n\tmod_assertplus.func(func, 'func');\r\n\r\n\tif (err instanceof MultiError) {\r\n\t\terr.errors().forEach(function iterError(e) { func(e); });\r\n\t} else {\r\n\t\tfunc(err);\r\n\t}\r\n};\r\n\r\n\r\n/*\r\n * SError is like VError, but stricter about types.  You cannot pass \"null\" or\r\n * \"undefined\" as string arguments to the formatter.\r\n */\r\nfunction SError()\r\n{\r\n\tvar args, obj, parsed, options;\r\n\r\n\targs = Array.prototype.slice.call(arguments, 0);\r\n\tif (!(this instanceof SError)) {\r\n\t\tobj = Object.create(SError.prototype);\r\n\t\tSError.apply(obj, arguments);\r\n\t\treturn (obj);\r\n\t}\r\n\r\n\tparsed = parseConstructorArguments({\r\n\t    'argv': args,\r\n\t    'strict': true\r\n\t});\r\n\r\n\toptions = parsed.options;\r\n\tVError.call(this, options, '%s', parsed.shortmessage);\r\n\r\n\treturn (this);\r\n}\r\n\r\n/*\r\n * We don't bother setting SError.prototype.name because once constructed,\r\n * SErrors are just like VErrors.\r\n */\r\nmod_util.inherits(SError, VError);\r\n\r\n\r\n/*\r\n * Represents a collection of errors for the purpose of consumers that generally\r\n * only deal with one error.  Callers can extract the individual errors\r\n * contained in this object, but may also just treat it as a normal single\r\n * error, in which case a summary message will be printed.\r\n */\r\nfunction MultiError(errors)\r\n{\r\n\tmod_assertplus.array(errors, 'list of errors');\r\n\tmod_assertplus.ok(errors.length > 0, 'must be at least one error');\r\n\tthis.ase_errors = errors;\r\n\r\n\tVError.call(this, {\r\n\t    'cause': errors[0]\r\n\t}, 'first of %d error%s', errors.length, errors.length == 1 ? '' : 's');\r\n}\r\n\r\nmod_util.inherits(MultiError, VError);\r\nMultiError.prototype.name = 'MultiError';\r\n\r\nMultiError.prototype.errors = function me_errors()\r\n{\r\n\treturn (this.ase_errors.slice(0));\r\n};\r\n\r\n\r\n/*\r\n * See README.md for reference details.\r\n */\r\nfunction WError()\r\n{\r\n\tvar args, obj, parsed, options;\r\n\r\n\targs = Array.prototype.slice.call(arguments, 0);\r\n\tif (!(this instanceof WError)) {\r\n\t\tobj = Object.create(WError.prototype);\r\n\t\tWError.apply(obj, args);\r\n\t\treturn (obj);\r\n\t}\r\n\r\n\tparsed = parseConstructorArguments({\r\n\t    'argv': args,\r\n\t    'strict': false\r\n\t});\r\n\r\n\toptions = parsed.options;\r\n\toptions['skipCauseMessage'] = true;\r\n\tVError.call(this, options, '%s', parsed.shortmessage);\r\n\r\n\treturn (this);\r\n}\r\n\r\nmod_util.inherits(WError, VError);\r\nWError.prototype.name = 'WError';\r\n\r\nWError.prototype.toString = function we_toString()\r\n{\r\n\tvar str = (this.hasOwnProperty('name') && this.name ||\r\n\t\tthis.constructor.name || this.constructor.prototype.name);\r\n\tif (this.message)\r\n\t\tstr += ': ' + this.message;\r\n\tif (this.jse_cause && this.jse_cause.message)\r\n\t\tstr += '; caused by ' + this.jse_cause.toString();\r\n\r\n\treturn (str);\r\n};\r\n\r\n/*\r\n * For purely historical reasons, WError's cause() function allows you to set\r\n * the cause.\r\n */\r\nWError.prototype.cause = function we_cause(c)\r\n{\r\n\tif (mod_isError(c))\r\n\t\tthis.jse_cause = c;\r\n\r\n\treturn (this.jse_cause);\r\n};\r\n", "'use strict'\n\nconst EventEmitter = require('events').EventEmitter\n\n/**\n * A CorkedEmitter is a variant of an EventEmitter where events emitted\n *  wait for the appearance of the first listener of any kind. That is,\n *  a CorkedEmitter will store all .emit()s it receives, to be replayed\n *  later when an .on() is applied.\n * It is meant for situations where the consumers of the emitter are\n *  unable to register listeners right away, and cannot afford to miss\n *  any events emitted from the start.\n * Note that, whenever the first emitter (for any event) appears,\n *  the emitter becomes uncorked and works as usual for ALL events, and\n *  will not cache anything anymore. This is necessary to avoid\n *  re-ordering emits - either everything is being buffered, or nothing.\n */\nfunction CorkedEmitter () {\n  const self = this\n  EventEmitter.call(self)\n  /**\n     * An array of arguments objects (array-likes) to emit on open.\n     */\n  self._outstandingEmits = []\n  /**\n     * Whether the normal flow of emits is restored yet.\n     */\n  self._opened = false\n  // When the first listener appears, we enqueue an opening.\n  // It is not done immediately, so that other listeners can be\n  //  registered in the same critical section.\n  self.once('newListener', function () {\n    setImmediate(function releaseStoredEvents () {\n      self._opened = true\n      self._outstandingEmits.forEach(function (args) {\n        self.emit.apply(self, args)\n      })\n    })\n  })\n}\nCorkedEmitter.prototype = Object.create(EventEmitter.prototype)\nCorkedEmitter.prototype.emit = function emit (eventName) {\n  if (this._opened || eventName === 'newListener') {\n    EventEmitter.prototype.emit.apply(this, arguments)\n  } else {\n    this._outstandingEmits.push(arguments)\n  }\n}\n\nmodule.exports = CorkedEmitter\n", "'use strict'\n\nconst EventEmitter = require('events').EventEmitter\nconst util = require('util')\n\nconst assert = require('assert-plus')\n\n// var dn = require('../dn')\n// var messages = require('../messages/index')\n// var Protocol = require('../protocol')\nconst PagedControl = require('../controls/paged_results_control.js')\n\nconst CorkedEmitter = require('../corked_emitter.js')\n\n/// --- API\n\n/**\n * Handler object for paged search operations.\n *\n * Provided to consumers in place of the normal search EventEmitter it adds the\n * following new events:\n * 1. page      - Emitted whenever the end of a result page is encountered.\n *                If this is the last page, 'end' will also be emitted.\n *                The event passes two arguments:\n *                1. The result object (similar to 'end')\n *                2. A callback function optionally used to continue the search\n *                   operation if the pagePause option was specified during\n *                   initialization.\n * 2. pageError - Emitted if the server does not support paged search results\n *                If there are no listeners for this event, the 'error' event\n *                will be emitted (and 'end' will not be).  By listening to\n *                'pageError', a successful search that lacks paging will be\n *                able to emit 'end'.\n */\nfunction SearchPager (opts) {\n  assert.object(opts)\n  assert.func(opts.callback)\n  assert.number(opts.pageSize)\n  assert.func(opts.sendRequest)\n\n  CorkedEmitter.call(this, {})\n\n  this.callback = opts.callback\n  this.controls = opts.controls\n  this.pageSize = opts.pageSize\n  this.pagePause = opts.pagePause\n  this.sendRequest = opts.sendRequest\n\n  this.controls.forEach(function (control) {\n    if (control.type === PagedControl.OID) {\n      // The point of using SearchPager is not having to do this.\n      // Toss an error if the pagedResultsControl is present\n      throw new Error('redundant pagedResultControl')\n    }\n  })\n\n  this.finished = false\n  this.started = false\n\n  const emitter = new EventEmitter()\n  emitter.on('searchRequest', this.emit.bind(this, 'searchRequest'))\n  emitter.on('searchEntry', this.emit.bind(this, 'searchEntry'))\n  emitter.on('end', this._onEnd.bind(this))\n  emitter.on('error', this._onError.bind(this))\n  this.childEmitter = emitter\n}\nutil.inherits(SearchPager, CorkedEmitter)\nmodule.exports = SearchPager\n\n/**\n * Start the paged search.\n */\nSearchPager.prototype.begin = function begin () {\n  // Starting first page\n  this._nextPage(null)\n}\n\nSearchPager.prototype._onEnd = function _onEnd (res) {\n  const self = this\n  let cookie = null\n  res.controls.forEach(function (control) {\n    if (control.type === PagedControl.OID) {\n      cookie = control.value.cookie\n    }\n  })\n  // Pass a noop callback by default for page events\n  const nullCb = function () { }\n\n  if (cookie === null) {\n    // paged search not supported\n    this.finished = true\n    this.emit('page', res, nullCb)\n    const err = new Error('missing paged control')\n    err.name = 'PagedError'\n    if (this.listeners('pageError').length > 0) {\n      this.emit('pageError', err)\n      // If the consumer as subscribed to pageError, SearchPager is absolved\n      // from deliverying the fault via the 'error' event.  Emitting an 'end'\n      // event after 'error' breaks the contract that the standard client\n      // provides, so it's only a possibility if 'pageError' is used instead.\n      this.emit('end', res)\n    } else {\n      this.emit('error', err)\n      // No end event possible per explaination above.\n    }\n    return\n  }\n\n  if (cookie.length === 0) {\n    // end of paged results\n    this.finished = true\n    this.emit('page', nullCb)\n    this.emit('end', res)\n  } else {\n    if (this.pagePause) {\n      // Wait to fetch next page until callback is invoked\n      // Halt page fetching if called with error\n      this.emit('page', res, function (err) {\n        if (!err) {\n          self._nextPage(cookie)\n        } else {\n          // the paged search has been canceled so emit an end\n          self.emit('end', res)\n        }\n      })\n    } else {\n      this.emit('page', res, nullCb)\n      this._nextPage(cookie)\n    }\n  }\n}\n\nSearchPager.prototype._onError = function _onError (err) {\n  this.finished = true\n  this.emit('error', err)\n}\n\n/**\n * Initiate a search for the next page using the returned cookie value.\n */\nSearchPager.prototype._nextPage = function _nextPage (cookie) {\n  const controls = this.controls.slice(0)\n  controls.push(new PagedControl({\n    value: {\n      size: this.pageSize,\n      cookie: cookie\n    }\n  }))\n\n  this.sendRequest(controls, this.childEmitter, this._sendCallback.bind(this))\n}\n\n/**\n * Callback provided to the client API for successful transmission.\n */\nSearchPager.prototype._sendCallback = function _sendCallback (err) {\n  if (err) {\n    this.finished = true\n    if (!this.started) {\n      // EmitSend error during the first page, bail via callback\n      this.callback(err, null)\n    } else {\n      this.emit('error', err)\n    }\n  } else {\n    // search successfully send\n    if (!this.started) {\n      this.started = true\n      // send self as emitter as the client would\n      this.callback(null, this)\n    }\n  }\n}\n", "'use strict'\n\nconst requestQueueFactory = require('./request-queue')\nconst messageTrackerFactory = require('./message-tracker')\nconst { MAX_MSGID } = require('./constants')\n\nconst EventEmitter = require('events').EventEmitter\nconst net = require('net')\nconst tls = require('tls')\nconst util = require('util')\n\nconst once = require('once')\nconst backoff = require('backoff')\nconst vasync = require('vasync')\nconst assert = require('assert-plus')\nconst VError = require('verror').VError\n\nconst Attribute = require('../attribute')\nconst Change = require('../change')\nconst Control = require('../controls/index').Control\nconst SearchPager = require('./search_pager')\nconst Protocol = require('../protocol')\nconst dn = require('../dn')\nconst errors = require('../errors')\nconst filters = require('../filters')\nconst messages = require('../messages')\nconst url = require('../url')\nconst CorkedEmitter = require('../corked_emitter')\n\n/// --- Globals\n\nconst AbandonRequest = messages.AbandonRequest\nconst AddRequest = messages.AddRequest\nconst BindRequest = messages.BindRequest\nconst CompareRequest = messages.CompareRequest\nconst DeleteRequest = messages.DeleteRequest\nconst ExtendedRequest = messages.ExtendedRequest\nconst ModifyRequest = messages.ModifyRequest\nconst ModifyDNRequest = messages.ModifyDNRequest\nconst SearchRequest = messages.SearchRequest\nconst UnbindRequest = messages.UnbindRequest\nconst UnbindResponse = messages.UnbindResponse\n\nconst LDAPResult = messages.LDAPResult\nconst SearchEntry = messages.SearchEntry\nconst SearchReference = messages.SearchReference\n// var SearchResponse = messages.SearchResponse\nconst Parser = messages.Parser\n\nconst PresenceFilter = filters.PresenceFilter\n\nconst ConnectionError = errors.ConnectionError\n\nconst CMP_EXPECT = [errors.LDAP_COMPARE_TRUE, errors.LDAP_COMPARE_FALSE]\n\n// node 0.6 got rid of FDs, so make up a client id for logging\nlet CLIENT_ID = 0\n\n/// --- Internal Helpers\n\nfunction nextClientId () {\n  if (++CLIENT_ID === MAX_MSGID) { return 1 }\n\n  return CLIENT_ID\n}\n\nfunction validateControls (controls) {\n  if (Array.isArray(controls)) {\n    controls.forEach(function (c) {\n      if (!(c instanceof Control)) { throw new TypeError('controls must be [Control]') }\n    })\n  } else if (controls instanceof Control) {\n    controls = [controls]\n  } else {\n    throw new TypeError('controls must be [Control]')\n  }\n\n  return controls\n}\n\nfunction ensureDN (input, strict) {\n  if (dn.DN.isDN(input)) {\n    return dn\n  } else if (strict) {\n    return dn.parse(input)\n  } else if (typeof (input) === 'string') {\n    return input\n  } else {\n    throw new Error('invalid DN')\n  }\n}\n\n/// --- API\n\n/**\n * Constructs a new client.\n *\n * The options object is required, and must contain either a URL (string) or\n * a socketPath (string); the socketPath is only if you want to talk to an LDAP\n * server over a Unix Domain Socket.  Additionally, you can pass in a bunyan\n * option that is the result of `new Logger()`, presumably after you've\n * configured it.\n *\n * @param {Object} options must have either url or socketPath.\n * @throws {TypeError} on bad input.\n */\nfunction Client (options) {\n  assert.ok(options)\n\n  EventEmitter.call(this, options)\n\n  const self = this\n  this.urls = options.url ? [].concat(options.url).map(url.parse) : []\n  this._nextServer = 0\n  // updated in connectSocket() after each connect\n  this.host = undefined\n  this.port = undefined\n  this.secure = undefined\n  this.url = undefined\n  this.tlsOptions = options.tlsOptions\n  this.socketPath = options.socketPath || false\n\n  this.log = options.log.child({ clazz: 'Client' }, true)\n\n  this.timeout = parseInt((options.timeout || 0), 10)\n  this.connectTimeout = parseInt((options.connectTimeout || 0), 10)\n  this.idleTimeout = parseInt((options.idleTimeout || 0), 10)\n  if (options.reconnect) {\n    // Fall back to defaults if options.reconnect === true\n    const rOpts = (typeof (options.reconnect) === 'object')\n      ? options.reconnect\n      : {}\n    this.reconnect = {\n      initialDelay: parseInt(rOpts.initialDelay || 100, 10),\n      maxDelay: parseInt(rOpts.maxDelay || 10000, 10),\n      failAfter: parseInt(rOpts.failAfter, 10) || Infinity\n    }\n  }\n  this.strictDN = (options.strictDN !== undefined) ? options.strictDN : true\n\n  this.queue = requestQueueFactory({\n    size: parseInt((options.queueSize || 0), 10),\n    timeout: parseInt((options.queueTimeout || 0), 10)\n  })\n  if (options.queueDisable) {\n    this.queue.freeze()\n  }\n\n  // Implicitly configure setup action to bind the client if bindDN and\n  // bindCredentials are passed in.  This will more closely mimic PooledClient\n  // auto-login behavior.\n  if (options.bindDN !== undefined &&\n      options.bindCredentials !== undefined) {\n    this.on('setup', function (clt, cb) {\n      clt.bind(options.bindDN, options.bindCredentials, function (err) {\n        if (err) {\n          if (self._socket) {\n            self._socket.destroy()\n          }\n          self.emit('error', err)\n        }\n        cb(err)\n      })\n    })\n  }\n\n  this._socket = null\n  this.connected = false\n  this.connect()\n}\nutil.inherits(Client, EventEmitter)\nmodule.exports = Client\n\n/**\n * Sends an abandon request to the LDAP server.\n *\n * The callback will be invoked as soon as the data is flushed out to the\n * network, as there is never a response from abandon.\n *\n * @param {Number} messageID the messageID to abandon.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.abandon = function abandon (messageID, controls, callback) {\n  assert.number(messageID, 'messageID')\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  const req = new AbandonRequest({\n    abandonID: messageID,\n    controls: controls\n  })\n\n  return this._send(req, 'abandon', null, callback)\n}\n\n/**\n * Adds an entry to the LDAP server.\n *\n * Entry can be either [Attribute] or a plain JS object where the\n * values are either a plain value or an array of values.  Any value (that's\n * not an array) will get converted to a string, so keep that in mind.\n *\n * @param {String} name the DN of the entry to add.\n * @param {Object} entry an array of Attributes to be added or a JS object.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.add = function add (name, entry, controls, callback) {\n  assert.ok(name !== undefined, 'name')\n  assert.object(entry, 'entry')\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  if (Array.isArray(entry)) {\n    entry.forEach(function (a) {\n      if (!Attribute.isAttribute(a)) { throw new TypeError('entry must be an Array of Attributes') }\n    })\n  } else {\n    const save = entry\n\n    entry = []\n    Object.keys(save).forEach(function (k) {\n      const attr = new Attribute({ type: k })\n      if (Array.isArray(save[k])) {\n        save[k].forEach(function (v) {\n          attr.addValue(v.toString())\n        })\n      } else if (Buffer.isBuffer(save[k])) {\n        attr.addValue(save[k])\n      } else {\n        attr.addValue(save[k].toString())\n      }\n      entry.push(attr)\n    })\n  }\n\n  const req = new AddRequest({\n    entry: ensureDN(name, this.strictDN),\n    attributes: entry,\n    controls: controls\n  })\n\n  return this._send(req, [errors.LDAP_SUCCESS], null, callback)\n}\n\n/**\n * Performs a simple authentication against the server.\n *\n * @param {String} name the DN to bind as.\n * @param {String} credentials the userPassword associated with name.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.bind = function bind (name,\n  credentials,\n  controls,\n  callback,\n  _bypass) {\n  if (typeof (name) !== 'string' && !(name instanceof dn.DN)) { throw new TypeError('name (string) required') }\n  assert.optionalString(credentials, 'credentials')\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  const req = new BindRequest({\n    name: name || '',\n    authentication: 'Simple',\n    credentials: credentials || '',\n    controls: controls\n  })\n\n  // Connection errors will be reported to the bind callback too (useful when the LDAP server is not available)\n  const self = this\n  function callbackWrapper (err, ret) {\n    self.removeListener('connectError', callbackWrapper)\n    callback(err, ret)\n  }\n  this.addListener('connectError', callbackWrapper)\n\n  return this._send(req, [errors.LDAP_SUCCESS], null, callbackWrapper, _bypass)\n}\n\n/**\n * Compares an attribute/value pair with an entry on the LDAP server.\n *\n * @param {String} name the DN of the entry to compare attributes with.\n * @param {String} attr name of an attribute to check.\n * @param {String} value value of an attribute to check.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, boolean, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.compare = function compare (name,\n  attr,\n  value,\n  controls,\n  callback) {\n  assert.ok(name !== undefined, 'name')\n  assert.string(attr, 'attr')\n  assert.string(value, 'value')\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  const req = new CompareRequest({\n    entry: ensureDN(name, this.strictDN),\n    attribute: attr,\n    value: value,\n    controls: controls\n  })\n\n  return this._send(req, CMP_EXPECT, null, function (err, res) {\n    if (err) { return callback(err) }\n\n    return callback(null, (res.status === errors.LDAP_COMPARE_TRUE), res)\n  })\n}\n\n/**\n * Deletes an entry from the LDAP server.\n *\n * @param {String} name the DN of the entry to delete.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.del = function del (name, controls, callback) {\n  assert.ok(name !== undefined, 'name')\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  const req = new DeleteRequest({\n    entry: ensureDN(name, this.strictDN),\n    controls: controls\n  })\n\n  return this._send(req, [errors.LDAP_SUCCESS], null, callback)\n}\n\n/**\n * Performs an extended operation on the LDAP server.\n *\n * Pretty much none of the LDAP extended operations return an OID\n * (responseName), so I just don't bother giving it back in the callback.\n * It's on the third param in `res` if you need it.\n *\n * @param {String} name the OID of the extended operation to perform.\n * @param {String} value value to pass in for this operation.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, value, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.exop = function exop (name, value, controls, callback) {\n  assert.string(name, 'name')\n  if (typeof (value) === 'function') {\n    callback = value\n    controls = []\n    value = undefined\n  }\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  const req = new ExtendedRequest({\n    requestName: name,\n    requestValue: value,\n    controls: controls\n  })\n\n  return this._send(req, [errors.LDAP_SUCCESS], null, function (err, res) {\n    if (err) { return callback(err) }\n\n    return callback(null, res.responseValue || '', res)\n  })\n}\n\n/**\n * Performs an LDAP modify against the server.\n *\n * @param {String} name the DN of the entry to modify.\n * @param {Change} change update to perform (can be [Change]).\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.modify = function modify (name, change, controls, callback) {\n  assert.ok(name !== undefined, 'name')\n  assert.object(change, 'change')\n\n  const changes = []\n\n  function changeFromObject (obj) {\n    if (!obj.operation && !obj.type) { throw new Error('change.operation required') }\n    if (typeof (obj.modification) !== 'object') { throw new Error('change.modification (object) required') }\n\n    if (Object.keys(obj.modification).length === 2 &&\n        typeof (obj.modification.type) === 'string' &&\n        Array.isArray(obj.modification.vals)) {\n      // Use modification directly if it's already normalized:\n      changes.push(new Change({\n        operation: obj.operation || obj.type,\n        modification: obj.modification\n      }))\n    } else {\n      // Normalize the modification object\n      Object.keys(obj.modification).forEach(function (k) {\n        const mod = {}\n        mod[k] = obj.modification[k]\n        changes.push(new Change({\n          operation: obj.operation || obj.type,\n          modification: mod\n        }))\n      })\n    }\n  }\n\n  if (Change.isChange(change)) {\n    changes.push(change)\n  } else if (Array.isArray(change)) {\n    change.forEach(function (c) {\n      if (Change.isChange(c)) {\n        changes.push(c)\n      } else {\n        changeFromObject(c)\n      }\n    })\n  } else {\n    changeFromObject(change)\n  }\n\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  const req = new ModifyRequest({\n    object: ensureDN(name, this.strictDN),\n    changes: changes,\n    controls: controls\n  })\n\n  return this._send(req, [errors.LDAP_SUCCESS], null, callback)\n}\n\n/**\n * Performs an LDAP modifyDN against the server.\n *\n * This does not allow you to keep the old DN, as while the LDAP protocol\n * has a facility for that, it's stupid. Just Search/Add.\n *\n * This will automatically deal with \"new superior\" logic.\n *\n * @param {String} name the DN of the entry to modify.\n * @param {String} newName the new DN to move this entry to.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.modifyDN = function modifyDN (name,\n  newName,\n  controls,\n  callback) {\n  assert.ok(name !== undefined, 'name')\n  assert.string(newName, 'newName')\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback)\n\n  const DN = ensureDN(name)\n  // TODO: is non-strict handling desired here?\n  const newDN = dn.parse(newName)\n\n  const req = new ModifyDNRequest({\n    entry: DN,\n    deleteOldRdn: true,\n    controls: controls\n  })\n\n  if (newDN.length !== 1) {\n    req.newRdn = dn.parse(newDN.rdns.shift().toString())\n    req.newSuperior = newDN\n  } else {\n    req.newRdn = newDN\n  }\n\n  return this._send(req, [errors.LDAP_SUCCESS], null, callback)\n}\n\n/**\n * Performs an LDAP search against the server.\n *\n * Note that the defaults for options are a 'base' search, if that's what\n * you want you can just pass in a string for options and it will be treated\n * as the search filter.  Also, you can either pass in programatic Filter\n * objects or a filter string as the filter option.\n *\n * Note that this method is 'special' in that the callback 'res' param will\n * have two important events on it, namely 'entry' and 'end' that you can hook\n * to.  The former will emit a SearchEntry object for each record that comes\n * back, and the latter will emit a normal LDAPResult object.\n *\n * @param {String} base the DN in the tree to start searching at.\n * @param {Object} options parameters:\n *                           - {String} scope default of 'base'.\n *                           - {String} filter default of '(objectclass=*)'.\n *                           - {Array} attributes [string] to return.\n *                           - {Boolean} attrsOnly whether to return values.\n * @param {Control} controls (optional) either a Control or [Control].\n * @param {Function} callback of the form f(err, res).\n * @throws {TypeError} on invalid input.\n */\nClient.prototype.search = function search (base,\n  options,\n  controls,\n  callback,\n  _bypass) {\n  assert.ok(base !== undefined, 'search base')\n  if (Array.isArray(options) || (options instanceof Control)) {\n    controls = options\n    options = {}\n  } else if (typeof (options) === 'function') {\n    callback = options\n    controls = []\n    options = {\n      filter: new PresenceFilter({ attribute: 'objectclass' })\n    }\n  } else if (typeof (options) === 'string') {\n    options = { filter: filters.parseString(options) }\n  } else if (typeof (options) !== 'object') {\n    throw new TypeError('options (object) required')\n  }\n  if (typeof (options.filter) === 'string') {\n    options.filter = filters.parseString(options.filter)\n  } else if (!options.filter) {\n    options.filter = new PresenceFilter({ attribute: 'objectclass' })\n  } else if (!filters.isFilter(options.filter)) {\n    throw new TypeError('options.filter (Filter) required')\n  }\n  if (typeof (controls) === 'function') {\n    callback = controls\n    controls = []\n  } else {\n    controls = validateControls(controls)\n  }\n  assert.func(callback, 'callback')\n\n  if (options.attributes) {\n    if (!Array.isArray(options.attributes)) {\n      if (typeof (options.attributes) === 'string') {\n        options.attributes = [options.attributes]\n      } else {\n        throw new TypeError('options.attributes must be an Array of Strings')\n      }\n    }\n  }\n\n  const self = this\n  const baseDN = ensureDN(base, this.strictDN)\n\n  function sendRequest (ctrls, emitter, cb) {\n    const req = new SearchRequest({\n      baseObject: baseDN,\n      scope: options.scope || 'base',\n      filter: options.filter,\n      derefAliases: options.derefAliases || Protocol.NEVER_DEREF_ALIASES,\n      sizeLimit: options.sizeLimit || 0,\n      timeLimit: options.timeLimit || 10,\n      typesOnly: options.typesOnly || false,\n      attributes: options.attributes || [],\n      controls: ctrls\n    })\n\n    return self._send(req,\n      [errors.LDAP_SUCCESS],\n      emitter,\n      cb,\n      _bypass)\n  }\n\n  if (options.paged) {\n    // Perform automated search paging\n    const pageOpts = typeof (options.paged) === 'object' ? options.paged : {}\n    let size = 100 // Default page size\n    if (pageOpts.pageSize > 0) {\n      size = pageOpts.pageSize\n    } else if (options.sizeLimit > 1) {\n      // According to the RFC, servers should ignore the paging control if\n      // pageSize >= sizelimit.  Some might still send results, but it's safer\n      // to stay under that figure when assigning a default value.\n      size = options.sizeLimit - 1\n    }\n\n    const pager = new SearchPager({\n      callback: callback,\n      controls: controls,\n      pageSize: size,\n      pagePause: pageOpts.pagePause,\n      sendRequest: sendRequest\n    })\n    pager.begin()\n  } else {\n    sendRequest(controls, new CorkedEmitter(), callback)\n  }\n}\n\n/**\n * Unbinds this client from the LDAP server.\n *\n * Note that unbind does not have a response, so this callback is actually\n * optional; either way, the client is disconnected.\n *\n * @param {Function} callback of the form f(err).\n * @throws {TypeError} if you pass in callback as not a function.\n */\nClient.prototype.unbind = function unbind (callback) {\n  if (!callback) { callback = function () {} }\n\n  if (typeof (callback) !== 'function') { throw new TypeError('callback must be a function') }\n\n  // When the socket closes, it is useful to know whether it was due to a\n  // user-initiated unbind or something else.\n  this.unbound = true\n\n  if (!this._socket) { return callback() }\n\n  const req = new UnbindRequest()\n  return this._send(req, 'unbind', null, callback)\n}\n\n/**\n * Attempt to secure connection with StartTLS.\n */\nClient.prototype.starttls = function starttls (options,\n  controls,\n  callback,\n  _bypass) {\n  assert.optionalObject(options)\n  options = options || {}\n  callback = once(callback)\n  const self = this\n\n  if (this._starttls) {\n    return callback(new Error('STARTTLS already in progress or active'))\n  }\n\n  function onSend (sendErr, emitter) {\n    if (sendErr) {\n      callback(sendErr)\n      return\n    }\n    /*\n     * Now that the request has been sent, block all outgoing messages\n     * until an error is received or we successfully complete the setup.\n     */\n    // TODO: block traffic\n    self._starttls = {\n      started: true\n    }\n\n    emitter.on('error', function (err) {\n      self._starttls = null\n      callback(err)\n    })\n    emitter.on('end', function (_res) {\n      const sock = self._socket\n      /*\n       * Unplumb socket data during SSL negotiation.\n       * This will prevent the LDAP parser from stumbling over the TLS\n       * handshake and raising a ruckus.\n       */\n      sock.removeAllListeners('data')\n\n      options.socket = sock\n      const secure = tls.connect(options)\n      secure.once('secureConnect', function () {\n        /*\n         * Wire up 'data' and 'error' handlers like the normal socket.\n         * Handling 'end' events isn't necessary since the underlying socket\n         * will handle those.\n         */\n        secure.removeAllListeners('error')\n        secure.on('data', function onData (data) {\n          self.log.trace('data event: %s', util.inspect(data))\n\n          self._tracker.parser.write(data)\n        })\n        secure.on('error', function (err) {\n          self.log.trace({ err: err }, 'error event: %s', new Error().stack)\n\n          self.emit('error', err)\n          sock.destroy()\n        })\n        callback(null)\n      })\n      secure.once('error', function (err) {\n        // If the SSL negotiation failed, to back to plain mode.\n        self._starttls = null\n        secure.removeAllListeners()\n        callback(err)\n      })\n      self._starttls.success = true\n      self._socket = secure\n    })\n  }\n\n  const req = new ExtendedRequest({\n    requestName: '1.3.6.1.4.1.1466.20037',\n    requestValue: null,\n    controls: controls\n  })\n\n  return this._send(req,\n    [errors.LDAP_SUCCESS],\n    new EventEmitter(),\n    onSend,\n    _bypass)\n}\n\n/**\n * Disconnect from the LDAP server and do not allow reconnection.\n *\n * If the client is instantiated with proper reconnection options, it's\n * possible to initiate new requests after a call to unbind since the client\n * will attempt to reconnect in order to fulfill the request.\n *\n * Calling destroy will prevent any further reconnection from occurring.\n *\n * @param {Object} err (Optional) error that was cause of client destruction\n */\nClient.prototype.destroy = function destroy (err) {\n  this.destroyed = true\n  this.queue.freeze()\n  // Purge any queued requests which are now meaningless\n  this.queue.flush(function (msg, expect, emitter, cb) {\n    if (typeof (cb) === 'function') {\n      cb(new Error('client destroyed'))\n    }\n  })\n  if (this.connected) {\n    this.unbind()\n  }\n  if (this._socket) {\n    this._socket.destroy()\n  }\n\n  this.emit('destroy', err)\n}\n\n/**\n * Initiate LDAP connection.\n */\nClient.prototype.connect = function connect () {\n  if (this.connecting || this.connected) {\n    return\n  }\n  const self = this\n  const log = this.log\n  let socket\n  let tracker\n\n  // Establish basic socket connection\n  function connectSocket (cb) {\n    const server = self.urls[self._nextServer]\n    self._nextServer = (self._nextServer + 1) % self.urls.length\n\n    cb = once(cb)\n\n    function onResult (err, res) {\n      if (err) {\n        if (self.connectTimer) {\n          clearTimeout(self.connectTimer)\n          self.connectTimer = null\n        }\n        self.emit('connectError', err)\n      }\n      cb(err, res)\n    }\n    function onConnect () {\n      if (self.connectTimer) {\n        clearTimeout(self.connectTimer)\n        self.connectTimer = null\n      }\n      socket.removeAllListeners('error')\n        .removeAllListeners('connect')\n        .removeAllListeners('secureConnect')\n\n      tracker.id = nextClientId() + '__' + tracker.id\n      self.log = self.log.child({ ldap_id: tracker.id }, true)\n\n      // Move on to client setup\n      setupClient(cb)\n    }\n\n    const port = (server && server.port) || self.socketPath\n    const host = server && server.hostname\n    if (server && server.secure) {\n      socket = tls.connect(port, host, self.tlsOptions)\n      socket.once('secureConnect', onConnect)\n    } else {\n      socket = net.connect(port, host)\n      socket.once('connect', onConnect)\n    }\n    socket.once('error', onResult)\n    initSocket(server)\n\n    // Setup connection timeout handling, if desired\n    if (self.connectTimeout) {\n      self.connectTimer = setTimeout(function onConnectTimeout () {\n        if (!socket || !socket.readable || !socket.writeable) {\n          socket.destroy()\n          self._socket = null\n          onResult(new ConnectionError('connection timeout'))\n        }\n      }, self.connectTimeout)\n    }\n  }\n\n  // Initialize socket events and LDAP parser.\n  function initSocket (server) {\n    tracker = messageTrackerFactory({\n      id: server ? server.href : self.socketPath,\n      parser: new Parser({ log: log })\n    })\n\n    // This won't be set on TLS. So. Very. Annoying.\n    if (typeof (socket.setKeepAlive) !== 'function') {\n      socket.setKeepAlive = function setKeepAlive (enable, delay) {\n        return socket.socket\n          ? socket.socket.setKeepAlive(enable, delay)\n          : false\n      }\n    }\n\n    socket.on('data', function onData (data) {\n      log.trace('data event: %s', util.inspect(data))\n\n      tracker.parser.write(data)\n    })\n\n    // The \"router\"\n    tracker.parser.on('message', function onMessage (message) {\n      message.connection = self._socket\n      const callback = tracker.fetch(message.messageID)\n\n      if (!callback) {\n        log.error({ message: message.json }, 'unsolicited message')\n        return false\n      }\n\n      return callback(message)\n    })\n\n    tracker.parser.on('error', function onParseError (err) {\n      self.emit('error', new VError(err, 'Parser error for %s',\n        tracker.id))\n      self.connected = false\n      socket.end()\n    })\n  }\n\n  // After connect, register socket event handlers and run any setup actions\n  function setupClient (cb) {\n    cb = once(cb)\n\n    // Indicate failure if anything goes awry during setup\n    function bail (err) {\n      socket.destroy()\n      cb(err || new Error('client error during setup'))\n    }\n    // Work around lack of close event on tls.socket in node < 0.11\n    ((socket.socket) ? socket.socket : socket).once('close', bail)\n    socket.once('error', bail)\n    socket.once('end', bail)\n    socket.once('timeout', bail)\n    socket.once('cleanupSetupListeners', function onCleanup () {\n      socket.removeListener('error', bail)\n        .removeListener('close', bail)\n        .removeListener('end', bail)\n        .removeListener('timeout', bail)\n    })\n\n    self._socket = socket\n    self._tracker = tracker\n\n    // Run any requested setup (such as automatically performing a bind) on\n    // socket before signalling successful connection.\n    // This setup needs to bypass the request queue since all other activity is\n    // blocked until the connection is considered fully established post-setup.\n    // Only allow bind/search/starttls for now.\n    const basicClient = {\n      bind: function bindBypass (name, credentials, controls, callback) {\n        return self.bind(name, credentials, controls, callback, true)\n      },\n      search: function searchBypass (base, options, controls, callback) {\n        return self.search(base, options, controls, callback, true)\n      },\n      starttls: function starttlsBypass (options, controls, callback) {\n        return self.starttls(options, controls, callback, true)\n      },\n      unbind: self.unbind.bind(self)\n    }\n    vasync.forEachPipeline({\n      func: function (f, callback) {\n        f(basicClient, callback)\n      },\n      inputs: self.listeners('setup')\n    }, function (err, _res) {\n      if (err) {\n        self.emit('setupError', err)\n      }\n      cb(err)\n    })\n  }\n\n  // Wire up \"official\" event handlers after successful connect/setup\n  function postSetup () {\n    // cleanup the listeners we attached in setup phrase.\n    socket.emit('cleanupSetupListeners');\n\n    // Work around lack of close event on tls.socket in node < 0.11\n    ((socket.socket) ? socket.socket : socket).once('close',\n      self._onClose.bind(self))\n    socket.on('end', function onEnd () {\n      log.trace('end event')\n\n      self.emit('end')\n      socket.end()\n    })\n    socket.on('error', function onSocketError (err) {\n      log.trace({ err: err }, 'error event: %s', new Error().stack)\n\n      self.emit('error', err)\n      socket.destroy()\n    })\n    socket.on('timeout', function onTimeout () {\n      log.trace('timeout event')\n\n      self.emit('socketTimeout')\n      socket.end()\n    })\n\n    const server = self.urls[self._nextServer]\n    if (server) {\n      self.host = server.hostname\n      self.port = server.port\n      self.secure = server.secure\n    }\n  }\n\n  let retry\n  let failAfter\n  if (this.reconnect) {\n    retry = backoff.exponential({\n      initialDelay: this.reconnect.initialDelay,\n      maxDelay: this.reconnect.maxDelay\n    })\n    failAfter = this.reconnect.failAfter\n    if (this.urls.length > 1 && failAfter) {\n      failAfter *= this.urls.length\n    }\n  } else {\n    retry = backoff.exponential({\n      initialDelay: 1,\n      maxDelay: 2\n    })\n    failAfter = this.urls.length || 1\n  }\n  retry.failAfter(failAfter)\n\n  retry.on('ready', function (num, _delay) {\n    if (self.destroyed) {\n      // Cease connection attempts if destroyed\n      return\n    }\n    connectSocket(function (err) {\n      if (!err) {\n        postSetup()\n        self.connecting = false\n        self.connected = true\n        self.emit('connect', socket)\n        self.log.debug('connected after %d attempt(s)', num + 1)\n        // Flush any queued requests\n        self._flushQueue()\n        self._connectRetry = null\n      } else {\n        retry.backoff(err)\n      }\n    })\n  })\n  retry.on('fail', function (err) {\n    if (self.destroyed) {\n      // Silence any connect/setup errors if destroyed\n      return\n    }\n    self.log.debug('failed to connect after %d attempts', failAfter)\n    // Communicate the last-encountered error\n    if (err instanceof ConnectionError) {\n      self.emitError('connectTimeout', err)\n    } else if (err.code === 'ECONNREFUSED') {\n      self.emitError('connectRefused', err)\n    } else {\n      self.emit('error', err)\n    }\n  })\n\n  this._connectRetry = retry\n  this.connecting = true\n  retry.backoff()\n}\n\n/// --- Private API\n\n/**\n * Flush queued requests out to the socket.\n */\nClient.prototype._flushQueue = function _flushQueue () {\n  // Pull items we're about to process out of the queue.\n  this.queue.flush(this._send.bind(this))\n}\n\n/**\n * Clean up socket/parser resources after socket close.\n */\nClient.prototype._onClose = function _onClose (closeError) {\n  const socket = this._socket\n  const tracker = this._tracker\n  socket.removeAllListeners('connect')\n    .removeAllListeners('data')\n    .removeAllListeners('drain')\n    .removeAllListeners('end')\n    .removeAllListeners('error')\n    .removeAllListeners('timeout')\n  this._socket = null\n  this.connected = false;\n\n  ((socket.socket) ? socket.socket : socket).removeAllListeners('close')\n\n  this.log.trace('close event had_err=%s', closeError ? 'yes' : 'no')\n\n  this.emit('close', closeError)\n  // On close we have to walk the outstanding messages and go invoke their\n  // callback with an error.\n  tracker.purge(function (msgid, cb) {\n    if (socket.unbindMessageID !== msgid) {\n      return cb(new ConnectionError(tracker.id + ' closed'))\n    } else {\n      // Unbinds will be communicated as a success since we're closed\n      const unbind = new UnbindResponse({ messageID: msgid })\n      unbind.status = 'unbind'\n      return cb(unbind)\n    }\n  })\n\n  // Trash any parser or starttls state\n  this._tracker = null\n  delete this._starttls\n\n  // Automatically fire reconnect logic if the socket was closed for any reason\n  // other than a user-initiated unbind.\n  if (this.reconnect && !this.unbound) {\n    this.connect()\n  }\n  this.unbound = false\n  return false\n}\n\n/**\n * Maintain idle timer for client.\n *\n * Will start timer to fire 'idle' event if conditions are satisfied.  If\n * conditions are not met and a timer is running, it will be cleared.\n *\n * @param {Boolean} override explicitly disable timer.\n */\nClient.prototype._updateIdle = function _updateIdle (override) {\n  if (this.idleTimeout === 0) {\n    return\n  }\n  // Client must be connected but not waiting on any request data\n  const self = this\n  function isIdle (disable) {\n    return ((disable !== true) &&\n      (self._socket && self.connected) &&\n      (self._tracker.pending === 0))\n  }\n  if (isIdle(override)) {\n    if (!this._idleTimer) {\n      this._idleTimer = setTimeout(function () {\n        // Double-check idleness in case socket was torn down\n        if (isIdle()) {\n          self.emit('idle')\n        }\n      }, this.idleTimeout)\n    }\n  } else {\n    if (this._idleTimer) {\n      clearTimeout(this._idleTimer)\n      this._idleTimer = null\n    }\n  }\n}\n\n/**\n * Attempt to send an LDAP request.\n */\nClient.prototype._send = function _send (message,\n  expect,\n  emitter,\n  callback,\n  _bypass) {\n  assert.ok(message)\n  assert.ok(expect)\n  assert.optionalObject(emitter)\n  assert.ok(callback)\n\n  // Allow connect setup traffic to bypass checks\n  if (_bypass && this._socket && this._socket.writable) {\n    return this._sendSocket(message, expect, emitter, callback)\n  }\n  if (!this._socket || !this.connected) {\n    if (!this.queue.enqueue(message, expect, emitter, callback)) {\n      callback(new ConnectionError('connection unavailable'))\n    }\n    // Initiate reconnect if needed\n    if (this.reconnect) {\n      this.connect()\n    }\n    return false\n  } else {\n    this._flushQueue()\n    return this._sendSocket(message, expect, emitter, callback)\n  }\n}\n\nClient.prototype._sendSocket = function _sendSocket (message,\n  expect,\n  emitter,\n  callback) {\n  const conn = this._socket\n  const tracker = this._tracker\n  const log = this.log\n  const self = this\n  let timer = false\n  let sentEmitter = false\n\n  function sendResult (event, obj) {\n    if (event === 'error') {\n      self.emit('resultError', obj)\n    }\n    if (emitter) {\n      if (event === 'error') {\n        // Error will go unhandled if emitter hasn't been sent via callback.\n        // Execute callback with the error instead.\n        if (!sentEmitter) { return callback(obj) }\n      }\n      return emitter.emit(event, obj)\n    }\n\n    if (event === 'error') { return callback(obj) }\n\n    return callback(null, obj)\n  }\n\n  function messageCallback (msg) {\n    if (timer) { clearTimeout(timer) }\n\n    log.trace({ msg: msg ? msg.json : null }, 'response received')\n\n    if (expect === 'abandon') { return sendResult('end', null) }\n\n    if (msg instanceof SearchEntry || msg instanceof SearchReference) {\n      let event = msg.constructor.name\n      event = event[0].toLowerCase() + event.slice(1)\n      return sendResult(event, msg)\n    } else {\n      tracker.remove(message.messageID)\n      // Potentially mark client as idle\n      self._updateIdle()\n\n      if (msg instanceof LDAPResult) {\n        if (expect.indexOf(msg.status) === -1) {\n          return sendResult('error', errors.getError(msg))\n        }\n        return sendResult('end', msg)\n      } else if (msg instanceof Error) {\n        return sendResult('error', msg)\n      } else {\n        return sendResult('error', new errors.ProtocolError(msg.type))\n      }\n    }\n  }\n\n  function onRequestTimeout () {\n    self.emit('timeout', message)\n    const cb = tracker.fetch(message.messageID)\n    if (cb) {\n      // FIXME: the timed-out request should be abandoned\n      cb(new errors.TimeoutError('request timeout (client interrupt)'))\n    }\n  }\n\n  function writeCallback () {\n    if (expect === 'abandon') {\n      // Mark the messageID specified as abandoned\n      tracker.abandon(message.abandonID)\n      // No need to track the abandon request itself\n      tracker.remove(message.id)\n      return callback(null)\n    } else if (expect === 'unbind') {\n      conn.unbindMessageID = message.id\n      // Mark client as disconnected once unbind clears the socket\n      self.connected = false\n      // Some servers will RST the connection after receiving an unbind.\n      // Socket errors are blackholed since the connection is being closed.\n      conn.removeAllListeners('error')\n      conn.on('error', function () {})\n      conn.end()\n    } else if (emitter) {\n      sentEmitter = true\n      callback(null, emitter)\n      emitter.emit('searchRequest', message)\n      return\n    }\n    return false\n  }\n\n  // Start actually doing something...\n  tracker.track(message, messageCallback)\n  // Mark client as active\n  this._updateIdle(true)\n\n  if (self.timeout) {\n    log.trace('Setting timeout to %d', self.timeout)\n    timer = setTimeout(onRequestTimeout, self.timeout)\n  }\n\n  log.trace('sending request %j', message.json)\n\n  try {\n    return conn.write(message.toBer(), writeCallback)\n  } catch (e) {\n    if (timer) { clearTimeout(timer) }\n\n    log.trace({ err: e }, 'Error writing message to socket')\n    return callback(e)\n  }\n}\n\nClient.prototype.emitError = function emitError (event, err) {\n  if (event !== 'error' && err && this.listenerCount(event) === 0) {\n    if (typeof err === 'string') {\n      err = event + ': ' + err\n    } else if (err.message) {\n      err.message = event + ': ' + err.message\n    }\n    this.emit('error', err)\n  }\n  this.emit(event, err)\n}\n", "'use strict'\n\nconst logger = require('../logger')\nconst Client = require('./client')\n\nmodule.exports = {\n  Client: Client,\n  createClient: function createClient (options) {\n    if (isObject(options) === false) throw TypeError('options (object) required')\n    if (options.url && typeof options.url !== 'string' && !Array.isArray(options.url)) throw TypeError('options.url (string|array) required')\n    if (options.socketPath && typeof options.socketPath !== 'string') throw TypeError('options.socketPath must be a string')\n    if ((options.url && options.socketPath) || !(options.url || options.socketPath)) throw TypeError('options.url ^ options.socketPath (String) required')\n    if (!options.log) options.log = logger\n    if (isObject(options.log) !== true) throw TypeError('options.log must be an object')\n    if (!options.log.child) options.log.child = function () { return options.log }\n\n    return new Client(options)\n  }\n}\n\nfunction isObject (input) {\n  return Object.prototype.toString.apply(input) === '[object Object]'\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst assert = require('assert')\nconst EventEmitter = require('events').EventEmitter\nconst net = require('net')\nconst tls = require('tls')\nconst util = require('util')\n\n// var asn1 = require('asn1')\nconst VError = require('verror').VError\n\nconst dn = require('./dn')\nconst dtrace = require('./dtrace')\nconst errors = require('./errors')\nconst Protocol = require('./protocol')\n\nconst Parser = require('./messages').Parser\nconst AbandonResponse = require('./messages/abandon_response')\nconst AddResponse = require('./messages/add_response')\nconst BindResponse = require('./messages/bind_response')\nconst CompareResponse = require('./messages/compare_response')\nconst DeleteResponse = require('./messages/del_response')\nconst ExtendedResponse = require('./messages/ext_response')\n// var LDAPResult = require('./messages/result')\nconst ModifyResponse = require('./messages/modify_response')\nconst ModifyDNResponse = require('./messages/moddn_response')\nconst SearchRequest = require('./messages/search_request')\nconst SearchResponse = require('./messages/search_response')\nconst UnbindResponse = require('./messages/unbind_response')\n\n/// --- Globals\n\n// var Ber = asn1.Ber\n// var BerReader = asn1.BerReader\nconst DN = dn.DN\n\n// var sprintf = util.format\n\n/// --- Helpers\n\nfunction mergeFunctionArgs (argv, start, end) {\n  assert.ok(argv)\n\n  if (!start) { start = 0 }\n  if (!end) { end = argv.length }\n\n  const handlers = []\n\n  for (let i = start; i < end; i++) {\n    if (argv[i] instanceof Array) {\n      const arr = argv[i]\n      for (let j = 0; j < arr.length; j++) {\n        if (!(arr[j] instanceof Function)) {\n          throw new TypeError('Invalid argument type: ' + typeof (arr[j]))\n        }\n        handlers.push(arr[j])\n      }\n    } else if (argv[i] instanceof Function) {\n      handlers.push(argv[i])\n    } else {\n      throw new TypeError('Invalid argument type: ' + typeof (argv[i]))\n    }\n  }\n\n  return handlers\n}\n\nfunction getResponse (req) {\n  assert.ok(req)\n\n  let Response\n\n  switch (req.protocolOp) {\n    case Protocol.LDAP_REQ_BIND:\n      Response = BindResponse\n      break\n    case Protocol.LDAP_REQ_ABANDON:\n      Response = AbandonResponse\n      break\n    case Protocol.LDAP_REQ_ADD:\n      Response = AddResponse\n      break\n    case Protocol.LDAP_REQ_COMPARE:\n      Response = CompareResponse\n      break\n    case Protocol.LDAP_REQ_DELETE:\n      Response = DeleteResponse\n      break\n    case Protocol.LDAP_REQ_EXTENSION:\n      Response = ExtendedResponse\n      break\n    case Protocol.LDAP_REQ_MODIFY:\n      Response = ModifyResponse\n      break\n    case Protocol.LDAP_REQ_MODRDN:\n      Response = ModifyDNResponse\n      break\n    case Protocol.LDAP_REQ_SEARCH:\n      Response = SearchResponse\n      break\n    case Protocol.LDAP_REQ_UNBIND:\n      Response = UnbindResponse\n      break\n    default:\n      return null\n  }\n  assert.ok(Response)\n\n  const res = new Response({\n    messageID: req.messageID,\n    log: req.log,\n    attributes: ((req instanceof SearchRequest) ? req.attributes : undefined)\n  })\n  res.connection = req.connection\n  res.logId = req.logId\n\n  return res\n}\n\nfunction defaultHandler (req, res, next) {\n  assert.ok(req)\n  assert.ok(res)\n  assert.ok(next)\n\n  res.matchedDN = req.dn.toString()\n  res.errorMessage = 'Server method not implemented'\n  res.end(errors.LDAP_OTHER)\n  return next()\n}\n\nfunction defaultNoOpHandler (req, res, next) {\n  assert.ok(req)\n  assert.ok(res)\n  assert.ok(next)\n\n  res.end()\n  return next()\n}\n\nfunction noSuffixHandler (req, res, next) {\n  assert.ok(req)\n  assert.ok(res)\n  assert.ok(next)\n\n  res.errorMessage = 'No tree found for: ' + req.dn.toString()\n  res.end(errors.LDAP_NO_SUCH_OBJECT)\n  return next()\n}\n\nfunction noExOpHandler (req, res, next) {\n  assert.ok(req)\n  assert.ok(res)\n  assert.ok(next)\n\n  res.errorMessage = req.requestName + ' not supported'\n  res.end(errors.LDAP_PROTOCOL_ERROR)\n  return next()\n}\n\nfunction fireDTraceProbe (req, res) {\n  assert.ok(req)\n\n  req._dtraceId = res._dtraceId = dtrace._nextId()\n  const probeArgs = [\n    req._dtraceId,\n    req.connection.remoteAddress || 'localhost',\n    req.connection.ldap.bindDN.toString(),\n    req.dn.toString()\n  ]\n\n  let op\n  switch (req.protocolOp) {\n    case Protocol.LDAP_REQ_ABANDON:\n      op = 'abandon'\n      break\n    case Protocol.LDAP_REQ_ADD:\n      op = 'add'\n      probeArgs.push(req.attributes.length)\n      break\n    case Protocol.LDAP_REQ_BIND:\n      op = 'bind'\n      break\n    case Protocol.LDAP_REQ_COMPARE:\n      op = 'compare'\n      probeArgs.push(req.attribute)\n      probeArgs.push(req.value)\n      break\n    case Protocol.LDAP_REQ_DELETE:\n      op = 'delete'\n      break\n    case Protocol.LDAP_REQ_EXTENSION:\n      op = 'exop'\n      probeArgs.push(req.name)\n      probeArgs.push(req.value)\n      break\n    case Protocol.LDAP_REQ_MODIFY:\n      op = 'modify'\n      probeArgs.push(req.changes.length)\n      break\n    case Protocol.LDAP_REQ_MODRDN:\n      op = 'modifydn'\n      probeArgs.push(req.newRdn.toString())\n      probeArgs.push((req.newSuperior ? req.newSuperior.toString() : ''))\n      break\n    case Protocol.LDAP_REQ_SEARCH:\n      op = 'search'\n      probeArgs.push(req.scope)\n      probeArgs.push(req.filter.toString())\n      break\n    case Protocol.LDAP_REQ_UNBIND:\n      op = 'unbind'\n      break\n    default:\n      break\n  }\n\n  res._dtraceOp = op\n  dtrace.fire('server-' + op + '-start', function () {\n    return probeArgs\n  })\n}\n\n/// --- API\n\n/**\n * Constructs a new server that you can call .listen() on, in the various\n * forms node supports.  You need to first assign some handlers to the various\n * LDAP operations however.\n *\n * The options object currently only takes a certificate/private key, and a\n * bunyan logger handle.\n *\n * This object exposes the following events:\n *  - 'error'\n *  - 'close'\n *\n * @param {Object} options (optional) parameterization object.\n * @throws {TypeError} on bad input.\n */\nfunction Server (options) {\n  if (options) {\n    if (typeof (options) !== 'object') { throw new TypeError('options (object) required') }\n    if (typeof (options.log) !== 'object') { throw new TypeError('options.log must be an object') }\n\n    if (options.certificate || options.key) {\n      if (!(options.certificate && options.key) ||\n          (typeof (options.certificate) !== 'string' &&\n          !Buffer.isBuffer(options.certificate)) ||\n          (typeof (options.key) !== 'string' &&\n          !Buffer.isBuffer(options.key))) {\n        throw new TypeError('options.certificate and options.key ' +\n                            '(string or buffer) are both required for TLS')\n      }\n    }\n  } else {\n    options = {}\n  }\n  const self = this\n\n  EventEmitter.call(this, options)\n\n  this._chain = []\n  this.log = options.log\n  this.strictDN = (options.strictDN !== undefined) ? options.strictDN : true\n\n  const log = this.log\n\n  function setupConnection (c) {\n    assert.ok(c)\n\n    if (c.type === 'unix') {\n      c.remoteAddress = self.server.path\n      c.remotePort = c.fd\n    } else if (c.socket) {\n      // TLS\n      c.remoteAddress = c.socket.remoteAddress\n      c.remotePort = c.socket.remotePort\n    }\n\n    const rdn = new dn.RDN({ cn: 'anonymous' })\n\n    c.ldap = {\n      id: c.remoteAddress + ':' + c.remotePort,\n      config: options,\n      _bindDN: new DN([rdn])\n    }\n    c.addListener('timeout', function () {\n      log.trace('%s timed out', c.ldap.id)\n      c.destroy()\n    })\n    c.addListener('end', function () {\n      log.trace('%s shutdown', c.ldap.id)\n    })\n    c.addListener('error', function (err) {\n      log.warn('%s unexpected connection error', c.ldap.id, err)\n      self.emit('clientError', err)\n      c.destroy()\n    })\n    c.addListener('close', function (closeError) {\n      log.trace('%s close; had_err=%j', c.ldap.id, closeError)\n      c.end()\n    })\n\n    c.ldap.__defineGetter__('bindDN', function () {\n      return c.ldap._bindDN\n    })\n    c.ldap.__defineSetter__('bindDN', function (val) {\n      if (!(val instanceof DN)) { throw new TypeError('DN required') }\n\n      c.ldap._bindDN = val\n      return val\n    })\n    return c\n  }\n\n  self.newConnection = function (conn) {\n    // TODO: make `newConnection` available on the `Server` prototype\n    // https://github.com/ldapjs/node-ldapjs/pull/727/files#r636572294\n    setupConnection(conn)\n    log.trace('new connection from %s', conn.ldap.id)\n\n    dtrace.fire('server-connection', function () {\n      return [conn.remoteAddress]\n    })\n\n    conn.parser = new Parser({\n      log: options.log\n    })\n    conn.parser.on('message', function (req) {\n      req.connection = conn\n      req.logId = conn.ldap.id + '::' + req.messageID\n      req.startTime = new Date().getTime()\n\n      log.debug('%s: message received: req=%j', conn.ldap.id, req.json)\n\n      const res = getResponse(req)\n      if (!res) {\n        log.warn('Unimplemented server method: %s', req.type)\n        conn.destroy()\n        return false\n      }\n\n      // parse string DNs for routing/etc\n      try {\n        switch (req.protocolOp) {\n          case Protocol.LDAP_REQ_BIND:\n            req.name = dn.parse(req.name)\n            break\n          case Protocol.LDAP_REQ_ADD:\n          case Protocol.LDAP_REQ_COMPARE:\n          case Protocol.LDAP_REQ_DELETE:\n            req.entry = dn.parse(req.entry)\n            break\n          case Protocol.LDAP_REQ_MODIFY:\n            req.object = dn.parse(req.object)\n            break\n          case Protocol.LDAP_REQ_MODRDN:\n            req.entry = dn.parse(req.entry)\n            // TODO: handle newRdn/Superior\n            break\n          case Protocol.LDAP_REQ_SEARCH:\n            req.baseObject = dn.parse(req.baseObject)\n            break\n          default:\n            break\n        }\n      } catch (e) {\n        if (self.strictDN) {\n          return res.end(errors.LDAP_INVALID_DN_SYNTAX)\n        }\n      }\n\n      res.connection = conn\n      res.logId = req.logId\n      res.requestDN = req.dn\n\n      const chain = self._getHandlerChain(req, res)\n\n      let i = 0\n      return (function messageIIFE (err) {\n        function sendError (sendErr) {\n          res.status = sendErr.code || errors.LDAP_OPERATIONS_ERROR\n          res.matchedDN = req.suffix ? req.suffix.toString() : ''\n          res.errorMessage = sendErr.message || ''\n          return res.end()\n        }\n\n        function after () {\n          if (!self._postChain || !self._postChain.length) { return }\n\n          function next () {} // stub out next for the post chain\n\n          self._postChain.forEach(function (cb) {\n            cb.call(self, req, res, next)\n          })\n        }\n\n        if (err) {\n          log.trace('%s sending error: %s', req.logId, err.stack || err)\n          self.emit('clientError', err)\n          sendError(err)\n          return after()\n        }\n\n        try {\n          const next = messageIIFE\n          if (chain.handlers[i]) { return chain.handlers[i++].call(chain.backend, req, res, next) }\n\n          if (req.protocolOp === Protocol.LDAP_REQ_BIND && res.status === 0) {\n            // 0 length == anonymous bind\n            if (req.dn.length === 0 && req.credentials === '') {\n              conn.ldap.bindDN = new DN([new dn.RDN({ cn: 'anonymous' })])\n            } else {\n              conn.ldap.bindDN = req.dn\n            }\n          }\n\n          // unbind clear bindDN for safety\n          // conn should terminate on unbind (RFC4511 4.3)\n          if (req.protocolOp === Protocol.LDAP_REQ_UNBIND && res.status === 0) {\n            conn.ldap.bindDN = new DN([new dn.RDN({ cn: 'anonymous' })])\n          }\n\n          return after()\n        } catch (e) {\n          if (!e.stack) { e.stack = e.toString() }\n          log.error('%s uncaught exception: %s', req.logId, e.stack)\n          return sendError(new errors.OperationsError(e.message))\n        }\n      }())\n    })\n\n    conn.parser.on('error', function (err, message) {\n      self.emit('error', new VError(err, 'Parser error for %s', conn.ldap.id))\n\n      if (!message) { return conn.destroy() }\n\n      const res = getResponse(message)\n      if (!res) { return conn.destroy() }\n\n      res.status = 0x02 // protocol error\n      res.errorMessage = err.toString()\n      return conn.end(res.toBer())\n    })\n\n    conn.on('data', function (data) {\n      log.trace('data on %s: %s', conn.ldap.id, util.inspect(data))\n\n      conn.parser.write(data)\n    })\n  } // end newConnection\n\n  this.routes = {}\n  if ((options.cert || options.certificate) && options.key) {\n    options.cert = options.cert || options.certificate\n    this.server = tls.createServer(options, options.connectionRouter ? options.connectionRouter : self.newConnection)\n  } else {\n    this.server = net.createServer(options.connectionRouter ? options.connectionRouter : self.newConnection)\n  }\n  this.server.log = options.log\n  this.server.ldap = {\n    config: options\n  }\n  this.server.on('close', function () {\n    self.emit('close')\n  })\n  this.server.on('error', function (err) {\n    self.emit('error', err)\n  })\n}\nutil.inherits(Server, EventEmitter)\nObject.defineProperties(Server.prototype, {\n  maxConnections: {\n    get: function getMaxConnections () {\n      return this.server.maxConnections\n    },\n    set: function setMaxConnections (val) {\n      this.server.maxConnections = val\n    },\n    configurable: false\n  },\n  connections: {\n    get: function getConnections () {\n      return this.server.connections\n    },\n    configurable: false\n  },\n  name: {\n    get: function getName () {\n      return 'LDAPServer'\n    },\n    configurable: false\n  },\n  url: {\n    get: function getURL () {\n      let str\n      const addr = this.server.address()\n      if (!addr) {\n        return null\n      }\n      if (!addr.family) {\n        str = 'ldapi://'\n        str += this.host.replace(/\\//g, '%2f')\n        return str\n      }\n      if (this.server instanceof tls.Server) {\n        str = 'ldaps://'\n      } else {\n        str = 'ldap://'\n      }\n\n      let host = this.host\n      // Node 18 switched family from returning a string to returning a number\n      // https://nodejs.org/api/net.html#serveraddress\n      if (addr.family === 'IPv6' || addr.family === 6) {\n        host = '[' + this.host + ']'\n      }\n\n      str += host + ':' + this.port\n      return str\n    },\n    configurable: false\n  }\n})\nmodule.exports = Server\n\n/**\n * Adds a handler (chain) for the LDAP add method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.add = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_ADD, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP bind method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.bind = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_BIND, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP compare method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.compare = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_COMPARE, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP delete method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.del = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_DELETE, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP exop method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name OID to assign this handler chain to.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input.\n */\nServer.prototype.exop = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_EXTENSION, name, args, true)\n}\n\n/**\n * Adds a handler (chain) for the LDAP modify method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.modify = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_MODIFY, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP modifyDN method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.modifyDN = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_MODRDN, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP search method.\n *\n * Note that this is of the form f(name, [function]) where the second...N\n * arguments can all either be functions or arrays of functions.\n *\n * @param {String} name the DN to mount this handler chain at.\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.search = function (name) {\n  const args = Array.prototype.slice.call(arguments, 1)\n  return this._mount(Protocol.LDAP_REQ_SEARCH, name, args)\n}\n\n/**\n * Adds a handler (chain) for the LDAP unbind method.\n *\n * This method is different than the others and takes no mount point, as unbind\n * is a connection-wide operation, not constrianed to part of the DIT.\n *\n * @return {Server} this so you can chain calls.\n * @throws {TypeError} on bad input\n */\nServer.prototype.unbind = function () {\n  const args = Array.prototype.slice.call(arguments, 0)\n  return this._mount(Protocol.LDAP_REQ_UNBIND, 'unbind', args, true)\n}\n\nServer.prototype.use = function use () {\n  const args = Array.prototype.slice.call(arguments)\n  const chain = mergeFunctionArgs(args, 0, args.length)\n  const self = this\n  chain.forEach(function (c) {\n    self._chain.push(c)\n  })\n}\n\nServer.prototype.after = function () {\n  if (!this._postChain) { this._postChain = [] }\n\n  const self = this\n  mergeFunctionArgs(arguments).forEach(function (h) {\n    self._postChain.push(h)\n  })\n}\n\n// All these just reexpose the requisite net.Server APIs\nServer.prototype.listen = function (port, host, callback) {\n  if (typeof (port) !== 'number' && typeof (port) !== 'string') { throw new TypeError('port (number or path) required') }\n\n  if (typeof (host) === 'function') {\n    callback = host\n    host = '0.0.0.0'\n  }\n  if (typeof (port) === 'string' && /^[0-9]+$/.test(port)) {\n    // Disambiguate between string ports and file paths\n    port = parseInt(port, 10)\n  }\n  const self = this\n\n  function cbListen () {\n    if (typeof (port) === 'number') {\n      self.host = self.address().address\n      self.port = self.address().port\n    } else {\n      self.host = port\n      self.port = self.server.fd\n    }\n\n    if (typeof (callback) === 'function') { callback() }\n  }\n\n  if (typeof (port) === 'number') {\n    return this.server.listen(port, host, cbListen)\n  } else {\n    return this.server.listen(port, cbListen)\n  }\n}\nServer.prototype.listenFD = function (fd) {\n  this.host = 'unix-domain-socket'\n  this.port = fd\n  return this.server.listenFD(fd)\n}\nServer.prototype.close = function (callback) {\n  return this.server.close(callback)\n}\nServer.prototype.address = function () {\n  return this.server.address()\n}\n\nServer.prototype.getConnections = function (callback) {\n  return this.server.getConnections(callback)\n}\n\nServer.prototype._getRoute = function (_dn, backend) {\n  assert.ok(dn)\n\n  if (!backend) { backend = this }\n\n  let name\n  if (_dn instanceof dn.DN) {\n    name = _dn.toString()\n  } else {\n    name = _dn\n  }\n\n  if (!this.routes[name]) {\n    this.routes[name] = {}\n    this.routes[name].backend = backend\n    this.routes[name].dn = _dn\n    // Force regeneration of the route key cache on next request\n    this._routeKeyCache = null\n  }\n\n  return this.routes[name]\n}\n\nServer.prototype._sortedRouteKeys = function _sortedRouteKeys () {\n  // The filtered/sorted route keys are cached to prevent needlessly\n  // regenerating the list for every incoming request.\n  if (!this._routeKeyCache) {\n    const self = this\n    const reversedRDNsToKeys = {}\n    // Generate mapping of reversedRDNs(DN) -> routeKey\n    Object.keys(this.routes).forEach(function (key) {\n      const _dn = self.routes[key].dn\n      // Ignore non-DN routes such as exop or unbind\n      if (_dn instanceof dn.DN) {\n        const reversed = _dn.clone()\n        reversed.rdns.reverse()\n        reversedRDNsToKeys[reversed.format()] = key\n      }\n    })\n    const output = []\n    // Reverse-sort on reversedRDS(DN) in order to output routeKey list.\n    // This will place more specific DNs in front of their parents:\n    // 1. dc=test, dc=domain, dc=sub\n    // 2. dc=test, dc=domain\n    // 3. dc=other, dc=foobar\n    Object.keys(reversedRDNsToKeys).sort().reverse().forEach(function (_dn) {\n      output.push(reversedRDNsToKeys[_dn])\n    })\n    this._routeKeyCache = output\n  }\n  return this._routeKeyCache\n}\n\nServer.prototype._getHandlerChain = function _getHandlerChain (req, res) {\n  assert.ok(req)\n\n  fireDTraceProbe(req, res)\n\n  const self = this\n  const routes = this.routes\n  let route\n\n  // check anonymous bind\n  if (req.protocolOp === Protocol.LDAP_REQ_BIND &&\n      req.dn.toString() === '' &&\n      req.credentials === '') {\n    return {\n      backend: self,\n      handlers: [defaultNoOpHandler]\n    }\n  }\n\n  const op = '0x' + req.protocolOp.toString(16)\n\n  // Special cases are exops, unbinds and abandons. Handle those first.\n  if (req.protocolOp === Protocol.LDAP_REQ_EXTENSION) {\n    route = routes[req.requestName]\n    if (route) {\n      return {\n        backend: route.backend,\n        handlers: (route[op] ? route[op] : [noExOpHandler])\n      }\n    } else {\n      return {\n        backend: self,\n        handlers: [noExOpHandler]\n      }\n    }\n  } else if (req.protocolOp === Protocol.LDAP_REQ_UNBIND) {\n    route = routes.unbind\n    if (route) {\n      return {\n        backend: route.backend,\n        handlers: route[op]\n      }\n    } else {\n      return {\n        backend: self,\n        handlers: [defaultNoOpHandler]\n      }\n    }\n  } else if (req.protocolOp === Protocol.LDAP_REQ_ABANDON) {\n    return {\n      backend: self,\n      handlers: [defaultNoOpHandler]\n    }\n  }\n\n  // Otherwise, match via DN rules\n  assert.ok(req.dn)\n  const keys = this._sortedRouteKeys()\n  let fallbackHandler = [noSuffixHandler]\n  // invalid DNs in non-strict mode are routed to the default handler\n  const testDN = (typeof (req.dn) === 'string') ? '' : req.dn\n\n  for (let i = 0; i < keys.length; i++) {\n    const suffix = keys[i]\n    route = routes[suffix]\n    assert.ok(route.dn)\n    // Match a valid route or the route wildcard ('')\n    if (route.dn.equals(testDN) || route.dn.parentOf(testDN) || suffix === '') {\n      if (route[op]) {\n        // We should be good to go.\n        req.suffix = route.dn\n        return {\n          backend: route.backend,\n          handlers: route[op]\n        }\n      } else {\n        if (suffix === '') {\n          break\n        } else {\n          // We found a valid suffix but not a valid operation.\n          // There might be a more generic suffix with a legitimate operation.\n          fallbackHandler = [defaultHandler]\n        }\n      }\n    }\n  }\n  return {\n    backend: self,\n    handlers: fallbackHandler\n  }\n}\n\nServer.prototype._mount = function (op, name, argv, notDN) {\n  assert.ok(op)\n  assert.ok(name !== undefined)\n  assert.ok(argv)\n\n  if (typeof (name) !== 'string') { throw new TypeError('name (string) required') }\n  if (!argv.length) { throw new Error('at least one handler required') }\n\n  let backend = this\n  let index = 0\n\n  if (typeof (argv[0]) === 'object' && !Array.isArray(argv[0])) {\n    backend = argv[0]\n    index = 1\n  }\n  const route = this._getRoute(notDN ? name : dn.parse(name), backend)\n\n  const chain = this._chain.slice()\n  argv.slice(index).forEach(function (a) {\n    chain.push(a)\n  })\n  route['0x' + op.toString(16)] = mergeFunctionArgs(chain)\n\n  return this\n}\n", "/// --- Globals\n\n// var parseDN = require('./dn').parse\n\nconst EntryChangeNotificationControl =\n  require('./controls').EntryChangeNotificationControl\n\n/// --- API\n\n// Cache used to store connected persistent search clients\nfunction PersistentSearch () {\n  this.clientList = []\n}\n\nPersistentSearch.prototype.addClient = function (req, res, callback) {\n  if (typeof (req) !== 'object') { throw new TypeError('req must be an object') }\n  if (typeof (res) !== 'object') { throw new TypeError('res must be an object') }\n  if (callback && typeof (callback) !== 'function') { throw new TypeError('callback must be a function') }\n\n  const log = req.log\n\n  const client = {}\n  client.req = req\n  client.res = res\n\n  log.debug('%s storing client', req.logId)\n\n  this.clientList.push(client)\n\n  log.debug('%s stored client', req.logId)\n  log.debug('%s total number of clients %s',\n    req.logId, this.clientList.length)\n  if (callback) { callback(client) }\n}\n\nPersistentSearch.prototype.removeClient = function (req, res, callback) {\n  if (typeof (req) !== 'object') { throw new TypeError('req must be an object') }\n  if (typeof (res) !== 'object') { throw new TypeError('res must be an object') }\n  if (callback && typeof (callback) !== 'function') { throw new TypeError('callback must be a function') }\n\n  const log = req.log\n  log.debug('%s removing client', req.logId)\n  const client = {}\n  client.req = req\n  client.res = res\n\n  // remove the client if it exists\n  this.clientList.forEach(function (element, index, array) {\n    if (element.req === client.req) {\n      log.debug('%s removing client from list', req.logId)\n      array.splice(index, 1)\n    }\n  })\n\n  log.debug('%s number of persistent search clients %s',\n    req.logId, this.clientList.length)\n  if (callback) { callback(client) }\n}\n\nfunction getOperationType (requestType) {\n  switch (requestType) {\n    case 'AddRequest':\n    case 'add':\n      return 1\n    case 'DeleteRequest':\n    case 'delete':\n      return 2\n    case 'ModifyRequest':\n    case 'modify':\n      return 4\n    case 'ModifyDNRequest':\n    case 'modrdn':\n      return 8\n    default:\n      throw new TypeError('requestType %s, is an invalid request type',\n        requestType)\n  }\n}\n\nfunction getEntryChangeNotificationControl (req, obj) {\n  // if we want to return a ECNC\n  if (req.persistentSearch.value.returnECs) {\n    const attrs = obj.attributes\n    const value = {}\n    value.changeType = getOperationType(attrs.changetype)\n    // if it's a modDN request, fill in the previous DN\n    if (value.changeType === 8 && attrs.previousDN) {\n      value.previousDN = attrs.previousDN\n    }\n\n    value.changeNumber = attrs.changenumber\n    return new EntryChangeNotificationControl({ value: value })\n  } else {\n    return false\n  }\n}\n\nfunction checkChangeType (req, requestType) {\n  return (req.persistentSearch.value.changeTypes &\n          getOperationType(requestType))\n}\n\n/// --- Exports\n\nmodule.exports = {\n  PersistentSearchCache: PersistentSearch,\n  checkChangeType: checkChangeType,\n  getEntryChangeNotificationControl: getEntryChangeNotificationControl\n}\n", "// Copyright 2011 Mark Cavage, Inc.  All rights reserved.\n\nconst logger = require('./logger')\n\nconst client = require('./client')\nconst Attribute = require('./attribute')\nconst Change = require('./change')\nconst Protocol = require('./protocol')\nconst Server = require('./server')\n\nconst controls = require('./controls')\nconst persistentSearch = require('./persistent_search')\nconst dn = require('./dn')\nconst errors = require('./errors')\nconst filters = require('./filters')\nconst messages = require('./messages')\nconst url = require('./url')\n\nconst hasOwnProperty = (target, val) => Object.prototype.hasOwnProperty.call(target, val)\n\n/// --- API\n\nmodule.exports = {\n  Client: client.Client,\n  createClient: client.createClient,\n\n  Server: Server,\n  createServer: function (options) {\n    if (options === undefined) { options = {} }\n\n    if (typeof (options) !== 'object') { throw new TypeError('options (object) required') }\n\n    if (!options.log) {\n      options.log = logger\n    }\n\n    return new Server(options)\n  },\n\n  Attribute: Attribute,\n  Change: Change,\n\n  dn: dn,\n  DN: dn.DN,\n  RDN: dn.RDN,\n  parseDN: dn.parse,\n\n  persistentSearch: persistentSearch,\n  PersistentSearchCache: persistentSearch.PersistentSearchCache,\n\n  filters: filters,\n  parseFilter: filters.parseString,\n\n  url: url,\n  parseURL: url.parse\n}\n\n/// --- Export all the childrenz\n\nlet k\n\nfor (k in Protocol) {\n  if (hasOwnProperty(Protocol, k)) { module.exports[k] = Protocol[k] }\n}\n\nfor (k in messages) {\n  if (hasOwnProperty(messages, k)) { module.exports[k] = messages[k] }\n}\n\nfor (k in controls) {\n  if (hasOwnProperty(controls, k)) { module.exports[k] = controls[k] }\n}\n\nfor (k in filters) {\n  if (hasOwnProperty(filters, k)) {\n    if (k !== 'parse' && k !== 'parseString') { module.exports[k] = filters[k] }\n  }\n}\n\nfor (k in errors) {\n  if (hasOwnProperty(errors, k)) {\n    module.exports[k] = errors[k]\n  }\n}\n", "/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nfunction apply(fn, ...args) {\n    return (...callArgs) => fn(...args,...callArgs);\n}\n\nfunction initialParams (fn) {\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n}\n\n/* istanbul ignore file */\n\nvar hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasQueueMicrotask) {\n    _defer = queueMicrotask;\n} else if (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if (isAsync(func)) {\n        return function (...args/*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback)\n        }\n    }\n\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback)\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        setImmediate$1(e => { throw e }, err);\n    }\n}\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function')\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify (asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined')\n    function awaitable (...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args)\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err)\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        })\n    }\n\n    return awaitable\n}\n\nfunction applyEach (eachfn) {\n    return function applyEach(fns, ...callArgs) {\n        const go = awaitify(function (callback) {\n            var that = this;\n            return eachfn(fns, (fn, cb) => {\n                wrapAsync(fn).apply(that, callArgs.concat(cb));\n            }, callback);\n        });\n        return go;\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\n\nfunction isArrayLike(value) {\n    return value &&\n        typeof value.length === 'number' &&\n        value.length >= 0 &&\n        value.length % 1 === 0;\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\n\nfunction once(fn) {\n    function wrapper (...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper\n}\n\nfunction getIterator (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        if (key === '__proto__') {\n            return next();\n        }\n        return i < len ? {value: obj[key], key} : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({value, done: iterDone}) => {\n            //console.log('got value', value)\n            if (canceled || done) return\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return\n        if (err) return handleError(err)\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return\n        }\n\n        if (result === breakLoop || (done && running <= 0)) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\n\nvar eachOfLimit = (limit) => {\n    return (obj, iteratee, callback) => {\n        callback = once(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1')\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if (isAsyncGenerator(obj)) {\n            return asyncEachOfLimit(obj, limit, iteratee, callback)\n        }\n        if (isAsyncIterable(obj)) {\n            return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n        }\n        var nextElem = createIterator(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (err === false) {\n                done = true;\n                canceled = true;\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback);\n    var index = 0,\n        completed = 0,\n        {length} = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric (coll, iteratee, callback) {\n    return eachOfLimit$2(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dev.json is a file containing a valid json object config for dev environment\n * // dev.json is a file containing a valid json object config for test environment\n * // prod.json is a file containing a valid json object config for prod environment\n * // invalid.json is a file with a malformed json object\n *\n * let configs = {}; //global variable\n * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n *\n * // asynchronous function that reads a json file and parses the contents as json object\n * function parseFile(file, key, callback) {\n *     fs.readFile(file, \"utf8\", function(err, data) {\n *         if (err) return calback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }\n *\n * // Using callbacks\n * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *     } else {\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *         // JSON parse error exception\n *     } else {\n *         console.log(configs);\n *     }\n * });\n *\n * // Using Promises\n * async.forEachOf(validConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n *     // configs is now a map of JSON data, e.g.\n *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n * }).catch( err => {\n *     console.error(err);\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n * }).catch( err => {\n *     console.error(err);\n *     // JSON parse error exception\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * //Error handing\n * async () => {\n *     try {\n *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n *         console.log(configs);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // JSON parse error exception\n *     }\n * }\n *\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOf$1 = awaitify(eachOf, 3);\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callbacks\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.map(fileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(results);\n *     }\n * });\n *\n * // Using Promises\n * async.map(fileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now an array of the file size in bytes for each file, e.g.\n *     // [ 1000, 2000, 3000]\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.map(fileList, getFileSizeInBytes);\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction map (coll, iteratee, callback) {\n    return _asyncMap(eachOf$1, coll, iteratee, callback)\n}\nvar map$1 = awaitify(map, 3);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional. The results\n * for each of the applied async functions are passed to the final callback\n * as an array.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - Returns a function that takes no args other than\n * an optional callback, that is the result of applying the `args` to each\n * of the functions.\n * @example\n *\n * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n *\n * appliedFn((err, results) => {\n *     // results[0] is the results for `enableSearch`\n *     // results[1] is the results for `updateSchema`\n * });\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n *     callback\n * );\n */\nvar applyEach$1 = applyEach(map$1);\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n    return eachOfLimit$2(coll, 1, iteratee, callback)\n}\nvar eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapSeries (coll, iteratee, callback) {\n    return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n}\nvar mapSeries$1 = awaitify(mapSeries, 3);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - A function, that when called, is the result of\n * appling the `args` to the list of functions.  It takes no args, other than\n * a callback.\n */\nvar applyEachSeries = applyEach(mapSeries$1);\n\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback () {\n    let resolve, reject;\n    function callback (err, ...args) {\n        if (err) return reject(err)\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res,\n        reject = rej;\n    });\n\n    return callback\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n * @example\n *\n * //Using Callbacks\n * async.auto({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     if (err) {\n *         console.log('err = ', err);\n *     }\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * });\n *\n * //Using Promises\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }).then(results => {\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * }).catch(err => {\n *     console.log('err = ', err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.auto({\n *             get_data: function(callback) {\n *                 // async code to get some data\n *                 callback(null, 'data', 'converted to array');\n *             },\n *             make_folder: function(callback) {\n *                 // async code to create a directory to store a file in\n *                 // this is run at the same time as getting the data\n *                 callback(null, 'folder');\n *             },\n *             write_file: ['get_data', 'make_folder', function(results, callback) {\n *                 // once there is some data and the directory exists,\n *                 // write the data to a file in the directory\n *                 callback(null, 'filename');\n *             }],\n *             email_link: ['write_file', function(results, callback) {\n *                 // once the file is written let's email a link to it...\n *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *             }]\n *         });\n *         console.log('results = ', results);\n *         // results = {\n *         //     get_data: ['data', 'converted to array']\n *         //     make_folder; 'folder',\n *         //     write_file: 'filename'\n *         //     email_link: { file: 'filename', email: 'user@example.com' }\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction auto(tasks, concurrency, callback) {\n    if (typeof concurrency !== 'number') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || promiseCallback());\n    var numTasks = Object.keys(tasks).length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var canceled = false;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    Object.keys(tasks).forEach(key => {\n        var task = tasks[key];\n        if (!Array.isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        dependencies.forEach(dependencyName => {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, () => {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(() => runTask(key, task));\n    }\n\n    function processQueue() {\n        if (canceled) return\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        taskListeners.forEach(fn => fn());\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce((err, ...result) => {\n            runningTasks--;\n            if (err === false) {\n                canceled = true;\n                return\n            }\n            if (result.length < 2) {\n                [result] = result;\n            }\n            if (err) {\n                var safeResults = {};\n                Object.keys(results).forEach(rkey => {\n                    safeResults[rkey] = results[rkey];\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n                if (canceled) return\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            getDependents(currentTask).forEach(dependent => {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        Object.keys(tasks).forEach(key => {\n            const task = tasks[key];\n            if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n\n    return callback[PROMISE_SYMBOL]\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\nvar ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\n\nfunction stripComments(string) {\n    let stripped = '';\n    let index = 0;\n    let endBlockComment = string.indexOf('*/');\n    while (index < string.length) {\n        if (string[index] === '/' && string[index+1] === '/') {\n            // inline comment\n            let endIndex = string.indexOf('\\n', index);\n            index = (endIndex === -1) ? string.length : endIndex;\n        } else if ((endBlockComment !== -1) && (string[index] === '/') && (string[index+1] === '*')) {\n            // block comment\n            let endIndex = string.indexOf('*/', index);\n            if (endIndex !== -1) {\n                index = endIndex + 2;\n                endBlockComment = string.indexOf('*/', index);\n            } else {\n                stripped += string[index];\n                index++;\n            }\n        } else {\n            stripped += string[index];\n            index++;\n        }\n    }\n    return stripped;\n}\n\nfunction parseParams(func) {\n    const src = stripComments(func.toString());\n    let match = src.match(FN_ARGS);\n    if (!match) {\n        match = src.match(ARROW_FN_ARGS);\n    }\n    if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n    let [, args] = match;\n    return args\n        .replace(/\\s/g, '')\n        .split(FN_ARG_SPLIT)\n        .map((arg) => arg.replace(FN_ARG, '').trim());\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    Object.keys(tasks).forEach(key => {\n        var taskFn = tasks[key];\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (Array.isArray(taskFn)) {\n            params = [...taskFn];\n            taskFn = params.pop();\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = params.map(name => results[name]);\n            newArgs.push(taskCb);\n            wrapAsync(taskFn)(...newArgs);\n        }\n    });\n\n    return auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nclass DLL {\n    constructor() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    removeLink(node) {\n        if (node.prev) node.prev.next = node.next;\n        else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;\n        else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    }\n\n    empty () {\n        while(this.head) this.shift();\n        return this;\n    }\n\n    insertAfter(node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;\n        else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    }\n\n    insertBefore(node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;\n        else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    }\n\n    unshift(node) {\n        if (this.head) this.insertBefore(this.head, node);\n        else setInitial(this, node);\n    }\n\n    push(node) {\n        if (this.tail) this.insertAfter(this.tail, node);\n        else setInitial(this, node);\n    }\n\n    shift() {\n        return this.head && this.removeLink(this.head);\n    }\n\n    pop() {\n        return this.tail && this.removeLink(this.tail);\n    }\n\n    toArray() {\n        return [...this]\n    }\n\n    *[Symbol.iterator] () {\n        var cur = this.head;\n        while (cur) {\n            yield cur.data;\n            cur = cur.next;\n        }\n    }\n\n    remove (testFn) {\n        var curr = this.head;\n        while(curr) {\n            var {next} = curr;\n            if (testFn(curr)) {\n                this.removeLink(curr);\n            }\n            curr = next;\n        }\n        return this;\n    }\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new RangeError('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n    const events = {\n        error: [],\n        drain: [],\n        saturated: [],\n        unsaturated: [],\n        empty: []\n    };\n\n    function on (event, handler) {\n        events[event].push(handler);\n    }\n\n    function once (event, handler) {\n        const handleAndRemove = (...args) => {\n            off(event, handleAndRemove);\n            handler(...args);\n        };\n        events[event].push(handleAndRemove);\n    }\n\n    function off (event, handler) {\n        if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n        if (!handler) return events[event] = []\n        events[event] = events[event].filter(ev => ev !== handler);\n    }\n\n    function trigger (event, ...args) {\n        events[event].forEach(handler => handler(...args));\n    }\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, rejectOnError, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n\n        var res, rej;\n        function promiseCallback (err, ...args) {\n            // we don't care about the error, let the global error handler\n            // deal with it\n            if (err) return rejectOnError ? rej(err) : res()\n            if (args.length <= 1) return res(args[0])\n            res(args);\n        }\n\n        var item = q._createTaskItem(\n            data,\n            rejectOnError ? promiseCallback :\n                (callback || promiseCallback)\n        );\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n\n        if (rejectOnError || !callback) {\n            return new Promise((resolve, reject) => {\n                res = resolve;\n                rej = reject;\n            })\n        }\n    }\n\n    function _createCB(tasks) {\n        return function (err, ...args) {\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = workersList.indexOf(task);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback(err, ...args);\n\n                if (err != null) {\n                    trigger('error', err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                trigger('unsaturated');\n            }\n\n            if (q.idle()) {\n                trigger('drain');\n            }\n            q.process();\n        };\n    }\n\n    function _maybeDrain(data) {\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            setImmediate$1(() => trigger('drain'));\n            return true\n        }\n        return false\n    }\n\n    const eventMethod = (name) => (handler) => {\n        if (!handler) {\n            return new Promise((resolve, reject) => {\n                once(name, (err, data) => {\n                    if (err) return reject(err)\n                    resolve(data);\n                });\n            })\n        }\n        off(name);\n        on(name, handler);\n\n    };\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        _createTaskItem (data, callback) {\n            return {\n                data,\n                callback\n            };\n        },\n        *[Symbol.iterator] () {\n            yield* q._tasks[Symbol.iterator]();\n        },\n        concurrency,\n        payload,\n        buffer: concurrency / 4,\n        started: false,\n        paused: false,\n        push (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, false, callback))\n            }\n            return _insert(data, false, false, callback);\n        },\n        pushAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, true, callback))\n            }\n            return _insert(data, false, true, callback);\n        },\n        kill () {\n            off();\n            q._tasks.empty();\n        },\n        unshift (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, false, callback))\n            }\n            return _insert(data, true, false, callback);\n        },\n        unshiftAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, true, callback))\n            }\n            return _insert(data, true, true, callback);\n        },\n        remove (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    trigger('empty');\n                }\n\n                if (numRunning === q.concurrency) {\n                    trigger('saturated');\n                }\n\n                var cb = onlyOnce(_createCB(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length () {\n            return q._tasks.length;\n        },\n        running () {\n            return numRunning;\n        },\n        workersList () {\n            return workersList;\n        },\n        idle() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause () {\n            q.paused = true;\n        },\n        resume () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    // define these as fixed properties, so people get useful errors when updating\n    Object.defineProperties(q, {\n        saturated: {\n            writable: false,\n            value: eventMethod('saturated')\n        },\n        unsaturated: {\n            writable: false,\n            value: eventMethod('unsaturated')\n        },\n        empty: {\n            writable: false,\n            value: eventMethod('empty')\n        },\n        drain: {\n            writable: false,\n            value: eventMethod('drain')\n        },\n        error: {\n            writable: false,\n            value: eventMethod('error')\n        },\n    });\n    return q;\n}\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * await cargo.push({name: 'baz'});\n * console.log('finished processing baz');\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n * If the all `workers` are in progress, the task is queued until one becomes available. Once\n * a `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n * the cargoQueue passes an array of tasks to multiple parallel workers.\n *\n * @name cargoQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @see [async.cargo]{@link module:ControlFLow.cargo}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargoQueue and inner queue.\n * @example\n *\n * // create a cargoQueue object with payload 2 and concurrency 2\n * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2, 2);\n *\n * // add some items\n * cargoQueue.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargoQueue.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargoQueue.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n * cargoQueue.push({name: 'boo'}, function(err) {\n *     console.log('finished processing boo');\n * });\n */\nfunction cargo$1(worker, concurrency, payload) {\n    return queue(worker, concurrency, payload);\n}\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n *\n * // asynchronous function that computes the file size in bytes\n * // file size is added to the memoized value, then returned\n * function getFileSizeInBytes(memo, file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, memo + stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.reduce(fileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // 6000\n *     // which is the sum of the file sizes of the three files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback);\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfSeries$1(coll, (x, i, iterCb) => {\n        _iteratee(memo, x, (err, v) => {\n            memo = v;\n            iterCb(err);\n        });\n    }, err => callback(err, memo));\n}\nvar reduce$1 = awaitify(reduce, 4);\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         User.get.bind(User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(...functions) {\n    var _functions = functions.map(wrapAsync);\n    return function (...args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = promiseCallback();\n        }\n\n        reduce$1(_functions, args, (newargs, fn, iterCb) => {\n            fn.apply(that, newargs.concat((err, ...nextargs) => {\n                iterCb(err, nextargs);\n            }));\n        },\n        (err, results) => cb(err, ...results));\n\n        return cb[PROMISE_SYMBOL]\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * If the last argument to the composed function is not a function, a promise\n * is returned when you call it.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nfunction compose(...args) {\n    return seq(...args.reverse());\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapLimit (coll, limit, iteratee, callback) {\n    return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar mapLimit$1 = awaitify(mapLimit, 4);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapLimit\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, ...args) => {\n            if (err) return iterCb(err);\n            return iterCb(err, args);\n        });\n    }, (err, mapResults) => {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = result.concat(...mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n}\nvar concatLimit$1 = awaitify(concatLimit, 4);\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. The results array will be returned in\n * the original order of `coll` passed to the `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @alias flatMap\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * let directoryList = ['dir1','dir2','dir3'];\n * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n *\n * // Using callbacks\n * async.concat(directoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *    }\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *        // [ Error: ENOENT: no such file or directory ]\n *        // since dir4 does not exist\n *    } else {\n *        console.log(results);\n *    }\n * });\n *\n * // Using Promises\n * async.concat(directoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n * }).catch(err => {\n *      console.log(err);\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n * }).catch(err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4 does not exist\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.concat(directoryList, fs.readdir);\n *         console.log(results);\n *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *     } catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n *         console.log(results);\n *     } catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4 does not exist\n *     }\n * }\n *\n */\nfunction concat(coll, iteratee, callback) {\n    return concatLimit$1(coll, Infinity, iteratee, callback)\n}\nvar concat$1 = awaitify(concat, 3);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n    return concatLimit$1(coll, 1, iteratee, callback)\n}\nvar concatSeries$1 = awaitify(concatSeries, 3);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nfunction constant(...args) {\n    return function (...ignoredArgs/*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n}\n\nfunction _createTester(check, getResult) {\n    return (eachfn, arr, _iteratee, cb) => {\n        var testPassed = false;\n        var testResult;\n        const iteratee = wrapAsync(_iteratee);\n        eachfn(arr, (value, _, callback) => {\n            iteratee(value, (err, result) => {\n                if (err || err === false) return callback(err);\n\n                if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    return callback(null, breakLoop);\n                }\n                callback();\n            });\n        }, err => {\n            if (err) return cb(err);\n            cb(null, testPassed ? testResult : getResult(false));\n        });\n    };\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // dir1/file1.txt\n *        // result now equals the first file in the list that exists\n *    }\n *);\n *\n * // Using Promises\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n * .then(result => {\n *     console.log(result);\n *     // dir1/file1.txt\n *     // result now equals the first file in the list that exists\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n *         console.log(result);\n *         // dir1/file1.txt\n *         // result now equals the file in the list that exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction detect(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n}\nvar detect$1 = awaitify(detect, 3);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction detectLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar detectLimit$1 = awaitify(detectLimit, 4);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction detectSeries(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n}\n\nvar detectSeries$1 = awaitify(detectSeries, 3);\n\nfunction consoleFunc(name) {\n    return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n        /* istanbul ignore else */\n        if (typeof console === 'object') {\n            /* istanbul ignore else */\n            if (err) {\n                /* istanbul ignore else */\n                if (console.error) {\n                    console.error(err);\n                }\n            } else if (console[name]) { /* istanbul ignore else */\n                resultArgs.forEach(x => console[name](x));\n            }\n        }\n    })\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results;\n\n    function next(err, ...args) {\n        if (err) return callback(err);\n        if (err === false) return;\n        results = args;\n        _test(...args, check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return check(null, true);\n}\n\nvar doWhilst$1 = awaitify(doWhilst, 3);\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doUntil(iteratee, test, callback) {\n    const _test = wrapAsync(test);\n    return doWhilst$1(iteratee, (...args) => {\n        const cb = args.pop();\n        _test(...args, (err, truth) => cb (err, !truth));\n    }, callback);\n}\n\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n *\n * // asynchronous function that deletes a file\n * const deleteFile = function(file, callback) {\n *     fs.unlink(file, callback);\n * };\n *\n * // Using callbacks\n * async.each(fileList, deleteFile, function(err) {\n *     if( err ) {\n *         console.log(err);\n *     } else {\n *         console.log('All files have been deleted successfully');\n *     }\n * });\n *\n * // Error Handling\n * async.each(withMissingFileList, deleteFile, function(err){\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using Promises\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         await async.each(files, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         await async.each(withMissingFileList, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4/file2.txt does not exist\n *         // dir1/file1.txt could have been deleted\n *     }\n * }\n *\n */\nfunction eachLimit(coll, iteratee, callback) {\n    return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\nvar each = awaitify(eachLimit, 3);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\nvar eachLimit$2 = awaitify(eachLimit$1, 4);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n    return eachLimit$2(coll, 1, iteratee, callback)\n}\nvar eachSeries$1 = awaitify(eachSeries, 3);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        var sync = true;\n        args.push((...innerArgs) => {\n            if (sync) {\n                setImmediate$1(() => callback(...innerArgs));\n            } else {\n                callback(...innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    };\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.every(fileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * });\n *\n * async.every(withMissingFileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * });\n *\n * // Using Promises\n * async.every(fileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.every(withMissingFileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.every(fileList, fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.every(withMissingFileList, fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since NOT every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction every(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n}\nvar every$1 = awaitify(every, 3);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar everyLimit$1 = awaitify(everyLimit, 4);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everySeries(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar everySeries$1 = awaitify(everySeries, 3);\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            truthValues[index] = !!v;\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            if (err) return iterCb(err);\n            if (v) {\n                results.push({index, value: x});\n            }\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        callback(null, results\n            .sort((a, b) => a.index - b.index)\n            .map(v => v.value));\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    return filter(eachfn, coll, wrapAsync(iteratee), callback);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.filter(files, fileExists, function(err, results) {\n *    if(err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *        // results is now an array of the existing files\n *    }\n * });\n *\n * // Using Promises\n * async.filter(files, fileExists)\n * .then(results => {\n *     console.log(results);\n *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *     // results is now an array of the existing files\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.filter(files, fileExists);\n *         console.log(results);\n *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *         // results is now an array of the existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction filter (coll, iteratee, callback) {\n    return _filter(eachOf$1, coll, iteratee, callback)\n}\nvar filter$1 = awaitify(filter, 3);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterLimit (coll, limit, iteratee, callback) {\n    return _filter(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar filterLimit$1 = awaitify(filterLimit, 4);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterSeries (coll, iteratee, callback) {\n    return _filter(eachOfSeries$1, coll, iteratee, callback)\n}\nvar filterSeries$1 = awaitify(filterSeries, 3);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nvar forever$1 = awaitify(forever, 2);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupByLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, key) => {\n            if (err) return iterCb(err);\n            return iterCb(err, {key, val});\n        });\n    }, (err, mapResults) => {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var {hasOwnProperty} = Object.prototype;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var {key} = mapResults[i];\n                var {val} = mapResults[i];\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n}\n\nvar groupByLimit$1 = awaitify(groupByLimit, 4);\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const files = ['dir1/file1.txt','dir2','dir4']\n *\n * // asynchronous function that detects file type as none, file, or directory\n * function detectFile(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(null, 'none');\n *         }\n *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n *     });\n * }\n *\n * //Using callbacks\n * async.groupBy(files, detectFile, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *\t       console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n * });\n *\n * // Using Promises\n * async.groupBy(files, detectFile)\n * .then( result => {\n *     console.log(result);\n *     // {\n *     //     file: [ 'dir1/file1.txt' ],\n *     //     none: [ 'dir4' ],\n *     //     directory: [ 'dir2']\n *     // }\n *     // result is object containing the files grouped by type\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.groupBy(files, detectFile);\n *         console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction groupBy (coll, iteratee, callback) {\n    return groupByLimit$1(coll, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whose\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries (coll, iteratee, callback) {\n    return groupByLimit$1(coll, 1, iteratee, callback)\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfLimit(limit)(obj, (val, key, next) => {\n        _iteratee(val, key, (err, result) => {\n            if (err) return next(err);\n            newObj[key] = result;\n            next(err);\n        });\n    }, err => callback(err, newObj));\n}\n\nvar mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file3.txt'\n * };\n *\n * const withMissingFileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file4.txt'\n * };\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, key, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n * });\n *\n * // Error handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.mapValues(fileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // result is now a map of file size in bytes for each file, e.g.\n *     // {\n *     //     f1: 1000,\n *     //     f2: 2000,\n *     //     f3: 3000\n *     // }\n * }).catch (err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch (err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction mapValues(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesSeries(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, 1, iteratee, callback)\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            setImmediate$1(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/* istanbul ignore file */\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nvar parallel = awaitify((eachfn, tasks, callback) => {\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        wrapAsync(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n *\n * //Using Callbacks\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.parallel([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two'] even though\n *         // the second function had a shorter timeout.\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction parallel$1(tasks, callback) {\n    return parallel(eachOf$1, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n */\nfunction parallelLimit(tasks, limit, callback) {\n    return parallel(eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Iterable} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {number} payload - an integer that specifies how many items are\n * passed to the worker function at a time. only applies if this is a\n * [cargo]{@link module:ControlFlow.cargo} object\n * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n * a promise that rejects if an error occurs.\n * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n * a promise that rejects if an error occurs.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a function that sets a callback that is\n * called when the number of running workers hits the `concurrency` limit, and\n * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n * returns a promise for the next occurrence.\n * @property {Function} unsaturated - a function that sets a callback that is\n * called when the number of running workers is less than the `concurrency` &\n * `buffer` limits, and further tasks will not be queued. If the callback is\n * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a function that sets a callback that is called\n * when the last item from the `queue` is given to a `worker`. If the callback\n * is omitted, `q.empty()` returns a promise for the next occurrence.\n * @property {Function} drain - a function that sets a callback that is called\n * when the last item from the `queue` has returned from the `worker`. If the\n * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n * @property {Function} error - a function that sets a callback that is called\n * when a task errors. Has the signature `function(error, task)`. If the\n * callback is omitted, `error()` returns a promise that rejects on the next\n * error.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n *\n * @example\n * const q = async.queue(worker, 2)\n * q.push(item1)\n * q.push(item2)\n * q.push(item3)\n * // queues are iterable, spread into an array to inspect\n * const items = [...q] // [item1, item2, item3]\n * // or use for of\n * for (let item of q) {\n *     console.log(item)\n * }\n *\n * q.drain(() => {\n *     console.log('all done')\n * })\n * // or\n * await q.drain()\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain(function() {\n *     console.log('all items have been processed');\n * });\n * // or await the end\n * await q.drain()\n *\n * // assign an error callback\n * q.error(function(err, task) {\n *     console.error('task experienced an error');\n * });\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * // callback is optional\n * q.push({name: 'bar'});\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nfunction queue$1 (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue((items, cb) => {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n}\n\n// Binary min-heap implementation used for priority queue.\n// Implementation is stable, i.e. push time is considered for equal priorities\nclass Heap {\n    constructor() {\n        this.heap = [];\n        this.pushCount = Number.MIN_SAFE_INTEGER;\n    }\n\n    get length() {\n        return this.heap.length;\n    }\n\n    empty () {\n        this.heap = [];\n        return this;\n    }\n\n    percUp(index) {\n        let p;\n\n        while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n            let t = this.heap[index];\n            this.heap[index] = this.heap[p];\n            this.heap[p] = t;\n\n            index = p;\n        }\n    }\n\n    percDown(index) {\n        let l;\n\n        while ((l=leftChi(index)) < this.heap.length) {\n            if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                l = l+1;\n            }\n\n            if (smaller(this.heap[index], this.heap[l])) {\n                break;\n            }\n\n            let t = this.heap[index];\n            this.heap[index] = this.heap[l];\n            this.heap[l] = t;\n\n            index = l;\n        }\n    }\n\n    push(node) {\n        node.pushCount = ++this.pushCount;\n        this.heap.push(node);\n        this.percUp(this.heap.length-1);\n    }\n\n    unshift(node) {\n        return this.heap.push(node);\n    }\n\n    shift() {\n        let [top] = this.heap;\n\n        this.heap[0] = this.heap[this.heap.length-1];\n        this.heap.pop();\n        this.percDown(0);\n\n        return top;\n    }\n\n    toArray() {\n        return [...this];\n    }\n\n    *[Symbol.iterator] () {\n        for (let i = 0; i < this.heap.length; i++) {\n            yield this.heap[i].data;\n        }\n    }\n\n    remove (testFn) {\n        let j = 0;\n        for (let i = 0; i < this.heap.length; i++) {\n            if (!testFn(this.heap[i])) {\n                this.heap[j] = this.heap[i];\n                j++;\n            }\n        }\n\n        this.heap.splice(j);\n\n        for (let i = parent(this.heap.length-1); i >= 0; i--) {\n            this.percDown(i);\n        }\n\n        return this;\n    }\n}\n\nfunction leftChi(i) {\n    return (i<<1)+1;\n}\n\nfunction parent(i) {\n    return ((i+1)>>1)-1;\n}\n\nfunction smaller(x, y) {\n    if (x.priority !== y.priority) {\n        return x.priority < y.priority;\n    }\n    else {\n        return x.pushCount < y.pushCount;\n    }\n}\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are three\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * `pushAsync(task, priority, [callback])` - the same as `priorityQueue.push`,\n *   except this returns a promise that rejects if an error occurs.\n * * The `unshift` and `unshiftAsync` methods were removed.\n */\nfunction priorityQueue(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    var {\n        push,\n        pushAsync\n    } = q;\n\n    q._tasks = new Heap();\n    q._createTaskItem = ({data, priority}, callback) => {\n        return {\n            data,\n            priority,\n            callback\n        };\n    };\n\n    function createDataItems(tasks, priority) {\n        if (!Array.isArray(tasks)) {\n            return {data: tasks, priority};\n        }\n        return tasks.map(data => { return {data, priority}; });\n    }\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority = 0, callback) {\n        return push(createDataItems(data, priority), callback);\n    };\n\n    q.pushAsync = function(data, priority = 0, callback) {\n        return pushAsync(createDataItems(data, priority), callback);\n    };\n\n    // Remove unshift functions\n    delete q.unshift;\n    delete q.unshiftAsync;\n\n    return q;\n}\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\nvar race$1 = awaitify(race, 2);\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = [...array].reverse();\n    return reduce$1(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0){\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (Array.isArray(tasks)) {\n        results = tasks.map(reflect);\n    } else {\n        results = {};\n        Object.keys(tasks).forEach(key => {\n            results[key] = reflect.call(this, tasks[key]);\n        });\n    }\n    return results;\n}\n\nfunction reject(eachfn, arr, _iteratee, callback) {\n    const iteratee = wrapAsync(_iteratee);\n    return _filter(eachfn, arr, (value, cb) => {\n        iteratee(value, (err, v) => {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.reject(fileList, fileExists, function(err, results) {\n *    // [ 'dir3/file6.txt' ]\n *    // results now equals an array of the non-existing files\n * });\n *\n * // Using Promises\n * async.reject(fileList, fileExists)\n * .then( results => {\n *     console.log(results);\n *     // [ 'dir3/file6.txt' ]\n *     // results now equals an array of the non-existing files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.reject(fileList, fileExists);\n *         console.log(results);\n *         // [ 'dir3/file6.txt' ]\n *         // results now equals an array of the non-existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction reject$1 (coll, iteratee, callback) {\n    return reject(eachOf$1, coll, iteratee, callback)\n}\nvar reject$2 = awaitify(reject$1, 3);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectLimit (coll, limit, iteratee, callback) {\n    return reject(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar rejectLimit$1 = awaitify(rejectLimit, 4);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectSeries (coll, iteratee, callback) {\n    return reject(eachOfSeries$1, coll, iteratee, callback)\n}\nvar rejectSeries$1 = awaitify(rejectSeries, 3);\n\nfunction constant$1(value) {\n    return function () {\n        return value;\n    }\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || promiseCallback();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || promiseCallback();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[PROMISE_SYMBOL]\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ?\n            t.interval :\n            constant$1(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = (opts && opts.arity) || task.length;\n    if (isAsync(task)) {\n        arity += 1;\n    }\n    var _task = wrapAsync(task);\n    return initialParams((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = promiseCallback();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n        return callback[PROMISE_SYMBOL]\n    });\n}\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n *\n * //Using Callbacks\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * });\n *\n * // an example using objects instead of arrays\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.series([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction series(tasks, callback) {\n    return parallel(eachOfSeries$1, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // true\n *        // result is true since some file in the list exists\n *    }\n *);\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // false\n *        // result is false since none of the files exists\n *    }\n *);\n *\n * // Using Promises\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since some file in the list exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since none of the files exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since some file in the list exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since none of the files exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction some(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n}\nvar some$1 = awaitify(some, 3);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someLimit(coll, limit, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar someLimit$1 = awaitify(someLimit, 4);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someSeries(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar someSeries$1 = awaitify(someSeries, 3);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback passed\n * @example\n *\n * // bigfile.txt is a file that is 251100 bytes in size\n * // mediumfile.txt is a file that is 11000 bytes in size\n * // smallfile.txt is a file that is 121 bytes in size\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) return callback(getFileSizeErr);\n *         callback(null, fileSize);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // descending order\n * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) {\n *             return callback(getFileSizeErr);\n *         }\n *         callback(null, fileSize * -1);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n *         }\n *     }\n * );\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *             // [ Error: ENOENT: no such file or directory ]\n *         } else {\n *             console.log(results);\n *         }\n *     }\n * );\n *\n * // Using Promises\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now the original array of files sorted by\n *     // file size (ascending by default), e.g.\n *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *         // results is now the original array of files sorted by\n *         // file size (ascending by default), e.g.\n *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * // Error handling\n * async () => {\n *     try {\n *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return map$1(coll, (x, iterCb) => {\n        _iteratee(x, (err, criteria) => {\n            if (err) return iterCb(err);\n            iterCb(err, {value: x, criteria});\n        });\n    }, (err, results) => {\n        if (err) return callback(err);\n        callback(null, results.sort(comparator).map(v => v.value));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nvar sortBy$1 = awaitify(sortBy, 3);\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams((args, callback) => {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push((...cbArgs) => {\n            if (!timedOut) {\n                callback(...cbArgs);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn(...args);\n    });\n}\n\nfunction range(size) {\n    var result = Array(size);\n    while (size--) {\n        result[size] = size;\n    }\n    return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(range(count), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times (n, iteratee, callback) {\n    return timesLimit(n, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesSeries (n, iteratee, callback) {\n    return timesLimit(n, 1, iteratee, callback)\n}\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in parallel, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileList, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileList, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let result = await async.transform(fileList, transformFileSize);\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileMap, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileMap, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.transform(fileMap, transformFileSize);\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3 && typeof accumulator === 'function') {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = Array.isArray(coll) ? [] : {};\n    }\n    callback = once(callback || promiseCallback());\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf$1(coll, (v, k, cb) => {\n        _iteratee(accumulator, v, k, cb);\n    }, err => callback(err, accumulator));\n    return callback[PROMISE_SYMBOL]\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return eachSeries$1(tasks, (task, taskCb) => {\n        wrapAsync(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nvar tryEach$1 = awaitify(tryEach);\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function test(cb) { cb(null, count < 5); },\n *     function iter(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results = [];\n\n    function next(err, ...rest) {\n        if (err) return callback(err);\n        results = rest;\n        if (err === false) return;\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return _test(check);\n}\nvar whilst$1 = awaitify(whilst, 3);\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with (callback).\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * const results = []\n * let finished = false\n * async.until(function test(cb) {\n *     cb(null, finished)\n * }, function iter(next) {\n *     fetchPage(url, (err, body) => {\n *         if (err) return next(err)\n *         results = results.concat(body.objects)\n *         finished = !!body.next\n *         next(err)\n *     })\n * }, function done (err) {\n *     // all pages have been fetched\n * })\n */\nfunction until(test, iteratee, callback) {\n    const _test = wrapAsync(test);\n    return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall (tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        task(...args, onlyOnce(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nvar waterfall$1 = awaitify(waterfall);\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\nvar index = {\n    apply,\n    applyEach: applyEach$1,\n    applyEachSeries,\n    asyncify,\n    auto,\n    autoInject,\n    cargo,\n    cargoQueue: cargo$1,\n    compose,\n    concat: concat$1,\n    concatLimit: concatLimit$1,\n    concatSeries: concatSeries$1,\n    constant,\n    detect: detect$1,\n    detectLimit: detectLimit$1,\n    detectSeries: detectSeries$1,\n    dir,\n    doUntil,\n    doWhilst: doWhilst$1,\n    each,\n    eachLimit: eachLimit$2,\n    eachOf: eachOf$1,\n    eachOfLimit: eachOfLimit$2,\n    eachOfSeries: eachOfSeries$1,\n    eachSeries: eachSeries$1,\n    ensureAsync,\n    every: every$1,\n    everyLimit: everyLimit$1,\n    everySeries: everySeries$1,\n    filter: filter$1,\n    filterLimit: filterLimit$1,\n    filterSeries: filterSeries$1,\n    forever: forever$1,\n    groupBy,\n    groupByLimit: groupByLimit$1,\n    groupBySeries,\n    log,\n    map: map$1,\n    mapLimit: mapLimit$1,\n    mapSeries: mapSeries$1,\n    mapValues,\n    mapValuesLimit: mapValuesLimit$1,\n    mapValuesSeries,\n    memoize,\n    nextTick,\n    parallel: parallel$1,\n    parallelLimit,\n    priorityQueue,\n    queue: queue$1,\n    race: race$1,\n    reduce: reduce$1,\n    reduceRight,\n    reflect,\n    reflectAll,\n    reject: reject$2,\n    rejectLimit: rejectLimit$1,\n    rejectSeries: rejectSeries$1,\n    retry,\n    retryable,\n    seq,\n    series,\n    setImmediate: setImmediate$1,\n    some: some$1,\n    someLimit: someLimit$1,\n    someSeries: someSeries$1,\n    sortBy: sortBy$1,\n    timeout,\n    times,\n    timesLimit,\n    timesSeries,\n    transform,\n    tryEach: tryEach$1,\n    unmemoize,\n    until,\n    waterfall: waterfall$1,\n    whilst: whilst$1,\n\n    // aliases\n    all: every$1,\n    allLimit: everyLimit$1,\n    allSeries: everySeries$1,\n    any: some$1,\n    anyLimit: someLimit$1,\n    anySeries: someSeries$1,\n    find: detect$1,\n    findLimit: detectLimit$1,\n    findSeries: detectSeries$1,\n    flatMap: concat$1,\n    flatMapLimit: concatLimit$1,\n    flatMapSeries: concatSeries$1,\n    forEach: each,\n    forEachSeries: eachSeries$1,\n    forEachLimit: eachLimit$2,\n    forEachOf: eachOf$1,\n    forEachOfSeries: eachOfSeries$1,\n    forEachOfLimit: eachOfLimit$2,\n    inject: reduce$1,\n    foldl: reduce$1,\n    foldr: reduceRight,\n    select: filter$1,\n    selectLimit: filterLimit$1,\n    selectSeries: filterSeries$1,\n    wrapSync: asyncify,\n    during: whilst$1,\n    doDuring: doWhilst$1\n};\n\nexport default index;\nexport { apply, applyEach$1 as applyEach, applyEachSeries, asyncify, auto, autoInject, cargo, cargo$1 as cargoQueue, compose, concat$1 as concat, concatLimit$1 as concatLimit, concatSeries$1 as concatSeries, constant, detect$1 as detect, detectLimit$1 as detectLimit, detectSeries$1 as detectSeries, dir, doUntil, doWhilst$1 as doWhilst, each, eachLimit$2 as eachLimit, eachOf$1 as eachOf, eachOfLimit$2 as eachOfLimit, eachOfSeries$1 as eachOfSeries, eachSeries$1 as eachSeries, ensureAsync, every$1 as every, everyLimit$1 as everyLimit, everySeries$1 as everySeries, filter$1 as filter, filterLimit$1 as filterLimit, filterSeries$1 as filterSeries, forever$1 as forever, groupBy, groupByLimit$1 as groupByLimit, groupBySeries, log, map$1 as map, mapLimit$1 as mapLimit, mapSeries$1 as mapSeries, mapValues, mapValuesLimit$1 as mapValuesLimit, mapValuesSeries, memoize, nextTick, parallel$1 as parallel, parallelLimit, priorityQueue, queue$1 as queue, race$1 as race, reduce$1 as reduce, reduceRight, reflect, reflectAll, reject$2 as reject, rejectLimit$1 as rejectLimit, rejectSeries$1 as rejectSeries, retry, retryable, seq, series, setImmediate$1 as setImmediate, some$1 as some, someLimit$1 as someLimit, someSeries$1 as someSeries, sortBy$1 as sortBy, timeout, times, timesLimit, timesSeries, transform, tryEach$1 as tryEach, unmemoize, until, waterfall$1 as waterfall, whilst$1 as whilst, every$1 as all, everyLimit$1 as allLimit, everySeries$1 as allSeries, some$1 as any, someLimit$1 as anyLimit, someSeries$1 as anySeries, detect$1 as find, detectLimit$1 as findLimit, detectSeries$1 as findSeries, concat$1 as flatMap, concatLimit$1 as flatMapLimit, concatSeries$1 as flatMapSeries, each as forEach, eachSeries$1 as forEachSeries, eachLimit$2 as forEachLimit, eachOf$1 as forEachOf, eachOfSeries$1 as forEachOfSeries, eachOfLimit$2 as forEachOfLimit, reduce$1 as inject, reduce$1 as foldl, reduceRight as foldr, filter$1 as select, filterLimit$1 as selectLimit, filterSeries$1 as selectSeries, asyncify as wrapSync, whilst$1 as during, doWhilst$1 as doDuring };\n", "'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n", "'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (obj, name, value) => Object.defineProperty(obj, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOpts = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(obj) {\n\tconst result = Object.getPrototypeOf(obj) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(obj).forEach(key => {\n\t\tdefineProperty(result, key, clone(obj[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOpts), (this !== globalThis && this) || {}, defaultMergeOpts);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n", "'use strict'\n\n/**\n * Represents an ActiveDirectory group\n *\n * @private\n * @param {object} [properties] The properties to assign to the newly created item.\n * @returns {Group}\n */\nfunction Group (properties) {\n  if (!properties) {\n    return this\n  }\n\n  for (const prop of Object.getOwnPropertyNames(properties)) {\n    Object.defineProperty(this, prop, {\n      value: properties[prop],\n      enumerable: true,\n      writable: true\n    })\n  }\n}\n\nmodule.exports = Group\n", "'use strict'\n\nconst ldap = require('ldapjs')\n\n// this module consists of various utility functions that are used\n// throughout the ActiveDirectory code\n\n/**\n * Factory to create the LDAP client object.\n *\n * @private\n * @param {String} url The url to use when creating the LDAP client.\n * @param {object} opts The optional LDAP client options.\n * @param {ActiveDirectory} An instance of {@link ActiveDirectory} to pull\n * default values from.\n */\nfunction createClient (url, opts, ad) {\n  // Attempt to get Url from this instance.\n  const _url = url || ad.url || ad.opts.url\n  if (!_url) {\n    throw new Error('No url specified for ActiveDirectory client.')\n  }\n\n  const ldapOpts = getLdapClientOpts(Object.assign({ url: _url }, (ad && ad.opts) ? ad.opts : {}, opts || {}))\n  return ldap.createClient(ldapOpts)\n}\n\n/**\n * Gets a properly formatted LDAP compound filter. This is a very simple\n * approach to ensure that the LDAP compound filter is wrapped with an enclosing\n * *()* if necessary. It does not handle parsing of an existing\n * compound ldap filter.\n *\n * @private\n * @param {string} filter The LDAP filter to inspect.\n * @returns {string}\n */\nfunction getCompoundFilter (filter) {\n  if (!filter) {\n    return false\n  }\n  if (filter.charAt(0) === '(' && filter.charAt(filter.length - 1) === ')') {\n    return filter\n  }\n  return `(${filter})`\n}\n\n/**\n * Gets the ActiveDirectory LDAP query string for a group search.\n *\n * @private\n * @param {string} [groupName] The name of the group to find. Defaults to\n * finding the whole category 'group'.\n * @returns {string}\n */\nfunction getGroupQueryFilter (groupName) {\n  if (!groupName) {\n    return '(objectCategory=Group)'\n  }\n  if (isDistinguishedName(groupName)) {\n    return '(&(objectCategory=Group)(distinguishedName=' +\n      parseDistinguishedName(groupName) + '))'\n  }\n  return `(&(objectCategory=Group)(cn=${groupName}))`\n}\n\n/**\n * From the list of options, retrieves the ldapjs client specific options.\n *\n * @private\n * @param {Object} opts The opts to parse.\n * @returns {Object} The ldapjs opts.\n */\nfunction getLdapClientOpts (opts) {\n  const clientOpts = [\n    'url',\n    'host', 'port', 'secure', 'tlsOptions',\n    'socketPath', 'log', 'timeout', 'idleTimeout',\n    'reconnect', 'queue', 'queueSize', 'queueTimeout',\n    'queueDisable', 'bindDN', 'bindCredentials',\n    'maxConnections', 'connectTimeout', 'tlsOptions',\n    'strictDN', 'paged'\n  ]\n\n  const options = {}\n  clientOpts.forEach((opt) => {\n    if (Object.prototype.hasOwnProperty.call(opts, opt)) {\n      options[opt] = opts[opt]\n    }\n  })\n\n  return options\n}\n\n/**\n * Gets the required ldap attributes for group related queries in order to\n * do recursive queries, etc.\n *\n * @private\n * @params {Object} [opts] Optional LDAP query string parameters to execute.\n */\nfunction getRequiredLdapAttributesForGroup (opts) {\n  const _opts = opts || {}\n  if (shouldIncludeAllAttributes(_opts.attributes)) {\n    return []\n  }\n\n  return [].concat(\n    ['dn', 'objectCategory', 'groupType', 'cn'],\n    includeGroupMembershipFor(_opts, 'group') ? ['member'] : []\n  )\n}\n\n/**\n * Gets the required ldap attributes for user related queries in order to\n * do recursive queries, etc.\n *\n * @private\n * @params {Object} [opts] Optional LDAP query string parameters to execute.\n */\nfunction getRequiredLdapAttributesForUser (opts) {\n  const _opts = opts || {}\n  if (shouldIncludeAllAttributes(_opts.attributes)) {\n    return []\n  }\n\n  return [].concat(\n    ['dn', 'cn'],\n    includeGroupMembershipFor(_opts, 'user') ? ['member'] : []\n  )\n}\n\n/**\n * Gets the ActiveDirectory LDAP query string for a user search.\n *\n * @private\n * @param {string} username The samAccountName or userPrincipalName\n * (email) of the user.\n * @returns {string}\n */\nfunction getUserQueryFilter (username) {\n  if (!username) {\n    return '(objectCategory=User)'\n  }\n  if (isDistinguishedName(username)) {\n    return '(&(objectCategory=User)(distinguishedName=' +\n      parseDistinguishedName(username) +\n      '))'\n  }\n\n  return '(&(objectCategory=User)(|(sAMAccountName=' +\n    username +\n    ')(userPrincipalName=' +\n    username +\n    ')))'\n}\n\n/**\n * Checks to see if group membership for the specified type is enabled.\n *\n * @private\n * @param {object} opts The options to inspect.\n * @param {string} name The name of the membership value to inspect. Values: (all|user|group)\n * @returns {boolean} True if the specified membership is enabled.\n */\nfunction includeGroupMembershipFor (opts, name) {\n  const lowerCaseName = name.toLowerCase()\n  return (opts.includeMembership || []).some((i) => {\n    const j = i.toLowerCase()\n    return j === 'all' || j === lowerCaseName\n  })\n}\n\n/**\n * Checks to see if the value is a distinguished name.\n *\n * @private\n * @param {string} value The value to check to see if it's a distinguished name.\n * @returns {boolean}\n */\nfunction isDistinguishedName (value) {\n  if (!value || value.length === 0) {\n    return false\n  }\n  const regex = /(([^=]+=.+),?)+/gi\n  return regex.test(value)\n}\n\n/**\n * Checks to see if the LDAP result describes a group entry.\n *\n * @private\n * @param {object} item The LDAP result to inspect.\n * @returns {boolean}\n */\nfunction isGroupResult (item) {\n  const regex = /CN=Group,CN=Schema,CN=Configuration,.*/i\n\n  if (!item) {\n    return false\n  }\n  if (item.groupType) {\n    return true\n  }\n  if (item.objectCategory) {\n    return regex.test(item.objectCategory)\n  }\n  if (item.objectClass && item.objectClass.length > 0) {\n    return item.objectClass.some(c => c.toLowerCase() === 'group')\n  }\n\n  return false\n}\n\n/**\n * Checks to see if the LDAP result describes a user entry.\n *\n * @private\n * @param {object} item The LDAP result to inspect.\n * @returns {boolean}\n */\nfunction isUserResult (item) {\n  const regex = /CN=Person,CN=Schema,CN=Configuration,.*/i\n\n  if (!item) {\n    return false\n  }\n  if (item.userPrincipalName) {\n    return true\n  }\n  if (item.objectCategory) {\n    return regex.test(item.objectCategory)\n  }\n  if (item.objectClass && item.objectClass.length > 0) {\n    return item.objectClass.some(c => c.toLowerCase() === 'user')\n  }\n\n  return false\n}\n\n/**\n * Retrieves / merges the attributes for the query.\n * @private\n * @return {array} An array of attributes\n */\nfunction joinAttributes () {\n  for (const arg of Array.from(arguments)) {\n    if (shouldIncludeAllAttributes(arg)) {\n      return []\n    }\n  }\n  const attrs = []\n  Array.from(arguments).forEach((arr) => {\n    arr.forEach(i => attrs.push(i))\n  })\n  return attrs.filter((ele, i, arr) => arr.indexOf(ele) === i)\n}\n\n/**\n * Parses the distinguishedName (dn) to remove any invalid characters or to\n * properly escape the request.\n *\n * @private\n * @param {string} dn The dn to parse.\n * @returns {string}\n */\nfunction parseDistinguishedName (dn) {\n  if (!dn || Array.isArray(dn)) {\n    return dn\n  }\n\n  // implement escape rules described in https://social.technet.microsoft.com/wiki/contents/articles/5312.active-directory-characters-to-escape.aspx\n  const tmp = dn.split(',')\n  const component = []\n  for (let i = 0; i < tmp.length; i++) {\n    if (i && !tmp[i].match(/^(CN|OU|DC)=/i)) {\n      // comma was not a component separator but was embedded in a componentvalue e.g. 'CN=Doe\\, John'\n      component.push(component.pop() + '\\\\,' + tmp[i])\n    } else {\n      component.push(tmp[i])\n    }\n  }\n\n  for (let i = 0; i < component.length; i++) {\n    const compvalue = component[i].substr(3)\n    let newvalue = ''\n    for (let j = 0; j < compvalue.length; j++) {\n      let char = compvalue.substr(j, 1)\n      switch (char) {\n        /*  backslash should be escaped, but doing it breaks the unittest\n        case '\\\\':\n          char = '\\\\\\\\'\n          break\n         */\n        case '*':\n          char = '\\\\\\\\2A'\n          break\n        case '(':\n          char = '\\\\\\\\28'\n          break\n        case ')':\n          char = '\\\\\\\\29'\n          break\n        /* pound (or hash) should be escaped, but doing it breaks the unittest\n        case '#':\n          char = '\\\\#'\n          break\n         */\n        case '+':\n          char = '\\\\+'\n          break\n        case '<':\n          char = '\\\\<'\n          break\n        case '>':\n          char = '\\\\>'\n          break\n        case ';':\n          char = '\\\\;'\n          break\n        case '\"':\n          char = '\\\\\"'\n          break\n        case '=':\n          char = '\\\\='\n          break\n        case ' ':\n          if (j === 0 || j === compvalue.length - 1) {\n            char = '\\\\ '\n          }\n          break\n      }\n      newvalue = newvalue + char\n    }\n    component[i] = component[i].substr(0, 3) + newvalue\n  }\n  return component.join(',')\n}\n\n/**\n * Picks only the requested attributes from the ldap result. If a wildcard or\n * empty result is specified, then all attributes are returned.\n * @private\n * @params {object} result The LDAP result.\n * @params {array} attributes The desired or wanted attributes.\n * @returns {object} A copy of the object with only the requested attributes.\n */\nfunction pickAttributes (result, attributes) {\n  let _attributes = attributes\n  if (shouldIncludeAllAttributes(attributes)) {\n    _attributes = Object.getOwnPropertyNames(result)\n  }\n  const obj = {}\n  _attributes.forEach((attr) => {\n    if (Object.prototype.hasOwnProperty.call(result, attr)) {\n      obj[attr] = result[attr]\n    }\n  })\n  return obj\n}\n\n/**\n * Checks to see if any of the specified attributes are the wildcard\n * '*' attribute or if the attributes array is empty.\n * @private\n * @params {array} attributes The attributes to inspect.\n * @returns {boolean}\n */\nfunction shouldIncludeAllAttributes (attributes) {\n  if (!Array.isArray(attributes)) {\n    return false\n  }\n\n  return (attributes.length === 0)\n    ? true\n    : attributes.filter(a => a === '*').length > 0\n}\n\nconst maxOutputLength = 256\n/**\n * Truncates the specified output to the specified length if exceeded.\n *\n * @private\n * @param {string} output The output to truncate if too long\n * @param {number} [maxLength] The maximum length. If not specified, then the\n * global value maxOutputLength is used.\n */\nfunction truncateLogOutput (output, maxLength) {\n  const _maxLength = maxLength || maxOutputLength\n  if (!output) {\n    return output\n  }\n\n  let _output = output\n  if (typeof output !== 'string') {\n    _output = output.toString()\n  }\n  const length = _output.length\n  if (length < (_maxLength + 3)) {\n    return _output\n  }\n\n  const prefix = Math.ceil((_maxLength - 3) / 2)\n  const suffix = Math.floor((_maxLength - 3) / 2)\n  return _output.slice(0, prefix) + '...' + _output.slice(length - suffix)\n}\n\n/**\n * Converts SIDs from hex buffers (returned by AD) to human readable strings\n *\n * @private\n * @param {buffer} sid\n * @returns {string}\n */\nfunction binarySidToStringSid (sid) {\n  const _32bit = 0x100000000\n  // const _48bit = 0x1000000000000\n  // const _64bitLow = 0xffffffff\n  // const _64bitHigh = 0xffffffff00000000\n  const revision = sid.readUInt8(0)\n  // ignored, will just parse until end of buffer\n  // const numSubauthorities = sid.readUInt8(1);\n  const authority = _32bit * sid.readUInt16BE(2) + sid.readUInt32BE(4)\n  const parts = ['S', revision, authority]\n  for (let i = 8; i < sid.length; i += 4) {\n    parts.push(sid.readUInt32LE(i)) // subauthorities\n  }\n  return parts.join('-')\n}\n\nmodule.exports = {\n  binarySidToStringSid,\n  createClient,\n  getCompoundFilter,\n  getGroupQueryFilter,\n  getLdapClientOpts,\n  getRequiredLdapAttributesForGroup,\n  getRequiredLdapAttributesForUser,\n  getUserQueryFilter,\n  includeGroupMembershipFor,\n  isDistinguishedName,\n  isGroupResult,\n  isUserResult,\n  joinAttributes,\n  parseDistinguishedName,\n  pickAttributes,\n  shouldIncludeAllAttributes,\n  truncateLogOutput\n}\n", "'use strict'\n\n// https://msdn.microsoft.com/en-us/library/cc223242.aspx\n// [attribute];range=[low]-[high]\n// matching: 1 = name, 2 = low, 3 = high\nconst rangeRegex = /^([^;]+);range=(\\d+)-([\\d*]+)$/i\n\n/**\n * Represents an attribute wherein a query has been limited to a spcific range.\n *\n * @private\n * @constructor\n * @param {string|object} [null] attribute The actual attribute name. May also\n * contain a full range retrieval specifier for parsing\n * (i.e. [attribute];range=[low]-[high]). Optionally an object can be specified.\n * @returns {RangeAttribute}\n */\nfunction RangeAttribute (attribute) {\n  if (attribute && ((typeof attribute) === 'string')) {\n    return RangeAttribute.fromString(attribute)\n  }\n\n  this.attributeName = null\n  this.low = null\n  this.high = null\n}\n\n/**\n * Gets the next range retrieval specifier for a query.\n *\n * @private\n * @returns {RangeAttribute}\n */\nRangeAttribute.prototype.next = function next () {\n  if ((this.high !== null) && (this.high !== this.low)) {\n    const low = this.low\n    const high = this.high\n\n    this.low = high + 1\n    this.high = high + (high - low) + 1\n    if (low === 0) {\n      this.high += 1\n    }\n\n    return this\n  }\n  return null\n}\n\n/**\n * Checks to see if the range specifier has been exhausted or completed.\n *\n * @private\n * @returns {boolean}\n */\nRangeAttribute.prototype.isComplete = function isComplete () {\n  return ((this.high == null) || ((typeof this.high) === 'undefined'))\n}\n\n/**\n * Gets the string representation of the range retrieval specifier.\n *\n * @private\n * @returns {string}\n */\nRangeAttribute.prototype.toString = function toString () {\n  return (\n    this.attributeName + ';range=' +\n    this.low + '-' + (this.high ? this.high : '*')\n  )\n}\n\n/**\n * Parses the range retrieval specifier into an object.\n *\n * @private\n * @param {string} str The range retrieval specifier to parse.\n * @returns {RangeAttribute}\n */\nRangeAttribute.fromString = function fromString (str) {\n  const match = rangeRegex.exec(str)\n\n  const rrsa = new RangeAttribute()\n  rrsa.attributeName = match[1]\n  rrsa.low = parseInt(match[2], 10)\n  rrsa.high = parseInt(match[3], 10) || null\n  return rrsa\n}\n\n/**\n * Retrieves all of the attributes which have range attributes specified.\n *\n * @private\n * @static\n * @param {object} entry SearchEntry to extract the range retrieval attributes from.\n * @returns {Array}\n */\nRangeAttribute.getRangeAttributes = function getRangeAttributes (entry) {\n  const attributes = []\n  for (const attribute of Object.keys(entry)) {\n    if (RangeAttribute.isRangeAttribute(attribute)) {\n      const range = new RangeAttribute(attribute)\n      attributes.push(range)\n    }\n  }\n  return attributes\n}\n\n/**\n * Checks to see if the specified attribute is a range retrieval attribute.\n *\n * @private\n * @static\n * @param {string} attribute The attribute to inspect.\n * @returns {boolean}\n */\nRangeAttribute.isRangeAttribute = function isRangeAttribute (attribute) {\n  return rangeRegex.test(attribute)\n}\n\n/**\n * Checks to see if the specified object has any range retrieval attributes.\n *\n * @private\n * @static\n * @param {object} entry SearchEntry to check for range retrieval specifiers.\n * @returns {boolean}\n */\nRangeAttribute.hasRangeAttributes = function hasRangeAttributes (entry) {\n  return Object.keys(entry)\n    .filter(entry => {\n      return RangeAttribute.isRangeAttribute(entry)\n    })\n    .length > 0\n}\n\nmodule.exports = RangeAttribute\n", "'use strict'\n\nconst util = require('util')\nconst events = require('events')\nconst RangeAttribute = require('./../client/RangeAttribute')\n\nlet log\n\nmodule.exports = function init ($ad, $log) {\n  log = $log\n  return RangeAttributeParser\n}\n\n/**\n * Parses the distinguishedName (dn) to remove any invalid characters or to\n * properly escape the request.\n *\n * @private\n *   @param dn {String} The dn to parse.\n * @returns {String}\n */\nfunction parseDistinguishedName (dn) {\n  log.trace('parseDistinguishedName(%s)', dn)\n  if (!dn) {\n    return (dn)\n  }\n\n  dn = dn.replace(/\"/g, '\\\\\"')\n  return dn.replace('\\\\,', '\\\\\\\\,')\n}\n\n/**\n * Represents a paged search result.\n *\n * @private\n * @param {object} result An LDAP search entry result.\n * @constructor\n */\nfunction Result (result) {\n  this.originalResult = result\n  this.rangeAttributes = new Map()\n  this.rangeAttributeResults = new Map()\n}\n\nResult.prototype.name = function name () {\n  return this.originalResult.dn\n}\n\n/**\n * Populates the original search results's range valued attributes with the\n * retrieved values and returns the new search result.\n *\n * @returns {object}\n */\nResult.prototype.value = function value () {\n  const result = {}\n  Object.getOwnPropertyNames(this.originalResult).forEach(\n    k => { result[k] = this.originalResult[k] }\n  )\n  Array.from(this.rangeAttributes.keys()).forEach((k) => {\n    result[k] = this.rangeAttributeResults.get(k)\n  })\n  return result\n}\n\n/**\n * Handles any attributes that might have been returned with a range= specifier.\n * It has a single \"public\" method -- {@link RangeAttributeParser#parseResult}.\n * It exposes two events: \"error\" and \"done\". The *done* event will be fired\n * when **all** pages of a paged search result have been retreived.\n *\n * @private\n * @param {object} searcher An instance of {@link Searcher} that is performing\n * the queries.\n */\nfunction RangeAttributeParser (searcher) {\n  this.searcher = searcher\n  this.results = new Map()\n\n  events.EventEmitter.call(this)\n}\nutil.inherits(RangeAttributeParser, events.EventEmitter)\n\nRangeAttributeParser.prototype.getResults = function getResults () {\n  const results = []\n  Array.from(this.results.values()).forEach(v => results.push(v.value()))\n  return results\n}\n\n/**\n * Give it a search result that *might* have some attributes with ranges and\n * it'll recursively retrieve **all** of the values for said attributes. It\n * fires the `done` and `error` events appropriately.\n *\n * @param {object} result An LDAP search result.\n */\nRangeAttributeParser.prototype.parseResult = function parseResult (result) {\n  log.trace('parsing result for range attributes: %j', result)\n\n  const _result = (this.results.has(result.dn))\n    ? this.results.get(result.dn)\n    : new Result(result)\n  this.results.set(result.dn, _result)\n  if (!RangeAttribute.hasRangeAttributes(result)) {\n    this.emit('done', this.getResults())\n    return\n  }\n\n  const rangeAttributes = RangeAttribute.getRangeAttributes(result)\n  if (rangeAttributes.length === 0) {\n    this.emit('done', this.getResults())\n    return\n  }\n\n  let queryAttributes = []\n  rangeAttributes.forEach((attr) => {\n    const attrName = attr.attributeName\n    if (!_result.rangeAttributes.has(attrName)) {\n      _result.rangeAttributes.set(attrName, attr)\n    }\n    if (!_result.rangeAttributeResults.has(attrName)) {\n      _result.rangeAttributeResults.set(attrName, [])\n    }\n\n    // update the attribute result accumulator with the new page of values\n    const currRangeName = attr.toString()\n    const attrResults = _result.rangeAttributeResults.get(attrName)\n    const newResults = [].concat(attrResults, result[currRangeName])\n    _result.rangeAttributeResults.set(attrName, newResults)\n\n    // advance the query\n    const nextAttr = attr.next()\n    _result.rangeAttributes.set(attrName, nextAttr)\n    delete _result.originalResult[currRangeName]\n    if (nextAttr) {\n      const nextRangeName = _result.rangeAttributes.get(attrName).toString()\n      if (nextRangeName !== currRangeName) {\n        queryAttributes.push(nextRangeName)\n      }\n    }\n  })\n\n  if (queryAttributes.length === 0) {\n    // we have reached then end of the pages and have queried the last page\n    this.emit('done', this.getResults())\n    return\n  }\n\n  const rangeKeys = Array.from(_result.rangeAttributes.keys())\n  queryAttributes = queryAttributes.concat(\n    this.searcher.query.attributes.filter(a => rangeKeys.indexOf(a) === -1)\n  )\n  const filter = `(distinguishedName=${parseDistinguishedName(result.dn)})`\n  const query = {\n    filter: filter,\n    attributes: queryAttributes,\n    scope: this.searcher.query.scope\n  }\n\n  this.searcher.rangeSearch(query, (err, result) => {\n    if (err) {\n      this.emit('error', err)\n      return\n    }\n    this.parseResult(result)\n  })\n}\n", "'use strict'\n\nconst url = require('url')\nconst ldap = require('ldapjs')\nconst utils = require('./utilities')\nconst async = require('async')\n\nlet ad\nlet log\nlet RangeAttributeParser\n\nfunction isReferralAllowed (referralUri) {\n  if (ad.defaultReferrals.enabled === false || !referralUri) {\n    return false\n  }\n\n  let result = true\n  for (const excludePattern of ad.defaultReferrals.exclude) {\n    const regex = new RegExp(excludePattern, 'i')\n    if (regex.test(referralUri)) {\n      result = false\n      break\n    }\n  }\n\n  return result\n}\n\n/**\n * @property {string} baseDN Where in the tree to start searches.\n * @property {function} callback A function to invoke when the search has\n * completed. This method must accept an error and a result, in that order.\n * @property {object} opts All of the options relevant to an\n * {@link ActiveDirectory} instance. It must include an `opts` property that\n * represents that is an {@link LDAPQueryParameters}.\n * @private\n * @typedef {object} SearcherOptions\n */\n\n/**\n * An interface for performing searches against an Active Directory database.\n * It handles ranged results, finding deleted items, and following referrals.\n *\n * @private\n * @param {SearcherOptions} opts\n * @constructor\n */\nfunction Searcher (opts) {\n  this.baseDN = opts.baseDN\n  this.callback = opts.callback\n  this.opts = opts\n  this.ldapOpts = utils.getLdapClientOpts(this.opts)\n  this.query = this.opts.opts\n\n  this.results = new Map()\n  this.pendingReferrals = new Set()\n  this.searchComplete = false\n  this.rangeProcessing = false\n\n  this.client = utils.createClient(ad.url || ad.opts.url, this.ldapOpts, ad)\n  this.client.on('connectTimeout', (err) => {\n    // to handle connection errors\n    this.callback(err)\n  })\n  this.client.on('error', (err) => {\n    // to handle connection errors\n    this.callback(err)\n  })\n\n  this.controls = this.opts.controls || []\n\n  // Add paging results control by default if not already added.\n  const pagedControls = this.controls.filter(\n    (control) => control instanceof ldap.PagedResultsControl\n  )\n  if (!this.opts.opts.paged && pagedControls.length === 0) {\n    log.trace('Adding PagedResultControl to search (%s) with filter \"%s\" for %j',\n      this.baseDN,\n      this.query.filter,\n      (this.query.attributes) ? this.opts.attributes : '[*]'\n    )\n    this.controls.push(new ldap.PagedResultsControl({\n      value: { size: ad.pageSize }\n    }))\n  }\n\n  if (this.opts.includeDeleted) {\n    const deletedControls = this.controls.filter(\n      (control) => control.type === '1.2.840.113556.1.4.417'\n    )\n    if (deletedControls.length === 0) {\n      log.trace('Adding ShowDeletedOidControl(1.2.840.113556.1.4.417) to search (%s) with filter \"%s\" for %j',\n        this.baseDN,\n        this.query.filter,\n        (this.query.attributes) ? this.query.attributes : '[*]'\n      )\n      this.controls.push(new ldap.Control({\n        type: '1.2.840.113556.1.4.417',\n        criticality: true\n      }))\n    }\n  }\n}\n\n/**\n * The only method you should need to invoke. It uses the information parsed\n * during construction to construct the query and submit it to the server. Once\n * the query has completed, or an error occurs, the callback you specified\n * during construction will be invoked.\n */\nSearcher.prototype.search = function search () {\n  log.trace('Querying active directory (%s) with filter \"%s\" for %j',\n    this.baseDN,\n    this.query.filter,\n    (this.query.attributes) ? this.query.attributes : '[*]'\n  )\n\n  this.client.search(this.baseDN, this.query, this.controls, (err, res) => {\n    if (err) {\n      if (this.callback) {\n        this.callback(err)\n      }\n      return\n    }\n\n    const errCallback = (err) => {\n      if (err.name === 'SizeLimitExceededError') {\n        this.onSearchEnd(res)\n        return\n      }\n\n      this.client.unbind()\n      log.trace(err,\n        '[%s] An error occurred performing the requested LDAP search on %s (%j)',\n        err.errno || 'UNKNOWN',\n        this.baseDN,\n        this.opts\n      )\n      if (this.callback) {\n        this.callback(err)\n      }\n    }\n\n    res.on('searchEntry', this.onSearchEntry.bind(this))\n    res.on('searchReference', this.onReferralChase.bind(this))\n    res.on('error', errCallback)\n    res.on('end', (err) => {\n      this.searchComplete = true\n      this.onSearchEnd(err)\n    })\n  })\n}\n\nSearcher.prototype.rangeSearch = function rangeSearch (query, rangeCB) {\n  log.trace('Quering (%s) for range search with filter \"%s\" for: %j',\n    this.baseDN, query.filter, query.attributes)\n  this.client.search(this.baseDN, query, this.controls, (err, res) => {\n    if (err) {\n      return rangeCB(err)\n    }\n    res.on('searchEntry', (entry) => {\n      const obj = entry.object\n      rangeCB(null, obj)\n    })\n    res.on('searchReference', this.onReferralChase.bind(this))\n    res.on('end', () => {\n      this.rangeProcessing = false\n    })\n    res.on('error', rangeCB)\n  })\n}\n\n/**\n * If set via the options of the query or the {@link ActiveDirectory}\n * instance, run the entry through the function. Otherwise, just feed it to\n * the parser callback.\n *\n * @param {object} entry The search entry object.\n * @param {object} raw The raw search entry object as returned from ldap.js.\n * @param {function} callback The callback to execute when complete.\n */\nSearcher.prototype.entryParser = function entryParser (entry, raw, callback) {\n  if (this.opts.opts.entryParser) { // local opts\n    return this.opts.opts.entryParser(entry, raw, callback)\n  } else if (this.opts.entryParser) { // from ActiveDirectory instance\n    return this.opts.entryParser(entry, raw, callback)\n  } else if (ad.opts.entryParser) {\n    return ad.opts.entryParser(entry, raw, callback)\n  }\n\n  return callback(entry)\n}\n\n/**\n * Invoked when the ldap.js client is returning a search entry result.\n *\n * @param {object} entry The search entry as returned by ldap.js.\n */\nSearcher.prototype.onSearchEntry = function onSearchEntry (entry) {\n  log.trace('onSearchEntry(entry)')\n  const result = entry.object\n  delete result.controls\n\n  // Some attributes can have range attributes (paging). Execute the query\n  // again to get additional items.\n  this.rangeProcessing = true\n\n  const rangeProcessor = new RangeAttributeParser(this)\n  rangeProcessor.on('error', this.callback)\n  rangeProcessor.on('done', (results) => {\n    async.each(\n      results,\n      (result, acb) => {\n        this.entryParser(\n          result, entry.raw, (r) => {\n            this.results.set(result.dn, r)\n            this.rangeProcessing = false\n            acb()\n          }\n        )\n      },\n      () => {\n        if (this.searchComplete) {\n          this.onSearchEnd()\n        }\n      }\n    )\n  })\n\n  rangeProcessor.parseResult(result)\n}\n\n/**\n * Used to handle referrals, if they are enabled.\n *\n * @param {object} referral A referral object that has a `uris` property.\n */\nSearcher.prototype.onReferralChase = function onReferralChase (referral) {\n  referral.uris.forEach((uri) => {\n    if (!isReferralAllowed(uri)) {\n      return\n    }\n\n    log.trace('Following LDAP referral chase at %s', uri)\n    // TODO: use non-deprecated url parsing\n    /* eslint-disable-next-line */\n    const referral = url.parse(uri)\n    const referralBaseDn = (referral.pathname || '/').substring(1)\n    const refSearcher = new Searcher({\n      baseDN: referralBaseDn,\n      opts: this.opts,\n      callback: (err, res) => {\n        if (err) {\n          log.trace(\n            err,\n            '[%s] An error occurred chasing the LDAP referral on %s (%j)',\n            err.errno,\n            referralBaseDn,\n            this.opts\n          )\n        }\n        this.removeReferral(refSearcher)\n      }\n    })\n    this.pendingReferrals.add(refSearcher)\n\n    refSearcher.search()\n  })\n}\n\n/**\n * Invoked when the main search has completed, including any referrals.\n */\nSearcher.prototype.onSearchEnd = function onSearchEnd () {\n  if (!this.rangeProcessing && this.pendingReferrals.size === 0) {\n    this.client.unbind()\n    log.trace('Active directory search (%s) for \"%s\" returned %d entries.',\n      this.baseDN,\n      this.query.filter,\n      this.results.length\n    )\n    if (this.callback) {\n      this.callback(null, Array.from(this.results.values()))\n    }\n  }\n}\n\n/**\n * Dequeues a referral chase client.\n *\n * @param {object} referral An instance of {@link Searcher} being used to chase\n * a referral.\n */\nSearcher.prototype.removeReferral = function removeReferral (referral) {\n  if (!referral) {\n    return\n  }\n\n  referral.client.unbind()\n  this.pendingReferrals.delete(referral)\n}\n\n/**\n * @property {string} [scope] The type of search to perform: base, one, or sub.\n * Default: base.\n * @property {string} [filter] The LDAP filter to use.\n * Default: '(objectclass=*)'\n * @property {array} [attributes] A list of entry attributes to include in the\n * result. Defaults to all attributes.\n * @property {int} [sizeLimit] The maximum number of entries to return.\n * Default: 0 (infinite)\n * @property {int} [timeLimit] The maximum number of seconds to wait for a\n * server response. Default: 10.\n * @typedef {object} LDAPQueryParameters\n */\n\n/**\n * Wraps an instance of {@link Searcher} so as to be backward compatible with\n * the original search function.\n *\n * @private\n * @param {string} [baseDN] The optional base directory where the LDAP query is\n * to originate from. If not specified, then starts at the root.\n * @param {LDAPQueryParameters} [opts] LDAP query string parameters to execute.\n * @param {function} callback The callback to execure when completed.\n * The call back is a standard Node style callback with an error parameter and\n * a result parameter.\n */\nfunction search (baseDN, opts, callback) { // jshint -W071\n  const options = Object.assign({}, ad.opts)\n\n  if (typeof baseDN === 'function') {\n    options.baseDN = ad.baseDN\n    options.callback = baseDN\n    options.opts = {}\n  } else if (typeof baseDN === 'object') {\n    options.baseDN = baseDN.baseDN || ad.baseDN\n    options.callback = opts\n    options.opts = baseDN\n  } else if (typeof baseDN === 'string') {\n    options.baseDN = baseDN\n    if (typeof opts === 'function') {\n      options.callback = opts\n      options.opts = {}\n    } else {\n      options.callback = callback\n      options.opts = opts\n    }\n  }\n\n  const searcher = new Searcher(options)\n  return searcher.search()\n}\n\nmodule.exports = function ($ad, $log) {\n  ad = $ad\n  log = $log\n  RangeAttributeParser = require('./parseRangeAttributes')($ad, $log)\n  return search\n}\n", "'use strict'\n\nconst async = require('async')\n\nconst Group = require('./../models/group')\nconst utils = require('./utilities')\n\nlet ad\nlet log\nlet search\n\n/**\n * An interface for querying a specific group for its members and\n * its sub-groups.\n *\n * @private\n * @param {LDAPQueyrParameters} opts LDAP parameters for the query.\n * @param {string} dn The DN of the group to query.\n * @param {function} callback The callback to invoke when done.\n * @constructor\n */\nfunction GroupMembersForDN (opts, dn, callback, stack) {\n  this.opts = opts\n  this.dn = dn\n  this.callback = callback\n  this.stack = stack || new Map()\n}\n\n/**\n * Used for the `async.forEach` iterator function.\n *\n * @param {object} group An LDAP group entry to parse.\n * @param {function} acb The callback from the `async` library.\n */\nGroupMembersForDN.prototype.asyncIterator = function asyncIterator (group, acb) {\n  if (this.stack.has(group.cn || group.dn)) {\n    return acb()\n  }\n\n  if (utils.isGroupResult(group)) {\n    log.trace('Adding group \"%s\" to %s\"', group.dn, this.dn)\n    const g = new Group(group)\n    this.stack.set(g.cn || g.dn, g)\n\n    const getter = new GroupMembersForDN(this.opts, g.dn, (err, nestedGroups) => {\n      if (err) {\n        return acb(err)\n      }\n      nestedGroups.forEach((ng) => {\n        if (!this.stack.has(ng.cn || ng.dn)) {\n          this.stack.set(ng.cn || ng.dn, ng)\n        }\n      })\n      acb()\n    }, this.stack)\n    getter.getMembers()\n  } else {\n    acb()\n  }\n}\n\n/**\n * Used for the `async.forEach` completion callback.\n *\n * @param {Error} err\n */\nGroupMembersForDN.prototype.asyncCallback = function asyncCallback (err) {\n  if (err) {\n    return this.callback(err)\n  }\n\n  const groups = Array.from(this.stack.values())\n  log.trace(\n    'Group \"%s\" has %d group(s). Groups: %j',\n    this.dn, groups.length, groups.map(g => g.dn)\n  )\n  this.callback(err, groups)\n}\n\n/**\n * Should be the only method you need to invoke. It uses the configuration\n * created during construction to lookup the desired group's information and\n * then send the results to the configured callback.\n */\nGroupMembersForDN.prototype.getMembers = function getMembers () {\n  // Ensure that a valid DN was provided. Otherwise abort the search.\n  if (!this.dn) {\n    const error = new Error('No distinguishedName (dn) specified for group membership retrieval.')\n    log.trace(error)\n    ad.emit('error', error)\n    return this.callback(error)\n  }\n\n  //  Note: Microsoft provides a 'Transitive Filter' for querying nested groups.\n  //        i.e. (member:1.2.840.113556.1.4.1941:=<userDistinguishedName>)\n  //        However this filter is EXTREMELY slow. Recursively querying ActiveDirectory\n  //        is typically 10x faster.\n  const localOpts = Object.assign(\n    {},\n    this.opts,\n    {\n      filter: '(member=' + utils.parseDistinguishedName(this.dn) + ')',\n      scope: 'sub',\n      attributes: utils.joinAttributes(\n        this.opts.attributes || ad.defaultAttributes.group,\n        ['groupType']\n      )\n    }\n  )\n\n  search(localOpts, (err, results) => {\n    if (err) {\n      this.callback(err)\n      return\n    }\n\n    async.forEach(\n      results,\n      this.asyncIterator.bind(this),\n      this.asyncCallback.bind(this)\n    )\n  })\n}\n\n/**\n * A wrapper for {@link GroupMembershipForDN} to provide compatibility with\n * the original `getGroupMembershipForDN` function. Note: the `stack`\n * parameter is ultimately not used. It seems to have been present for *if*\n * you wanted to do some memoization. But we *always* want to do that.\n *\n * @private\n * @param {LDAPQueryParameters} [opts] The parameters to use for the query.\n * @param {string} dn The DN for the group of interest.\n * @param {array} [stack] Useless. Put whatever you want, it'll be ignored.\n * @param {function} callback The callback to invoke when done.\n */\nfunction getGroupMembershipForDN (opts, dn, stack, callback) {\n  let _opts = opts || {}\n  let _dn = dn\n  let _cb = callback\n\n  if (typeof stack === 'function') {\n    _cb = stack\n  }\n  if (typeof dn === 'function') {\n    _cb = dn\n    _dn = opts\n    _opts = {}\n  }\n  if (typeof opts === 'string') {\n    _dn = opts\n    _opts = {}\n  }\n  log.trace('getGroupMembershipForDN(%j,%s)', _opts, _dn)\n\n  const getter = new GroupMembersForDN(_opts, _dn, _cb)\n  return getter.getMembers()\n}\n\nmodule.exports = function init ($ad, $log) {\n  ad = $ad\n  log = $log\n  search = require('./search')(ad, log)\n  return getGroupMembershipForDN\n}\n", "'use strict'\n\n/**\n * Represents an ActiveDirectory user account.\n *\n * @private\n * @param {object} [properties] The properties to assign to the newly created item.\n * @returns {User}\n */\nfunction User (properties) {\n  if (!properties) {\n    return this\n  }\n\n  for (const prop of Object.getOwnPropertyNames(properties)) {\n    Object.defineProperty(this, prop, {\n      value: properties[prop],\n      enumerable: true,\n      writable: true\n    })\n  }\n}\n\n/**\n * Checks to see if the user is the member of the specified group.\n *\n * @param {string} group The name of the group to check for membership.\n * @returns {boolean}\n */\nUser.prototype.isMemberOf = function isMemberOf (group) {\n  if (!group) {\n    return false\n  }\n\n  const _group = group.toLowerCase()\n  return this.groups.filter((g) => g.toLowerCase() === _group).length > 0\n}\n\nmodule.exports = User\n", "'use strict'\n\nconst async = require('async')\n\nconst User = require('./../models/user')\nconst utils = require('./utilities')\n\nlet ad\nlet log\nlet search\n\n/**\n * Breaks the large array into chucks of the specified size.\n * @private\n * @param {array} arr The array to break into chunks\n * @param {number} chunkSize The size of each chunk.\n * @returns {array} The resulting array containing each chunk.\n */\nfunction chunk (arr, chunkSize) {\n  const result = []\n  for (let i = 0, j = arr.length; i < j; i += chunkSize) {\n    result.push(arr.slice(i, i + chunkSize))\n  }\n  return result\n}\n\n/**\n * An interface for retrieving a list of users within a given group.\n *\n * @private\n * @param {LDAPQueryParameters} opts LDAP parameters for the query.\n * @param {string} groupName The group to get the user list for.\n * @param {function} callback The function to invoke when done.\n * @constructor\n */\nfunction GroupUsersFinder (opts, groupName, callback) {\n  this.opts = opts\n  this.groupName = groupName\n  this.callback = callback\n\n  this.chunks = []\n  this.chunksProcessed = 0\n  this.users = new Map()\n  if (Object.prototype.hasOwnProperty.call(this.opts, 'recursionstack') === false) {\n    this.opts.recursionstack = []\n  }\n}\n\n/**\n * Iterator funciton for the `async.forEach` call within the `async.each` call.\n * This iterator is used to process each individual member and queue them\n * to the result map.\n *\n * @param {object} member A user search entry result.\n * @param {function} acb Internal callback function for the `async.forEach`.\n */\nGroupUsersFinder.prototype.forEachIter = function forEachIter (member, acb) {\n  // If a user, no groupType will be specified\n  if (!member.groupType) {\n    const user = new User(\n      utils.pickAttributes(member, this.opts.attributes || ad.defaultAttributes.user)\n    )\n    ad.emit('user', user)\n    this.users.set(member.dn, user)\n    return acb()\n  }\n\n  // We have a group, so we recursively get the users in it\n  // but escape if group is already in the stack, which happens when group A is member of group B and group B is member of group A\n  if (this.opts.recursionstack.indexOf(member.dn) === -1) {\n    // prefer to use member.dn instead member.cn, because cn may not be unique\n    ad.getUsersForGroup(this.opts, member.dn, (err, nestedUsers) => {\n      if (err) throw err\n      nestedUsers.forEach(u => this.users.set(u.dn, u))\n      acb()\n    })\n  } else {\n    acb()\n  }\n}\n\n/**\n * Iterator function for the `async.each` call used to process the \"chunks\" of\n * user results.\n *\n * @param {array} members An array of user search entry results.\n * @param {function} acb Internal callback function for `async.each`.\n */\nGroupUsersFinder.prototype.eachIterator = function eachIterator (members, acb) {\n  // We're going to build up a bulk LDAP query so we can reduce\n  // the number of round trips to the server. We need to get\n  // additional details about each 'member' to determine if\n  // it is a group or another user. If it's a group, we need\n  // to recursively retrieve the members of that group.\n  let filter = members.reduce((prev, curr) => {\n    const res = '(distinguishedName=' + utils.parseDistinguishedName(curr) + ')'\n    return (prev) ? prev + res : res\n  }, null)\n  filter = `(&(|(objectCategory=User)(objectCategory=Group))(|${filter}))`\n\n  const localOpts = {\n    filter: filter,\n    scope: 'sub',\n    attributes: utils.joinAttributes(\n      this.opts.attributes || ad.defaultAttributes.user || [],\n      utils.getRequiredLdapAttributesForUser(this.opts),\n      ['groupType']\n    )\n  }\n\n  search(localOpts, (err, members) => {\n    if (err) {\n      return acb(err)\n    }\n\n    const asyncCallback = (err) => {\n      if (this.chunks.length > 1) {\n        this.chunksProcessed += 1\n        log.trace(\n          'Finished processing chunk %d/%d',\n          this.chunksProcessed, this.chunks.length\n        )\n      }\n      acb(err)\n    }\n\n    // Parse the results in parallel.\n    async.forEach(members, this.forEachIter.bind(this), asyncCallback)\n  })\n}\n\n/**\n * This is the only method you should need to invoke. It uses the configuration\n * created during construction to find the users and return them via the\n * provided callback.\n */\nGroupUsersFinder.prototype.find = function find () {\n  const groupAttributes = Object.assign(\n    {},\n    this.opts,\n    {\n      attributes: utils.joinAttributes(\n        this.opts.attributes || ad.defaultAttributes.group, ['member']\n      )\n    }\n  )\n\n  ad.findGroup(groupAttributes, this.groupName, (err, group) => {\n    if (err) {\n      return this.callback(err)\n    } else if (!group) {\n      return this.callback(null, group)\n    }\n\n    this.opts.recursionstack.push(group.dn)\n    if (!Array.isArray(group.member)) {\n      group.member = (group.member) ? [group.member] : []\n    }\n\n    // for groups with many users, we split them up and process\n    // them in parallel for efficiency\n    this.chunks = chunk(group.member, ad.pageSize)\n    if (this.chunks.length > 1) {\n      log.trace('Splitting %d member(s) of \"%s\" into %d parallel chunks',\n        group.member.length, this.groupName, this.chunks.length)\n    }\n\n    const eachCallback = (err) => {\n      log.trace('%d user(s) belong in the group \"%s\"', this.users.size, this.groupName)\n      this.callback(err, Array.from(this.users.values()))\n    }\n\n    async.each(this.chunks, this.eachIterator.bind(this), eachCallback)\n  })\n}\n\n/**\n * A wrapper for {@link GroupUsersFinder} to provide compatibility\n * with the original `getUsersForGroup` method.\n *\n * @private\n * @param {LDAPQueryParameters} [opts] LDAP parameters for the query.\n * @param {string} groupName The group to get the user list for.\n * @param {function} callback The function to invoke when done.\n */\nfunction getUsersForGroup (opts, groupName, callback) {\n  let _opts = opts || {}\n  let _groupName = groupName\n  let _cb = callback\n\n  if (typeof groupName === 'function') {\n    _cb = groupName\n    _groupName = opts\n    _opts = {}\n  }\n\n  const finder = new GroupUsersFinder(_opts, _groupName, _cb)\n  return finder.find()\n}\n\nmodule.exports = function init ($ad, $log) {\n  ad = $ad\n  log = $log\n  search = require('./search')(ad, log)\n  return getUsersForGroup\n}\n", "'use strict'\n\nconst async = require('async')\n\nconst User = require('./../models/user')\nconst Group = require('./../models/group')\n\nconst utils = require('./utilities')\n\nlet ad\nlet log\nlet search\n\n/**\n * An interface for performing generic LDAP queries and returning the results,\n * via a callback, as an object broken up into groups, users, and other\n * categories.\n *\n * @private\n * @param {LDAPQueryParameters} opts The LDAP query to issue.\n * @param {function} callback The callback to invoke on error or success.\n * @constructor\n */\nfunction Finder (opts, callback) {\n  this.opts = opts\n  this.callback = callback\n\n  this.result = {\n    groups: [],\n    users: [],\n    other: []\n  }\n}\n\n/**\n * Invoked after the `async.forEach` in {@link Finder#find} has completed.\n * @param {Error} err\n */\nFinder.prototype.asyncCallback = function asyncCallback (err) {\n  if (err) {\n    if (this.callback) {\n      this.callback(err)\n    }\n    return\n  }\n  log.trace('%d group(s), %d user(s), %d other found for query \"%s\". Results: %j',\n    this.result.groups.length,\n    this.result.users.length,\n    this.result.other.length,\n    this.opts.filter,\n    this.result\n  )\n  ad.emit('groups', this.result.groups)\n  ad.emit('users', this.result.users)\n\n  if (this.callback) {\n    this.callback(null, this.result)\n  }\n}\n\n/**\n * The function invoked by the `async.forEach` in {@link Finder#find}. This\n * determines the type of result, `item`, and feeds it to the appropriate\n * parsing method.\n *\n * @param {object} item A search entry result.\n * @param {function} cb A callback sent in by the `async` library to invoke\n * when the iteration has completed.\n */\nFinder.prototype.asyncIterator = function asyncIterator (item, cb) {\n  if (utils.isGroupResult(item)) {\n    this.parseGroupResult(item, cb)\n  } else if (utils.isUserResult(item)) {\n    this.parseUserResult(item, cb)\n  } else {\n    this.parseOtherResult(item, cb)\n  }\n}\n\n/**\n * The only method you should need to invoke on an instance. It uses the\n * configuration created during construction to issue a search against the\n * LDAP store. The results are returned via the callback supplied to the\n * constructor.\n */\nFinder.prototype.find = function find () {\n  const localOpts = Object.assign({ scope: 'sub' }, this.opts, {\n    attributes: utils.joinAttributes(\n      this.opts.attributes || [],\n      ad.defaultAttributes.group,\n      ad.defaultAttributes.user,\n      utils.getRequiredLdapAttributesForGroup(this.opts),\n      utils.getRequiredLdapAttributesForUser(this.opts),\n      ['objectCategory']\n    )\n  })\n\n  search(localOpts, (err, results) => {\n    if (err) {\n      if (this.callback) {\n        this.callback(err)\n      }\n      return\n    }\n\n    if (results.length === 0) {\n      log.trace(\n        'No results found for query \"%s\"',\n        utils.truncateLogOutput(localOpts.filter)\n      )\n      if (this.callback) {\n        this.callback()\n      }\n      ad.emit('done')\n      return\n    }\n\n    // Parse the results in parallel.\n    async.forEach(\n      results,\n      this.asyncIterator.bind(this),\n      this.asyncCallback.bind(this)\n    )\n  })\n}\n\n/**\n * Parses a group search entry result.\n *\n * @param {object} item A search entry result.\n * @param {function} cb The `async` callback to invoke when done.\n */\nFinder.prototype.parseGroupResult = function parseGroupResult (item, cb) {\n  const groupAttributes = this.opts.attributes || ad.defaultAttributes.group\n  const group = new Group(utils.pickAttributes(item, groupAttributes))\n  this.result.groups.push(group)\n\n  // get user group memberships if desired\n  if (utils.includeGroupMembershipFor(this.opts, 'group')) {\n    ad.getGroupMembershipForDN(this.opts, group.dn, (err, groups) => {\n      if (err) {\n        return cb(err)\n      }\n      group.groups = groups\n      ad.emit('group', group)\n      cb()\n    })\n  } else {\n    ad.emit('group', group)\n    cb()\n  }\n}\n\n/**\n * Parses an \"other\", e.g. \"computer\", search entry result.\n *\n * @param {object} item A search entry result.\n * @param {function} cb The `async` callback to invoke when done.\n */\nFinder.prototype.parseOtherResult = function parseOtherResult (item, cb) {\n  const groupAttributes = this.opts.attributes || ad.defaultAttributes.group\n  const userAttributes = this.opts.attributes || ad.defaultAttributes.user\n  const other = utils.pickAttributes(item,\n    this.opts.attributes ||\n    [].concat(userAttributes, groupAttributes).filter((ele, i, arr) => {\n      return i === arr.indexOf(ele)\n    })\n  )\n  this.result.other.push(other)\n  ad.emit('other', other)\n  cb()\n}\n\n/**\n * Parses an user search entry result.\n *\n * @param {object} item A search entry result.\n * @param {function} cb The `async` callback to invoke when done.\n */\nFinder.prototype.parseUserResult = function parseUserResult (item, cb) {\n  const userAttributes = this.opts.attributes || ad.defaultAttributes.user\n  const user = new User(utils.pickAttributes(item, userAttributes))\n  this.result.users.push(user)\n\n  // get user group memberships if desired\n  if (utils.includeGroupMembershipFor(this.opts, 'user')) {\n    ad.getGroupMembershipForDN(this.opts, user.dn, (err, groups) => {\n      if (err) {\n        return cb(err)\n      }\n      user.groups = groups\n      ad.emit('user', user)\n      cb()\n    })\n  } else {\n    ad.emit('user', user)\n    cb()\n  }\n}\n\n/**\n * Wraps an instance of {@link Finder} so as to be backward compatible with\n * the original `find` function.\n *\n * @private\n * @param {(LDAPQueryParameters|string)} [opts] Optional LDAP query string\n * parameters to execute. Optionally, if only a string is provided, then the\n * string is assumed to be an LDAP filter.\n * @param {function} callback The callback to execute when completed.\n */\nfunction find (opts, callback) {\n  let _opts = opts\n  let _cb = callback\n\n  if (typeof opts === 'function') {\n    _cb = opts\n    _opts = {}\n  }\n  if (typeof opts === 'string') {\n    _opts = { filter: opts }\n  }\n  log.trace('find(%j)', _opts)\n  const finder = new Finder(_opts, _cb)\n  return finder.find()\n}\n\nmodule.exports = function init ($ad, $log) {\n  ad = $ad\n  log = $log\n  search = require('./search')(ad, log)\n  return find\n}\n", "'use strict'\n\nconst async = require('async')\n\nconst Group = require('./../models/group')\nconst utils = require('./utilities')\n\nconst defaultGroupFilter = '(objectClass=group)(!(objectClass=computer))(!(objectClass=user))(!(objectClass=person))'\n\nlet ad\nlet log\nlet search\n\n/**\n * An interface for finding groups within the LDAP tree.\n *\n * @private\n * @param {LDAPQueryParameters} opts The LDAP query to issue.\n * @param {function} callback The callback to invoke when done.\n * @constructor\n */\nfunction GroupsFinder (opts, callback) {\n  this.opts = opts\n  // this.groupName = groupName;\n  this.callback = callback\n\n  this.filter = defaultGroupFilter\n  if (this.opts && this.opts.filter && /^\\(&/.test(this.opts.filter)) {\n    // already have a compound filter (likely from the `findGroup` method)\n    this.filter = this.opts.filter\n  } else if (this.opts && this.opts.filter) {\n    this.filter = '(&' + defaultGroupFilter + utils.getCompoundFilter(this.opts.filter) + ')'\n  } else {\n    this.filter = `(&${this.filter})`\n  }\n\n  this.groups = []\n  this.localOpts = {}\n}\n\n/**\n * The interator function for `async.forEach`.\n *\n * @param {object} result An LDAP search entry result.\n * @param {function} acb The internal callback from `async.forEach`.\n */\nGroupsFinder.prototype.asyncIterator = function asyncIterator (result, acb) {\n  if (!utils.isGroupResult(result)) {\n    return acb()\n  }\n  const group = new Group(\n    // not localOpts because it includes extra attributes just for the query\n    utils.pickAttributes(result, this.opts.attributes || ad.defaultAttributes.group)\n  )\n  log.trace('found group for query \"%s\". group: %j',\n    utils.truncateLogOutput(this.filter), group)\n  this.groups.push(group)\n\n  // get users in group if desired\n  if (utils.includeGroupMembershipFor(this.localOpts, 'group')) {\n    const getUsersCallback = (err, groups) => {\n      if (err) {\n        return acb(err)\n      }\n\n      group.groups = groups\n      ad.emit('group', group)\n      acb()\n    }\n\n    ad.getGroupMembershipForDN(this.localOpts, group.dn, getUsersCallback)\n  } else {\n    ad.emit('group', group)\n    acb()\n  }\n}\n\n/**\n * The completion callback for `async.forEach'.\n *\n * @param {Error} err\n */\nGroupsFinder.prototype.asyncCallback = function asyncCallback (err) {\n  if (err) {\n    return this.callback(err)\n  }\n\n  log.trace('%d group(s) found for query \"%s\". Groups: %j',\n    this.groups.length, utils.truncateLogOutput(this.localOpts.filter), this.groups)\n\n  ad.emit('groups', this.groups)\n  this.callback(null, this.groups)\n}\n\n/**\n * Should be the only method you need to invoke. It uses the configuration\n * created during construction to issue the search.\n */\nGroupsFinder.prototype.find = function find () {\n  this.localOpts = Object.assign(\n    {},\n    this.opts,\n    {\n      filter: this.filter,\n      scope: 'sub',\n      attributes: utils.joinAttributes(\n        this.opts.attributes || ad.defaultAttributes.group,\n        utils.getRequiredLdapAttributesForGroup(this.opts)\n      )\n    }\n  )\n\n  search(this.localOpts, this.onComplete.bind(this))\n}\n\n/**\n * Invoked when the search has completed.\n *\n * @param {Error} err\n * @param {array} results\n */\nGroupsFinder.prototype.onComplete = function onComplete (err, results) { // jshint -W071\n  if (err) {\n    if (this.callback) {\n      this.callback(err)\n    }\n    return\n  }\n\n  if (results.length === 0) {\n    log.trace('Group not found for query \"%s\"', utils.truncateLogOutput(this.filter))\n    if (this.callback) {\n      this.callback(err, [])\n    }\n    return\n  }\n\n  async.forEach(\n    results,\n    this.asyncIterator.bind(this),\n    this.asyncCallback.bind(this)\n  )\n}\n\n/**\n * Wraps {@link GroupsFinder} so as to be compatible with the original\n * `findGroups` function.\n *\n * @param {LDAPQueryParameters} [opts]\n * @param {function} callback The callback to invoke when done.\n */\nfunction findGroups (opts, callback) {\n  let _opts = opts || {}\n  let _cb = callback\n\n  if (typeof opts === 'function') {\n    _cb = opts\n    _opts = ''\n  }\n  if (typeof opts === 'string' && opts.length > 0) {\n    _opts = {\n      filter: '(&' + defaultGroupFilter + utils.getCompoundFilter(opts) + ')'\n    }\n  }\n  log.trace('findGroups(%j)', _opts)\n\n  const groupsFinder = new GroupsFinder(_opts, _cb)\n  return groupsFinder.find()\n}\n\nmodule.exports = function init ($ad, $log) {\n  ad = $ad\n  log = $log\n  search = require('./search')(ad, log)\n\n  return findGroups\n}\n", "'use strict'\n\nconst async = require('async')\nconst utils = require('./utilities')\n\nconst User = require('./../models/user')\n\nlet ad\nlet log\nlet search\n\nconst defaultUserFilter = '(|(objectClass=user)(objectClass=person))(!(objectClass=computer))(!(objectClass=group))'\n\n/**\n * An interface for finding users within the LDAP tree.\n *\n * @private\n * @param {LDAPQueryParameters} opts LDAP parameters to use.\n * @param {boolean} includeMembership Whether or not to include a users's\n * group memberships.\n * @param {function} callback Callback to invoke when done.\n * @constructor\n */\nfunction UsersFinder (opts, includeMembership, callback) {\n  this.opts = opts\n  this.includeMembership = includeMembership\n  this.callback = callback\n\n  this.users = []\n}\n\n/**\n * Used as the `async.forEach` iterator function.\n *\n * @param {object} result A user search result entry.\n * @param {function} acb The `async` callback to invoke.\n */\nUsersFinder.prototype.asyncIterator = function asyncIterator (result, acb) {\n  if (!utils.isUserResult(result)) {\n    return acb()\n  }\n\n  const user = new User(\n    utils.pickAttributes(result, this.opts.attributes || ad.defaultAttributes.user)\n  )\n  this.users.push(user)\n\n  // get group memberships if desired\n  if (utils.includeGroupMembershipFor(this.opts, 'user') || this.includeMembership) {\n    ad.getGroupMembershipForDN(this.opts, user.dn, (err, groups) => {\n      if (err) {\n        return acb(err)\n      }\n\n      user.groups = groups\n      ad.emit('user', user)\n      acb()\n    })\n  } else {\n    ad.emit('user', user)\n    acb()\n  }\n}\n\n/**\n * Used as the `async.forEach` completion callback.\n *\n * @param {Error} err\n */\nUsersFinder.prototype.asyncCallback = function asyncCallback (err) {\n  if (err) {\n    this.callback(err)\n  }\n\n  log.trace('%d user(s) found for query \"%s\". Users: %j',\n    this.users.length, utils.truncateLogOutput(this.opts.filter), this.users\n  )\n  ad.emit('users', this.users)\n  this.callback(null, this.users)\n}\n\n/**\n * The only method you should need to invoke. It uses the configuration\n * established during construction to find the users and return them\n * via the provided callback.\n */\nUsersFinder.prototype.find = function find () {\n  const localOpts = Object.assign(\n    {},\n    this.opts,\n    {\n      filter: this.opts.filter || `(&${defaultUserFilter})`,\n      scope: 'sub',\n      attributes: utils.joinAttributes(\n        this.opts.attributes || ad.defaultAttributes.user,\n        utils.getRequiredLdapAttributesForUser(this.opts),\n        ['objectCategory']\n      )\n    }\n  )\n\n  search(localOpts, (err, results) => {\n    if (err) {\n      return this.callback(err)\n    }\n\n    if (results.length === 0) {\n      log.trace('No users found matching query \"%s\"',\n        utils.truncateLogOutput(localOpts.filter))\n      return this.callback(null, this.users)\n    }\n\n    // Parse the results in parallel.\n    async.forEach(results,\n      this.asyncIterator.bind(this),\n      this.asyncCallback.bind(this)\n    )\n  })\n}\n\n/**\n * A wrapper around {@link UsersFinder} to retain compatibility with\n * the original `findUsers` function.\n *\n * @private\n * @param {LDAPQueryParameters} opts LDAP parameters to use.\n * @param {boolean} includeMembership Whether or not to include a users's\n * group memberships.\n * @param {function} callback The callback to invoke when done.\n */\nfunction findUsers (opts, includeMembership, callback) {\n  let _opts = opts\n  let _inclMembership = includeMembership\n  let _cb = callback\n\n  if (typeof includeMembership === 'function') {\n    _cb = includeMembership\n    _inclMembership = false\n  }\n  if (typeof opts === 'function') {\n    _cb = opts\n    _opts = ''\n  }\n  if (typeof opts === 'string' && opts.length > 0) {\n    _opts = {\n      filter: '(&' + defaultUserFilter + utils.getCompoundFilter(opts) + ')'\n    }\n  }\n  log.trace('findUsers(%j,%s)', _opts, _inclMembership)\n\n  const finder = new UsersFinder(_opts, _inclMembership, _cb)\n  return finder.find()\n}\n\nmodule.exports = function init ($ad, $log) {\n  ad = $ad\n  log = $log\n  search = require('./search')(ad, log)\n  return findUsers\n}\n", "'use strict'\n\nconst events = require('events')\nconst util = require('util')\nconst ldap = require('ldapjs')\nconst async = require('async')\nconst merge = require('merge-options')\n\nconst Group = require('./models/group')\nconst utils = require('./components/utilities')\nconst searcher = require('./components/search')\nlet search = null\n\nconst isPasswordLoggingEnabled = false\n\nlet log = require('abstract-logging')\n\nconst defaultPageSize = 1000 // The maximum number of results that AD will return in a single call. Default=1000\n\n/**\n * Determines which attributes are returned for LDAP queries for each type\n * of LDAP object.\n *\n * Default `user` attributes:\n * + cn\n * + comment\n * + description\n * + displayName\n * + distinquishedName\n * + dn\n * + employeeID\n * + givenName\n * + initials\n * + lockoutTime\n * + mail\n * + pwdLastSet\n * + sAMAccountName\n * + sn\n * + userAccountControl\n * + userPrincipalName\n * + whenCreated\n *\n * Default `group` attributes:\n * + cn\n * + description\n * + distinguishedName\n * + dn\n * + objectCategory\n *\n * @property {array} [user]\n * @property {array} [group]\n * @typedef {object} DefaultAttributes\n */\nlet defaultAttributes, originalDefaultAttributes\ndefaultAttributes = originalDefaultAttributes = {\n  user: [\n    'dn', 'distinguishedName',\n    'userPrincipalName', 'sAMAccountName', /* 'objectSID', */ 'mail',\n    'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',\n    'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',\n    'comment', 'description'\n  ],\n  group: [\n    'dn', 'cn', 'description', 'distinguishedName', 'objectCategory'\n  ]\n}\n\n/**\n * @property {boolean} [enabled] Whether or not to chase referrals.\n *                               Default: false.\n * @property {array} [exclude] An array of regular expressions to match for\n *                            referral exclusion even when enabled.\n * @typedef {object} DefaultReferrals\n */\nlet defaultReferrals, originalDefaultReferrals\ndefaultReferrals = originalDefaultReferrals = {\n  enabled: false,\n  // Active directory returns the following partitions as default referrals which we don't want to follow\n  exclude: [\n    'ldaps?://ForestDnsZones\\\\..*/.*',\n    'ldaps?://DomainDnsZones\\\\..*/.*',\n    'ldaps?://.*/CN=Configuration,.*'\n  ]\n}\n\n/**\n * Base configuration object for {@link ActiveDirectory}.\n *\n * @example\n * {\n *    url: 'ldap://domain.com',\n *    baseDN: 'dc=domain,dc=com',\n *    username: 'admin@domain.com',\n *    password: 'supersecret',\n *    pageSize: 1000,\n *    referrals: {\n *      enabled: true\n *    },\n *    attributes: {\n *      user: ['sAMAccountName', 'givenName', 'sn', 'mail'],\n *      group: ['cn', 'description', 'dn']\n *    }\n *  }\n *\n * @property {string} url Full LDAP URL to the target Active Directory server.\n * @property {string} baseDN The root DN for all operations.\n * @property {string} username Any Active Directory acceptible username:\n *                            'user', 'user@domain.com', 'domain\\user',\n *                            'cn=user,ou=users,dc=root'.\n * @property {string} password The password for the given `username`.\n * @property {int} [pageSize] The default size for paged query results. The\n * default is set to Active Directory's default: 1000.\n * @property {EntryParser} [entryParser]\n * @property {DefaultReferrals} [referrals]\n * @property {DefaultAttributes} [attributes]\n * @typedef {object} ADOptions\n */\n\n/**\n * Allows for a custom function to be specified for parsing of the resulting\n * LDAP object. Examples include augmenting LDAP data with external data from an\n * RDBMs. If `null` is returned, the result is excluded.\n *\n * @example\n * function(entry, raw, callback) {\n *   // returning null to exclude result\n *   if (entry.ignore) return(null);\n *\n *   entry.retrievedAt = new Date();\n *   entry.preferredServer = getPreferredServerFromDatabase(entry.userPrincipalName);\n *\n *   callback(entry);\n * }\n * @typedef {function} EntryParser\n */\n\nconst defaultEntryParser = function (entry, raw, callback) {\n  if (Object.prototype.hasOwnProperty.call(raw, 'objectSid')) {\n    entry.objectSid = utils.binarySidToStringSid(raw.objectSid)\n  }\n  if (Object.prototype.hasOwnProperty.call(raw, 'objectGUID')) {\n    entry.objectGUID = utils.binarySidToStringSid(raw.objectGUID)\n  }\n  callback(entry)\n}\n\n/**\n * When supplying multiple arguments to the {@link ActiveDirectory} constructor,\n * the `defaults` parameter can be used to override some confiuration\n * properties.\n *\n * @property {DefaultAttributes} [attributes]\n * @property {DefaultReferrals} [referrals]\n * @property {EntryParser} [entryParser]\n * @typedef {object} DefaultsParam\n */\n\n/**\n * Agent for retrieving ActiveDirectory user & group information.\n *\n * @public\n * @constructor\n * @param {ADOptions|string} options A full {@link ADOptions} object or\n * a string URL pointing to the remote Active Directory server\n * (e.g. ldap://domain.com). If an object is supplied, all other parameters\n * will be ignored.\n * @param {string} [baseDN] The default base container where all LDAP queries\n * originate from. (i.e. dc=domain,dc=com)\n * @param {string} [username] The administrative username or dn of the user for\n * retrieving user & group information.\n * i.e. Must be a DN or a userPrincipalName (email)\n * @param {string} [password] The administrative password of the specified user.\n * @param {DefaultsParam} [defaults] .\n *\n * @returns {ActiveDirectory}\n */\nfunction ActiveDirectory (options) {\n  if (!(this instanceof ActiveDirectory)) {\n    // Guard against missing `new` keyword since we don't know if the\n    // user is in a strict environment or not.\n    const inst = Object.create(ActiveDirectory.prototype)\n    ActiveDirectory.apply(inst, arguments)\n    return inst\n  }\n\n  if (arguments.length === 0) {\n    return this\n  }\n\n  if ((typeof options) === 'string') {\n    const _opts = {\n      url: options,\n      baseDN: arguments[1],\n      username: arguments[2],\n      password: arguments[3],\n      defaults: arguments[4] || null\n    }\n    return new ActiveDirectory(_opts)\n  }\n\n  const defaultOptions = {\n    url: '',\n    baseDN: '',\n    bindDN: options.username || '',\n    bindCredentials: options.password || '',\n    referrals: defaultReferrals,\n    attributes: defaultAttributes,\n    pageSize: options.pageSize || defaultPageSize,\n    defaults: {},\n    opts: {\n      url: '',\n      bindDN: '',\n      bindCredentials: '',\n      entryParser: defaultEntryParser\n    }\n  }\n\n  const ldapOptions = utils.getLdapClientOpts(options)\n  const customEntryParser = options.entryParser ? { entryParser: options.entryParser } : {}\n  ldapOptions.bindDN = ldapOptions.bindDN || options.username\n  ldapOptions.bindCredentials = ldapOptions.bindCredentials || options.password\n  const _options = merge({}, defaultOptions, options)\n  Object.defineProperties(this, {\n    opts: {\n      value: merge({}, defaultOptions.opts, ldapOptions, customEntryParser)\n    },\n    baseDN: { value: _options.baseDN },\n    pageSize: { value: _options.pageSize },\n    defaultAttributes: {\n      value: merge(\n        {}, originalDefaultAttributes, options.attributes,\n        (_options.defaults) ? _options.defaults.attributes : {}\n      )\n    },\n    defaultReferrals: {\n      value: merge(\n        {}, originalDefaultReferrals, _options.referrals,\n        (_options.defaults) ? _options.defaults.referrals : {}\n      )\n    }\n  })\n\n  log = _options.logging || log\n\n  defaultAttributes = this.defaultAttributes\n  defaultReferrals = this.defaultReferrals\n\n  log.trace('Using username/password (%s/%s) to bind to ActiveDirectory (%s).', this.opts.bindDN,\n    isPasswordLoggingEnabled ? this.opts.bindCredentials : '********', this.opts.url)\n  log.trace('Referrals are %s', defaultReferrals.enabled\n    ? 'enabled. Exclusions: ' + JSON.stringify(defaultReferrals.exclude)\n    : 'disabled'\n  )\n  log.trace('Default user attributes: %j', defaultAttributes.user || [])\n  log.trace('Default group attributes: %j', defaultAttributes.group || [])\n\n  events.EventEmitter.call(this)\n  search = searcher(this, log)\n}\nutil.inherits(ActiveDirectory, events.EventEmitter)\n\n/**\n * Expose ldapjs filters to avoid TypeErrors for filters\n * @static\n */\nActiveDirectory.filters = ldap.filters\n\n/**\n * Only emits an event if there are any listeners listening.\n *\n * @param {string} event The type of event to emit.\n * @param {*} data The data to send with the emission.\n * @override\n */\nActiveDirectory.prototype.emit = function emit (event, data) {\n  if (this.listenerCount(event) > 0) {\n    events.EventEmitter.prototype.emit.call(this, event, data)\n  }\n}\n\n/**\n * Gets all of the groups that the specified distinguishedName (DN) belongs to.\n *\n * @private\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} dn The distinguishedName (DN) to find membership of.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getGroupMembershipForDN = function ggmfd (opts, dn, stack, callback) {\n  const getter = require('./components/getGroupMembershipForDN')(this, log)\n  return getter(opts, dn, stack, callback)\n}\n\n/**\n * For the specified filter, return the distinguishedName (dn) of all the\n * matched entries.\n *\n * @private\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @params {(object|string)} filter The LDAP filter to execute. Optionally a\n * custom LDAP query object can be specified.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getDistinguishedNames = function gdns (opts, filter, callback) {\n  let _opts = opts || {}\n  let _filter = filter\n  let _cb = callback\n\n  if (typeof filter === 'function') {\n    _cb = filter\n    _filter = opts\n    _opts = {}\n  }\n  if (typeof opts === 'string') {\n    _filter = opts\n    _opts = {}\n  }\n  log.trace('getDistinguishedNames(%j,%j)', _opts, _filter)\n\n  _opts = merge({},\n    {\n      filter: _filter,\n      scope: 'sub',\n      attributes: utils.joinAttributes(_opts.attributes || [], ['dn'])\n    },\n    _opts\n  )\n  search(_opts, (err, results) => {\n    if (err) {\n      return _cb(err)\n    }\n\n    const dns = results.map(result => result.dn)\n    log.trace(\n      '%d distinguishedName(s) found for LDAP query: \"%s\". Results: %j',\n      results.length, utils.truncateLogOutput(_opts.filter), results\n    )\n    _cb(null, dns)\n  })\n}\n\n/**\n * Gets the distinguished name for the specified user\n * (userPrincipalName/email or sAMAccountName).\n *\n * @private\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {String} username The name of the username to retrieve the\n * distinguishedName (dn).\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getUserDistinguishedName = function gudn (opts, username, callback) {\n  let _opts = opts || {}\n  let _username = username\n  let _cb = callback\n\n  if (typeof username === 'function') {\n    _cb = username\n    _username = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  log.trace('getDistinguishedName(%j,%s)', _opts, _username)\n\n  if (utils.isDistinguishedName(_username)) {\n    log.trace('\"%s\" is already a distinguishedName. NOT performing query.', _username)\n    return _cb(null, _username)\n  }\n\n  this.getDistinguishedNames(_opts, utils.getUserQueryFilter(_username), (err, dns) => {\n    if (err) {\n      return _cb(err)\n    }\n\n    log.trace('%d distinguishedName(s) found for user: \"%s\". Returning first dn: \"%s\"',\n      dns.length, _username, dns[0])\n    _cb(null, dns[0])\n  })\n}\n\n/**\n * Gets the distinguished name for the specified group (cn).\n *\n * @private\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} groupName The name of the group to retrieve the\n * distinguishedName (dn).\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getGroupDistinguishedName = function ggdn (opts, groupName, callback) {\n  let _opts = opts || {}\n  let _groupName = groupName\n  let _cb = callback\n\n  if (typeof groupName === 'function') {\n    _cb = groupName\n    _groupName = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  log.trace('getGroupDistinguishedName(%j,%s)', _opts, _groupName)\n\n  if (utils.isDistinguishedName(_groupName)) {\n    log.trace('\"%s\" is already a distinguishedName. Skipping query.', _groupName)\n    return _cb(null, _groupName)\n  }\n\n  this.getDistinguishedNames(_opts, utils.getGroupQueryFilter(_groupName), (err, dns) => {\n    if (err) {\n      return _cb(err)\n    }\n\n    log.trace('%d distinguishedName(s) found for group \"%s\". Returning first dn: \"%s\"',\n      dns.length, _groupName, dns[0])\n    _cb(null, dns[0])\n  })\n}\n\n/**\n * For the specified group, retrieve all of the users that belong to the group.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} groupName The name of the group to retrieve membership from.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getUsersForGroup = function getUsersForGroup (opts, groupName, callback) {\n  const searcher = require('./components/getUsersForGroup')(this, log)\n  return searcher(opts, groupName, callback)\n}\n\n/**\n * For the specified username, get all of the groups that the user is a\n * member of.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} username The username to retrieve membership\n * information about.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getGroupMembershipForUser = function getGroupMembershipForUser (opts, username, callback) {\n  const results = []\n  let _opts = opts\n  let _username = username\n  let _cb = callback\n\n  if (typeof username === 'function') {\n    _cb = username\n    _username = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts || {})\n  log.trace('getGroupMembershipForUser(%j,%s)', _opts, _username)\n\n  const groupDnCallback = (err, groups) => {\n    if (err) {\n      return _cb(err, results)\n    }\n\n    groups.forEach((g) => {\n      const result = new Group(\n        utils.pickAttributes(g, _opts.attributes || this.defaultAttributes.group)\n      )\n      this.emit('group', result)\n      results.push(result)\n    })\n\n    if (_cb) {\n      _cb(err, results)\n    }\n  }\n\n  this.getUserDistinguishedName(_opts, _username, (err, dn) => {\n    if (err) {\n      return _cb(err, results)\n    }\n\n    if (!dn) {\n      log.trace('Could not find a distinguishedName for the specified username: \"%s\"', _username)\n      return _cb(err, results)\n    }\n    this.getGroupMembershipForDN(_opts, dn, groupDnCallback)\n  })\n}\n\n/**\n * For the specified group, get all of the groups that the group is a member of.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} groupName The group to retrieve membership information about.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getGroupMembershipForGroup = function getGroupMembershipForGroup (opts, groupName, callback) {\n  let _opts = opts || {}\n  let _groupName = groupName\n  let _cb = callback\n\n  if (typeof groupName === 'function') {\n    _cb = groupName\n    _groupName = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  log.trace('getGroupMembershipForGroup(%j,%s)', _opts, _groupName)\n\n  this.getGroupDistinguishedName(_opts, _groupName, (err, dn) => {\n    if (err) {\n      return _cb(err)\n    }\n\n    if (!dn) {\n      log.trace('Could not find a distinguishedName for the specified group name: \"%s\"', _groupName)\n      return _cb()\n    }\n\n    this.getGroupMembershipForDN(_opts, dn, (err, groups) => {\n      if (err) {\n        return _cb(err)\n      }\n\n      const results = []\n      groups.forEach((g) => {\n        const group = new Group(\n          utils.pickAttributes(g, _opts.attributes || this.defaultAttributes.group)\n        )\n        this.emit('group', group)\n        results.push(group)\n      })\n      _cb(err, results)\n    })\n  })\n}\n\n/**\n * Checks to see if the specified username exists.\n *\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters to\n * execute.\n * @param {string} username The username to check to see if it exits.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.userExists = function userExists (opts, username, callback) {\n  let _opts = opts || {}\n  let _username = username\n  let _cb = callback\n\n  if (typeof username === 'function') {\n    _cb = username\n    _username = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts || {})\n  log.trace('userExists(%j,%s)', _opts, _username)\n\n  this.findUser(_opts, _username, function (err, user) {\n    if (err) {\n      return _cb(err)\n    }\n\n    log.trace('\"%s\" %s exist.', _username, (user != null) ? 'DOES' : 'DOES NOT')\n    _cb(null, user != null)\n  })\n}\n\n/**\n * Checks to see if the specified group exists.\n *\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters to\n * execute.\n * @param {string} groupName The group to check to see if it exists.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.groupExists = function groupExists (opts, groupName, callback) {\n  let _opts = opts || {}\n  let _groupName = groupName\n  let _cb = callback\n\n  if (typeof groupName === 'function') {\n    _cb = groupName\n    _groupName = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  log.trace('groupExists(%j,%s)', _opts, _groupName)\n\n  this.findGroup(_opts, _groupName, function (err, result) {\n    if (err) {\n      return _cb(err)\n    }\n\n    log.trace('\"%s\" %s exist.', _groupName, (result != null) ? 'DOES' : 'DOES NOT')\n    _cb(null, result != null)\n  })\n}\n\n/**\n * Checks to see if the specified user is a member of the specified group.\n *\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters to\n * execute.\n * @param {string} username The username to check for membership.\n * @param {string} groupName The group to check for membership.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.isUserMemberOf = function isUserMemberOf (opts, username, groupName, callback) {\n  let _opts = opts\n  let _username = username\n  let _groupName = groupName\n  let _cb = callback\n\n  if (typeof groupName === 'function') {\n    _cb = groupName\n    _groupName = username\n    _username = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  log.trace('isUserMemberOf(%j,%s,%s)', _opts, _username, _groupName)\n\n  _opts.attributes = ['cn', 'dn']\n  this.getGroupMembershipForUser(_opts, _username, function (err, groups) {\n    if (err) {\n      return _cb(err)\n    }\n    if (groups.length === 0) {\n      log.trace('\"%s\" IS NOT a member of \"%s\". No groups found for user.', _username, _groupName)\n      return _cb(null, false)\n    }\n\n    // Check to see if the group.distinguishedName or group.cn matches the list of\n    // retrieved groups.\n    const lowerCaseGroupName = _groupName.toLowerCase().replace(/\\s/g, '')\n    const result = groups.filter((g) => g.dn.toLowerCase().replace(/\\s/g, '') === lowerCaseGroupName || g.cn.toLowerCase().replace(/\\s/g, '').includes(lowerCaseGroupName)).length > 0\n    log.trace('\"%s\" %s a member of \"%s\"', _username, result ? 'IS' : 'IS NOT', _groupName)\n    _cb(null, result)\n  })\n}\n\n/**\n * Perform a generic search for the specified LDAP query filter. This function\n * will return both groups and users that match the specified filter. Any\n * results not recognized as a user or group (i.e. computer accounts, etc.) can\n * be found in the 'other' property of the result.\n *\n * @example <caption>result object</caption>\n * {\n *   users: [],\n *   groups: [],\n *   other: []\n * }\n *\n * @public\n * @param {(LDAPQueryParameters|string)} [opts] Optional LDAP query string\n * parameters to execute. Optionally, if only a string is provided, then the\n * string is assumed to be an LDAP filter.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.find = function find (opts, callback) {\n  const finder = require('./components/find')(this, log)\n  finder(opts, callback)\n}\n\n/**\n * Perform a generic search on the Deleted Objects container for\n * Active Directory. For this method to work correctly, the tombstone feature\n * for active directory must be enabled. A tombstoned object has most of the\n * attributes stripped from the object.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute. Optionally, if only a string is provided, then the string is\n * assumed to be an LDAP filter.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.findDeletedObjects = function find (opts, callback) {\n  let _opts = opts || {}\n  let _cb = callback\n\n  if (typeof opts === 'function') {\n    _cb = opts\n    _opts = {}\n  }\n  if (typeof opts === 'string') {\n    _opts = { filter: opts }\n  }\n  _opts = merge({}, _opts)\n  log.trace('findDeletedObjects(%j)', _opts)\n\n  const defaultDeletedAttributes = [\n    'attributeID', 'attributeSyntax', 'dnReferenceUpdate', 'dNSHostName', 'flatName',\n    'governsID', 'groupType', 'instanceType', 'lDAPDisplayName', 'legacyExchangeDN',\n    'mS-DS-CreatorSID', 'mSMQOwnerID', 'nCName', 'objectClass', 'objectGUID', 'objectSid',\n    'oMSyntax', 'proxiedObjectName', 'replPropertyMetaData', 'sAMAccountName', 'securityIdentifier',\n    'sIDHistory', 'subClassOf', 'systemFlags', 'trustPartner', 'trustDirection', 'trustType',\n    'trustAttributes', 'userAccountControl', 'uSNChanged', 'uSNCreated', 'whenCreated',\n    'msDS-AdditionalSam­AccountName', 'msDS-Auxiliary-Classes', 'msDS-Entry-Time-To-Die',\n    'msDS-IntId', 'msSFU30NisDomain', 'nTSecurityDescriptor', 'uid'\n  ]\n  const localOpts = merge({},\n    {\n      scope: 'one',\n      attributes: utils.joinAttributes(_opts.attributes || [], defaultDeletedAttributes),\n      controls: []\n    },\n    _opts\n  )\n\n  const searchDeletedObjects = (baseDN, options) => {\n    const innerOpts = merge({}, options, { includeDeleted: true })\n    search(baseDN, innerOpts, (err, results) => {\n      if (err) {\n        return _cb(err)\n      }\n\n      if (results.length === 0) {\n        log.trace('No deleted objects found for query \"%s\"', utils.truncateLogOutput(_opts.filter))\n        this.emit('done', null)\n        return _cb()\n      }\n\n      const deletedItems = []\n      async.forEach(\n        results,\n\n        (result, acb) => {\n          const deletedItem = utils.pickAttributes(result, _opts.attributes || {})\n          this.emit('entry:deleted', deletedItem)\n          deletedItems.push(deletedItem)\n        },\n\n        (err) => {\n          log.trace(\n            '%d deleted objects found for query \"%s\". Results: %j',\n            deletedItems.length, utils.truncateLogOutput(localOpts.filter), deletedItems\n          )\n          this.emit('deleted', deletedItems)\n          _cb(err, deletedItems)\n        }\n      )\n    })\n  }\n\n  if (!localOpts.baseDN) {\n    log.trace('No baseDN specified for Deleted Object. Querying RootDSE at %s.', this.opts.url)\n    this.getRootDSE(this.opts.url, ['defaultNamingContext'], (err, result) => {\n      if (err) {\n        return _cb(err)\n      }\n\n      log.trace('Retrieved defaultNamingContext (%s) from RootDSE at %s.', result.defaultNamingContext, this.opts.url)\n      searchDeletedObjects('CN=Deleted Objects,' + result.defaultNamingContext, localOpts)\n    })\n  } else {\n    searchDeletedObjects(localOpts.baseDN, localOpts)\n  }\n}\n\n/**\n * Retrieves the specified group.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} groupName The group (cn) to retrieve information about.\n * Optionally can pass in the distinguishedName (dn) of the group to retrieve.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.findGroup = function findGroup (opts, groupName, callback) {\n  let _opts = opts || {}\n  let _groupName = groupName\n  let _cb = callback\n\n  if (typeof groupName === 'function') {\n    _cb = groupName\n    _groupName = opts\n    _opts = {}\n  }\n  if (typeof opts === 'string') {\n    _groupName = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  _opts.filter = (_opts.filter)\n    ? _opts.filter\n    : utils.getGroupQueryFilter(_groupName)\n  log.trace('findGroup(%j,%s)', _opts, _groupName)\n\n  const finder = require('./components/findGroups')(this, log)\n  finder(_opts, (err, groups) => {\n    if (err) {\n      return _cb(err)\n    }\n\n    if (groups && groups.length > 0) {\n      return _cb(null, groups[0])\n    }\n\n    return _cb()\n  })\n}\n\n/**\n * Perform a generic search for groups that match the specified filter.\n * The default LDAP filter for groups is specified as\n * `(&(objectClass=group)(!(objectClass=computer))(!(objectClass=user))(!(objectClass=person)))`.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute. Optionally, if only a string is provided, then the string is\n * assumed to be an LDAP filter that will be appended as the last parameter\n * in the default LDAP filter.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.findGroups = function findGroup (opts, callback) {\n  const finder = require('./components/findGroups')(this, log)\n  return finder(opts, callback)\n}\n\n/**\n * Retrieves the specified user.\n *\n * @public\n * @param {LDAPQueryParameters} [opts] Optional LDAP query string parameters\n * to execute.\n * @param {string} username The username to retrieve information about.\n * Optionally can pass in the distinguishedName (dn) of the user to retrieve.\n * @param {boolean} [includeMembership] OBSOLETE; NOT NOT USE. Indicates if the\n * results should include group memberships for the user. Defaults to `false`.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.findUser = function findUser (opts, username, includeMembership, callback) {\n  let _opts = opts || {}\n  let _username = username\n  let _inclMembership = includeMembership\n  let _cb = callback\n\n  if (typeof includeMembership === 'function') {\n    _cb = includeMembership\n    _inclMembership = null\n  }\n  if (typeof username === 'function') {\n    _cb = username\n    _username = opts\n    _opts = {}\n  }\n  if (typeof username === 'boolean') {\n    _inclMembership = username\n    _username = opts\n    _opts = {}\n  }\n  if (typeof opts === 'string') {\n    _username = opts\n    _opts = {}\n  }\n  _opts = merge({}, _opts)\n  _opts.filter = (_opts.filter)\n    ? _opts.filter\n    : utils.getUserQueryFilter(_username)\n  log.trace('findUser(%j,%s,%s)', _opts, _username, _inclMembership)\n\n  const finder = require('./components/findUsers')(this, log)\n  let isErrInvoked = false\n  return finder(_opts, _inclMembership, (err, users) => {\n    if (err && !isErrInvoked) {\n      // For some unknown reason, the onClientError function in #search is\n      // getting invoked twice during the ctor#InvalidCredentialsError\n      // test. This hacks around the issue.\n      isErrInvoked = true\n      return _cb(err)\n    }\n\n    if (users && users.length > 0) {\n      return _cb(null, users[0])\n    }\n\n    return _cb()\n  })\n}\n\n/**\n * Perform a generic search for users that match the specified filter. The\n * default LDAP filter for users is specified as\n * `(&(|(objectClass=user)(objectClass=person))(!(objectClass=computer))(!(objectClass=group)))`.\n *\n * @public\n * @param {(LDAPQueryParameters|string)} [opts] Optional LDAP query string\n * parameters to execute. Optionally, if only a string is provided, then the\n * string is assumed to be an LDAP filter that will be appended as the last\n * parameter in the default LDAP filter.\n * @param {boolean} [includeMembership] OBSOLETE; NOT NOT USE. Indicates if the\n * results should include group memberships for the user. Defaults to `false`.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.findUsers = function findUsers (opts, includeMembership, callback) {\n  const finder = require('./components/findUsers')(this, log)\n  return finder(opts, includeMembership, callback)\n}\n\n/**\n * Authenticates the username and password by doing a simple bind with the\n * specified credentials.\n *\n * @public\n * @param {string} username The username to authenticate.\n * @param {string} password The password to use for authentication.\n * @param {function} callback The callback to execute when the authenication is\n * completed. The callback is a standard Node style callback with `error` and\n * `result` parameters. The `result` parameter will always be either `true` or\n * `false`.\n */\nActiveDirectory.prototype.authenticate = function authenticate (username, password, callback) {\n  log.trace('authenticate(%j,%s)', username, isPasswordLoggingEnabled ? password : '********')\n\n  // Skip authentication if an empty username or password is provided.\n  if ((!username) || (!password)) {\n    const err = {\n      code: 0x31,\n      errno: 'LDAP_INVALID_CREDENTIALS',\n      description: 'The supplied credential is invalid'\n    }\n    return callback(err, false)\n  }\n\n  const client = utils.createClient(null, null, this)\n  let callbackInvoked = false\n  function invokeCallback (err, result) {\n    if (callbackInvoked) return\n    callbackInvoked = true\n    callback(err, result)\n  }\n  client.on('connectTimeout', (err) => {\n    this.emit('error', err)\n    return invokeCallback(err, false)\n  })\n  client.on('error', (err) => {\n    // only used on socket connection failure since it doesn't invoke bind cb\n    this.emit('error', err)\n    return invokeCallback(err, false)\n  })\n  client.bind(username, password, (err) => {\n    client.unbind()\n    const message = util.format('Authentication %s for \"%s\" as \"%s\" (password: \"%s\")',\n      err ? 'failed' : 'succeeded',\n      this.opts.url, username, isPasswordLoggingEnabled ? password : '********')\n    if (err) {\n      log.trace('%s. Error: %s', message, err)\n      this.emit('error', err)\n      return invokeCallback(err, false)\n    }\n\n    log.trace(message)\n    return invokeCallback(err, true)\n  })\n}\n\n/**\n * Retrieves the root DSE for the specified url\n *\n * @public\n * @param {string} url The url to retrieve the root DSE for.\n * @param {array} [attributes] The optional list of attributes to retrieve.\n * Returns all if not specified.\n * @param {function} callback The callback to execute when completed.\n */\nActiveDirectory.prototype.getRootDSE = function getRootDSE (url, attributes, callback) { // jshint -W071\n  let _url = url\n  let _attributes = attributes\n  let _cb = callback\n\n  if (typeof url !== 'string' && this instanceof ActiveDirectory) {\n    _url = this.url || this.opts.url\n    _cb = url\n  }\n\n  if (typeof attributes === 'function') {\n    _attributes = null\n    _cb = attributes\n  }\n\n  _attributes = _attributes || ['*']\n\n  if (!url) {\n    throw new Error('Must specify an URL in the form: ldap://example.com:389')\n  }\n  log.trace('getRootDSE(%s,%j)', _url, _attributes)\n\n  const client = utils.createClient.call(this, _url, this)\n  client.on('error', (err) => {\n    // only needed for bind errors\n    if (err.errno !== 'ECONNRESET') { // we don't care about ECONNRESET\n      log.trace('A connection error occured searching for root DSE at %s. Error: %s', _url, err)\n      this.emit('error', err)\n    }\n  })\n  // Anonymous bind\n  client.bind('', '', function (err) {\n    if (err) {\n      log.trace('Anonymous bind to \"%s\" failed. Error: %s', url, err)\n      return _cb(err)\n    }\n\n    client.search('', { scope: 'base', attributes: _attributes, filter: '(objectClass=*)' }, function (err, result) {\n      if (err) {\n        log.trace('Root DSE search failed for \"%s\". Error: %s', url, err)\n        return _cb(err)\n      }\n\n      result.on('end', function () {\n        client.unbind()\n      })\n      result.on('searchEntry', function (entry) {\n        const obj = entry.object\n        delete obj.controls\n        _cb(null, obj)\n      })\n    })\n  })\n}\n\nActiveDirectory.getRootDSE = function staticGetRootDSE (url, attributes, cb) {\n  if (typeof url !== 'string') {\n    throw new Error('Must specify an URL in the form: ldap://example.com:389')\n  }\n\n  if (typeof attributes === 'function') {\n    return ActiveDirectory.prototype.getRootDSE(url, null, attributes)\n  }\n\n  return ActiveDirectory.prototype.getRootDSE(url, attributes, cb)\n}\n\nActiveDirectory.defaultAttributes = defaultAttributes\n\nmodule.exports = ActiveDirectory\n", "'use strict'\n\nconst util = require('util')\nconst AD = require('./activedirectory')\n\nfunction promiseWrapper (instance, method, args) {\n  function promise (resolve, reject) {\n    const cb = function (err, result) {\n      return (err) ? reject(err) : resolve(result)\n    }\n\n    const _args = [].concat(Array.from(args), cb)\n    AD.prototype[method].apply(instance, _args)\n  }\n\n  return new Promise(promise)\n}\n\n/**\n * A wrapper object for {@link ActiveDirectory}. This wrapper exposes all of the\n * methods as `Promise` returning methods.\n *\n * For details on any of the methods, reference the {@link ActiveDirectory}\n * documentation; simply ignore the `callback` parameters.\n *\n * @example <caption>Authenticate a user</caption>\n *\n * const AD = require('activedirectory/lib/adpromise');\n * const ad = new AD({\n *   url: 'ldap://example.com',\n *   baseDN: 'dc=example,dc=com',\n *   username: 'reader',\n *   password: 'supersecret'\n * });\n *\n * ad.find('joe_user')\n *   .then((user) => {\n *     ad.authenticate(user.dn, 'letmein')\n *       .then((result) => {\n *         console.log(`login result: ${result}`);\n *       })\n *       .catch(console.error);\n *    })\n *    .catch(console.error);\n *\n * @constructor\n */\nfunction PromisedAD () {\n  AD.apply(this, arguments)\n}\nutil.inherits(PromisedAD, AD)\n\nPromisedAD.prototype.authenticate = function authenticate (username, password) {\n  return promiseWrapper(this, 'authenticate', arguments)\n}\n\nPromisedAD.prototype.find = function find (opts) {\n  return promiseWrapper(this, 'find', arguments)\n}\n\nPromisedAD.prototype.findDeletedObjects = function findDeletedObjects (opts) {\n  return promiseWrapper(this, 'findDeletedObjects', arguments)\n}\n\nPromisedAD.prototype.findGroup = function findGroup (opts, groupName) {\n  return promiseWrapper(this, 'findGroup', arguments)\n}\n\nPromisedAD.prototype.findGroups = function findGroups (opts) {\n  return promiseWrapper(this, 'findGroups', arguments)\n}\n\nPromisedAD.prototype.findUser = function findUser (opts, username, includeMembership) {\n  return promiseWrapper(this, 'findUser', arguments)\n}\n\nPromisedAD.prototype.findUsers = function findUsers (opts, includeMembership) {\n  return promiseWrapper(this, 'findUsers', arguments)\n}\n\n// private\nPromisedAD.prototype.getDistinguishedNames = function gdn (opts, filter) {\n  return promiseWrapper(this, 'getDistinguishedNames', arguments)\n}\n\n// private\nPromisedAD.prototype.getGroupDistinguishedName = function ggdn (opts, groupName) {\n  return promiseWrapper(this, 'getGroupDistinguishedName', arguments)\n}\n\n// private\nPromisedAD.prototype.getGroupMembershipForDN = function ggmfd (opts, dn) {\n  return promiseWrapper(this, 'getGroupMembershipForDN', arguments)\n}\n\nPromisedAD.prototype.getGroupMembershipForGroup = function ggmfg (opts, groupName) {\n  return promiseWrapper(this, 'getGroupMembershipForGroup', arguments)\n}\n\nPromisedAD.prototype.getGroupMembershipForUser = function ggmfu (opts, username) {\n  return promiseWrapper(this, 'getGroupMembershipForUser', arguments)\n}\n\nPromisedAD.prototype.getRootDSE = function getRootDSE (url, attributes) {\n  return promiseWrapper(this, 'getRootDSE', arguments)\n}\n\nPromisedAD.getRootDSE = function staticGetRootDSE (url, attributes) {\n  function promise (resolve, reject) {\n    const args = [url, attributes]\n    args.push((err, result) => {\n      return (err) ? reject(err) : resolve(result)\n    })\n    return AD.getRootDSE.apply(PromisedAD.prototype, args)\n  }\n  return new Promise(promise)\n}\n\n// private\nPromisedAD.prototype.getUserDistinguishedName = function gudn (opts, username) {\n  // Since this is used internally by ActiveDirectory, it can't return a\n  // Promise.\n  // TODO: make the internal call handle a Promise\n  return AD.prototype.getUserDistinguishedName.apply(this, arguments)\n  // return promiseWrapper(this, 'getUserDistinguishedNames', arguments);\n}\n\nPromisedAD.prototype.getUsersForGroup = function getUsersForGroup (opts, groupName) {\n  return promiseWrapper(this, 'getUsersForGroup', arguments)\n}\n\nPromisedAD.prototype.groupExists = function groupExists (opts, groupName) {\n  return promiseWrapper(this, 'groupExists', arguments)\n}\n\nPromisedAD.prototype.isUserMemberOf = function isUserMemberOf (opts, username, groupName) {\n  return promiseWrapper(this, 'isUserMemberOf', arguments)\n}\n\nPromisedAD.prototype.userExists = function userExists (opts, username) {\n  return promiseWrapper(this, 'userExists', arguments)\n}\n\nmodule.exports = PromisedAD\n", "module.exports = require('./lib/activedirectory')\nmodule.exports.promiseWrapper = require('./lib/adpromise')\n"],
  "mappings": "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",
  "names": ["require_assert", "Buffer", "Buffer", "seq", "Buffer", "bytes", "seq", "require_assert", "apply", "map", "filter", "filter", "filter", "require_lib", "filter", "require_and_filter", "require_approx_filter", "require_equality_filter", "require_ext_filter", "require_ge_filter", "require_le_filter", "require_not_filter", "require_or_filter", "require_presence_filter", "require_substr_filter", "f", "require_url", "filter", "require_errors", "cb", "once", "require_errors", "require_backoff", "require_util", "parallel", "tryEach", "filter", "filterLimit", "filterSeries", "whilst", "queue", "waterfall", "require_util", "require_verror", "once", "log", "retry", "require_client", "log", "index", "log", "index", "require_lib", "reject", "applyEach", "index", "once", "promiseCallback", "filter", "filter", "range", "entry", "log", "filter", "result", "log", "search", "err", "result", "referral", "log", "log", "filter", "members", "err", "log", "find", "log", "log", "log", "filter", "_filter", "searcher", "err", "invokeCallback", "reject", "filter"]
}
